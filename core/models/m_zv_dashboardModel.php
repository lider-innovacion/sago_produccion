<?php
	# Seguridad
	defined('INDEX_DIR') || exit('Developer Software');
	# Url Reemplazo _ para la palabra completa del modulo
	define('d_azp_civil_status_url_delete', str_replace('_', '', 'azp_civil_status/eliminate/delete/'));
	define('d_azp_civil_status_url_remove', str_replace('_', '', 'azp_civil_status/read/remove/'));
	define('d_azp_civil_status_url_restore', str_replace('_', '', 'azp_civil_status/read/restore/'));
	define('d_azp_civil_status_url_query', str_replace('_', '', 'azp_civil_status/read/query/'));
	
	final class m_zv_dashboardModel extends Models implements OCREND {
		public function __construct() {
			parent::__construct(DATABASE['name'], DATABASE['motor'], true);
		}

		# Query Sql Select
		final public function sql_controller_azp_user_role() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT COUNT(*) AS 'lbl_quanty',
					tc_azp_role." . d_azp_role_t_name . " AS 'lbl_azp_role_t_name'
				FROM " . t_azp_user . " tc_azp_user
				INNER JOIN " . t_azp_role . " tc_azp_role
					ON tc_azp_user." . d_azp_user_v_id_azp_role . "
						= tc_azp_role." . d_azp_role_id_azp_role . "
				GROUP BY tc_azp_role." . d_azp_role_id_azp_role . "
			");
		}

		# Query Sql Select
		final public function sql_controller_azp_role() {
			# Seleccionar los registros de la tabla
			return $this->db->query("SELECT COUNT(*) AS 'lbl_quanty' FROM " . t_azp_role . "");
		}

		# Query Sql Select
		final public function sql_controller_azp_user() {
			# Seleccionar los registros de la tabla
			return $this->db->query("SELECT COUNT(*) AS 'lbl_quanty' FROM " . t_azp_user . "");
		}

		# Query Sql Select
		final public function sql_controller_azp_role_user() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_user." . d_azp_user_id_azp_user . " AS 'lbl_azp_user_id_azp_user',
					tc_azp_role." . d_azp_role_v_id_azp_application . " AS 'lbl_azp_role_v_id_azp_application'
				FROM " . t_azp_user . " tc_azp_user
				
				INNER JOIN " . t_azp_role . " tc_azp_role
					ON tc_azp_user." . d_azp_user_v_id_azp_role . "
						= tc_azp_role." . d_azp_role_id_azp_role . "
				
				WHERE tc_azp_user." . d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_azp_application() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_application." . d_azp_application_id_azp_application . " AS 'lbl_azp_application_id_azp_application',
					tc_azp_application." . d_azp_application_t_name . " AS 'lbl_azp_application_t_name',
					tc_azp_application." . d_azp_application_t_template . " AS 'lbl_azp_application_t_template',
					tc_azp_user." . d_azp_user_v_id_azp_application . " AS 'lbl_azp_user_v_id_azp_application'
				FROM " . t_azp_authorized_permits . " tc_azp_authorized_permits
				
				INNER JOIN " . t_azp_menu_crud . " tc_azp_menu_crud
					ON tc_azp_authorized_permits. " . d_azp_authorized_permits_v_id_azp_menu_crud . "
						= tc_azp_menu_crud." . d_azp_menu_crud_id_azp_menu_crud . "
				
				INNER JOIN " . t_azp_role . " tc_azp_role
					ON tc_azp_authorized_permits. " . d_azp_authorized_permits_v_id_azp_role . "
						= tc_azp_role." . d_azp_role_id_azp_role . "
				
				INNER JOIN " . t_azp_icon_code . " tc_azp_icon_code
					ON tc_azp_menu_crud." . d_azp_menu_crud_v_id_azp_icon_code . "
						= tc_azp_icon_code." . d_azp_icon_code_id_azp_icon_code . "
				
				INNER JOIN " . t_azp_user . " tc_azp_user
					ON tc_azp_role." . d_azp_role_id_azp_role . "
						= tc_azp_user." . d_azp_user_v_id_azp_role . "
				
				INNER JOIN " . t_azp_application . " tc_azp_application
					ON tc_azp_menu_crud." . d_azp_menu_crud_v_id_azp_application . "
						= tc_azp_application." . d_azp_application_id_azp_application . "
				
				WHERE tc_azp_authorized_permits. " . d_azp_authorized_permits_m_deleted . " = '1'
					AND tc_azp_authorized_permits. " . d_azp_authorized_permits_m_status . " = '1'
					AND tc_azp_authorized_permits. " . d_azp_authorized_permits_t_menu_value . " = '1'
					AND tc_azp_menu_crud." . d_azp_menu_crud_m_deleted . " = '1'
					AND tc_azp_menu_crud." . d_azp_menu_crud_m_status . " = '1'
					AND tc_azp_role." . d_azp_role_m_deleted . " = '1'
					AND tc_azp_role." . d_azp_role_m_status . " = '1'
					AND tc_azp_user." . d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'
				
				GROUP BY tc_azp_menu_crud." . d_azp_menu_crud_v_id_azp_application . " ASC
				ORDER BY tc_azp_application." . d_azp_application_id_azp_application . " ASC
				
			");
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_phase() {
			
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_gsc_phase." . d_azp_gsc_phase_id_azp_gsc_phase . " AS 'lbl_azp_gsc_phase_id_azp_gsc_phase',
					tc_azp_gsc_phase." . d_azp_gsc_phase_t_name . " AS 'lbl_azp_gsc_phase_t_name',
					COUNT(tc_azp_gsc_phase." . d_azp_gsc_phase_t_name . ") AS 'lbl_azp_gsc_phase_t_count'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_gsc_phase ." tc_azp_gsc_phase
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_phase . "
						= tc_azp_gsc_phase." . d_azp_gsc_phase_id_azp_gsc_phase . "
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
				GROUP BY tc_azp_gsc_phase." . d_azp_gsc_phase_id_azp_gsc_phase . " ASC
			");
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_client() {
			
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . " AS 'lbl_azp_gsc_client_id_azp_gsc_client',
					tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name',
					COUNT(tc_azp_gsc_client." . d_azp_gsc_client_t_name . ") AS 'lbl_azp_gsc_client_t_count'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				INNER JOIN " . t_azp_gsc_client ." tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
				GROUP BY tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . " ASC
			");
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_daily() {
			if (isset($_GET['field_rd_date_sice']) && isset($_GET['field_rd_date_until'])) {
				# Query Sql Truncate: Vaciar los registros de la tabla
				$this->db->query("TRUNCATE TABLE " . t_azp_report_client_daily);
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("SELECT * FROM " . t_azp_gsc_client . "
					WHERE " . d_azp_gsc_client_id_azp_gsc_client . " > '1'
						AND " . d_azp_gsc_client_m_deleted . " = '1'
					GROUP BY " . d_azp_gsc_client_v_id_azp_fct_client . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_report_client_daily_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_report_client_daily_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_report_client_daily_m_date_created => DATE_HOUR,
							d_azp_report_client_daily_m_date_modified => DATE_HOUR,
							d_azp_report_client_daily_m_deleted => '1',
							d_azp_report_client_daily_m_description => '',
							d_azp_report_client_daily_m_level => '2',
							d_azp_report_client_daily_m_status => '1',
							d_azp_report_client_daily_m_temp => '1',
							d_azp_report_client_daily_t_client => $key_sql[d_azp_gsc_client_t_name],
						);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->insert(t_azp_report_client_daily, $var_array);
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						COUNT(tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . ") AS 'lbl_date_count',
						RIGHT(tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . ", 2) AS 'lbl_t_date_number',
						tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " AS 'lbl_t_date_load',
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_t_client'
					FROM azp_gsc_client tc_azp_gsc_client

					INNER JOIN azp_gsc_request tc_azp_gsc_request
						ON tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
							= tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "

					INNER JOIN azp_gsc_capture tc_azp_gsc_capture
						ON tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . "
							= tc_azp_gsc_capture." . d_azp_gsc_capture_v_id_azp_gsc_request . "

					INNER JOIN azp_fct_client tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					WHERE tc_azp_gsc_capture." . d_azp_gsc_capture_t_document . " != ''
						AND tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . " > 1
						AND (tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " IS NOT NULL
							OR tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " != '')
						AND (tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " >= '" . $_GET['field_rd_date_sice'] . "'
							AND tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " <= '" . $_GET['field_rd_date_until'] . "')
					GROUP BY tc_azp_gsc_capture." . d_azp_gsc_capture_t_date_load . " ASC,
						tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						$var_date_number = $key_sql['lbl_t_date_number'];
						$var_client_day = 't_day_' . $var_date_number;
						# Array para asignar argumentos o valores a los elementos
						$var_array = array($var_client_day => $key_sql['lbl_date_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_client . " = '" . $key_sql['lbl_t_client'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_01 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_01 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_01 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_01 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_02 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_02 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_02 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_02 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_03 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_03 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_03 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_03 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_04 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_04 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_04 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_04 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_05 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_05 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_05 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_05 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_06 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_06 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_06 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_06 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_07 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_07 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_07 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_07 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_08 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_08 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_08 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_08 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_09 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_09 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_09 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_09 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_10 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_10 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_10 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_10 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_11 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_11 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_11 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_11 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_12 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_12 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_12 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_12 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_13 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_13 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_13 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_13 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_14 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_14 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_14 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_14 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_15 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_15 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_15 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_15 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_16 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_16 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_16 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_16 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_17 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_17 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_17 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_17 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_18 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_18 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_18 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_18 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_19 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_19 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_19 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_19 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_20 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_20 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_20 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_20 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_21 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_21 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_21 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_21 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_22 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_22 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_22 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_22 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_23 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_23 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_23 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_23 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_24 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_24 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_24 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_24 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_25 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_25 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_25 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_25 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_26 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_26 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_26 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_26 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_27 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_27 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_27 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_27 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_28 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_28 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_28 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_28 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_29 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_29 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_29 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_29 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_30 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_30 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_30 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_30 . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_31 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_31 . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_client_daily_t_day_31 => '0',);
				# Query Sql Insert: Registrar valores en la tabla segun sus campos
				$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_day_31 . " IS NULL");
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						FORMAT(SUM(t_day_01),0) AS 't_day_01',
						FORMAT(SUM(t_day_02),0) AS 't_day_02',
						FORMAT(SUM(t_day_03),0) AS 't_day_03',
						FORMAT(SUM(t_day_04),0) AS 't_day_04',
						FORMAT(SUM(t_day_05),0) AS 't_day_05',
						FORMAT(SUM(t_day_06),0) AS 't_day_06',
						FORMAT(SUM(t_day_07),0) AS 't_day_07',
						FORMAT(SUM(t_day_08),0) AS 't_day_08',
						FORMAT(SUM(t_day_09),0) AS 't_day_09',
						FORMAT(SUM(t_day_10),0) AS 't_day_10',
						FORMAT(SUM(t_day_11),0) AS 't_day_11',
						FORMAT(SUM(t_day_12),0) AS 't_day_12',
						FORMAT(SUM(t_day_13),0) AS 't_day_13',
						FORMAT(SUM(t_day_14),0) AS 't_day_14',
						FORMAT(SUM(t_day_15),0) AS 't_day_15',
						FORMAT(SUM(t_day_16),0) AS 't_day_16',
						FORMAT(SUM(t_day_17),0) AS 't_day_17',
						FORMAT(SUM(t_day_18),0) AS 't_day_18',
						FORMAT(SUM(t_day_19),0) AS 't_day_19',
						FORMAT(SUM(t_day_20),0) AS 't_day_20',
						FORMAT(SUM(t_day_21),0) AS 't_day_21',
						FORMAT(SUM(t_day_22),0) AS 't_day_22',
						FORMAT(SUM(t_day_23),0) AS 't_day_23',
						FORMAT(SUM(t_day_24),0) AS 't_day_24',
						FORMAT(SUM(t_day_25),0) AS 't_day_25',
						FORMAT(SUM(t_day_26),0) AS 't_day_26',
						FORMAT(SUM(t_day_27),0) AS 't_day_27',
						FORMAT(SUM(t_day_28),0) AS 't_day_28',
						FORMAT(SUM(t_day_29),0) AS 't_day_29',
						FORMAT(SUM(t_day_30),0) AS 't_day_30',
						FORMAT(SUM(t_day_31),0) AS 't_day_31'
					FROM " . t_azp_report_client_daily . "
					LIMIT 1;
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_report_client_daily_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_report_client_daily_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_report_client_daily_m_date_created => DATE_HOUR,
							d_azp_report_client_daily_m_date_modified => DATE_HOUR,
							d_azp_report_client_daily_m_deleted => '1',
							d_azp_report_client_daily_m_description => '',
							d_azp_report_client_daily_m_level => '2',
							d_azp_report_client_daily_m_status => '1',
							d_azp_report_client_daily_m_temp => '1',
							d_azp_report_client_daily_t_client => 'Total',
							d_azp_report_client_daily_t_day_01 => $key_sql['t_day_01'],
							d_azp_report_client_daily_t_day_02 => $key_sql['t_day_02'],
							d_azp_report_client_daily_t_day_03 => $key_sql['t_day_03'],
							d_azp_report_client_daily_t_day_04 => $key_sql['t_day_04'],
							d_azp_report_client_daily_t_day_05 => $key_sql['t_day_05'],
							d_azp_report_client_daily_t_day_06 => $key_sql['t_day_06'],
							d_azp_report_client_daily_t_day_07 => $key_sql['t_day_07'],
							d_azp_report_client_daily_t_day_08 => $key_sql['t_day_08'],
							d_azp_report_client_daily_t_day_09 => $key_sql['t_day_09'],
							d_azp_report_client_daily_t_day_10 => $key_sql['t_day_10'],
							d_azp_report_client_daily_t_day_11 => $key_sql['t_day_11'],
							d_azp_report_client_daily_t_day_12 => $key_sql['t_day_12'],
							d_azp_report_client_daily_t_day_13 => $key_sql['t_day_13'],
							d_azp_report_client_daily_t_day_14 => $key_sql['t_day_14'],
							d_azp_report_client_daily_t_day_15 => $key_sql['t_day_15'],
							d_azp_report_client_daily_t_day_16 => $key_sql['t_day_16'],
							d_azp_report_client_daily_t_day_17 => $key_sql['t_day_17'],
							d_azp_report_client_daily_t_day_18 => $key_sql['t_day_18'],
							d_azp_report_client_daily_t_day_19 => $key_sql['t_day_19'],
							d_azp_report_client_daily_t_day_20 => $key_sql['t_day_20'],
							d_azp_report_client_daily_t_day_21 => $key_sql['t_day_21'],
							d_azp_report_client_daily_t_day_22 => $key_sql['t_day_22'],
							d_azp_report_client_daily_t_day_23 => $key_sql['t_day_23'],
							d_azp_report_client_daily_t_day_24 => $key_sql['t_day_24'],
							d_azp_report_client_daily_t_day_25 => $key_sql['t_day_25'],
							d_azp_report_client_daily_t_day_26 => $key_sql['t_day_26'],
							d_azp_report_client_daily_t_day_27 => $key_sql['t_day_27'],
							d_azp_report_client_daily_t_day_28 => $key_sql['t_day_28'],
							d_azp_report_client_daily_t_day_29 => $key_sql['t_day_29'],
							d_azp_report_client_daily_t_day_30 => $key_sql['t_day_30'],
							d_azp_report_client_daily_t_day_31 => $key_sql['t_day_31'],
						);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->insert(t_azp_report_client_daily, $var_array);
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						SUM(
							t_day_01 +
							t_day_02 +
							t_day_03 +
							t_day_04 +
							t_day_05 +
							t_day_06 +
							t_day_07 +
							t_day_08 +
							t_day_09 +
							t_day_10 +
							t_day_11 +
							t_day_12 +
							t_day_13 +
							t_day_14 +
							t_day_15 +
							t_day_16 +
							t_day_17 +
							t_day_18 +
							t_day_19 +
							t_day_20 +
							t_day_21 +
							t_day_22 +
							t_day_23 +
							t_day_24 +
							t_day_25 +
							t_day_26 +
							t_day_27 +
							t_day_28 +
							t_day_29 +
							t_day_30 +
							t_day_31
						) AS 'lbl_total',
						t_client AS 'lbl_t_client'
					FROM " . t_azp_report_client_daily . "
					GROUP BY t_client
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_client_daily_t_total => $key_sql['lbl_total'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_client_daily, $var_array, d_azp_report_client_daily_t_client . " = '" . $key_sql['lbl_t_client'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						" . d_azp_report_client_daily_id_azp_report_client_daily . " AS 'lbl_azp_report_client_daily_id_azp_report_client_daily',
						" . d_azp_report_client_daily_t_client . " AS 'lbl_azp_report_client_daily_t_client',
						" . d_azp_report_client_daily_t_day_01 . " AS 'lbl_azp_report_client_daily_t_day_01',
						" . d_azp_report_client_daily_t_day_02 . " AS 'lbl_azp_report_client_daily_t_day_02',
						" . d_azp_report_client_daily_t_day_03 . " AS 'lbl_azp_report_client_daily_t_day_03',
						" . d_azp_report_client_daily_t_day_04 . " AS 'lbl_azp_report_client_daily_t_day_04',
						" . d_azp_report_client_daily_t_day_05 . " AS 'lbl_azp_report_client_daily_t_day_05',
						" . d_azp_report_client_daily_t_day_06 . " AS 'lbl_azp_report_client_daily_t_day_06',
						" . d_azp_report_client_daily_t_day_07 . " AS 'lbl_azp_report_client_daily_t_day_07',
						" . d_azp_report_client_daily_t_day_08 . " AS 'lbl_azp_report_client_daily_t_day_08',
						" . d_azp_report_client_daily_t_day_09 . " AS 'lbl_azp_report_client_daily_t_day_09',
						" . d_azp_report_client_daily_t_day_10 . " AS 'lbl_azp_report_client_daily_t_day_10',
						" . d_azp_report_client_daily_t_day_11 . " AS 'lbl_azp_report_client_daily_t_day_11',
						" . d_azp_report_client_daily_t_day_12 . " AS 'lbl_azp_report_client_daily_t_day_12',
						" . d_azp_report_client_daily_t_day_13 . " AS 'lbl_azp_report_client_daily_t_day_13',
						" . d_azp_report_client_daily_t_day_14 . " AS 'lbl_azp_report_client_daily_t_day_14',
						" . d_azp_report_client_daily_t_day_15 . " AS 'lbl_azp_report_client_daily_t_day_15',
						" . d_azp_report_client_daily_t_day_16 . " AS 'lbl_azp_report_client_daily_t_day_16',
						" . d_azp_report_client_daily_t_day_17 . " AS 'lbl_azp_report_client_daily_t_day_17',
						" . d_azp_report_client_daily_t_day_18 . " AS 'lbl_azp_report_client_daily_t_day_18',
						" . d_azp_report_client_daily_t_day_19 . " AS 'lbl_azp_report_client_daily_t_day_19',
						" . d_azp_report_client_daily_t_day_20 . " AS 'lbl_azp_report_client_daily_t_day_20',
						" . d_azp_report_client_daily_t_day_21 . " AS 'lbl_azp_report_client_daily_t_day_21',
						" . d_azp_report_client_daily_t_day_22 . " AS 'lbl_azp_report_client_daily_t_day_22',
						" . d_azp_report_client_daily_t_day_23 . " AS 'lbl_azp_report_client_daily_t_day_23',
						" . d_azp_report_client_daily_t_day_24 . " AS 'lbl_azp_report_client_daily_t_day_24',
						" . d_azp_report_client_daily_t_day_25 . " AS 'lbl_azp_report_client_daily_t_day_25',
						" . d_azp_report_client_daily_t_day_26 . " AS 'lbl_azp_report_client_daily_t_day_26',
						" . d_azp_report_client_daily_t_day_27 . " AS 'lbl_azp_report_client_daily_t_day_27',
						" . d_azp_report_client_daily_t_day_28 . " AS 'lbl_azp_report_client_daily_t_day_28',
						" . d_azp_report_client_daily_t_day_29 . " AS 'lbl_azp_report_client_daily_t_day_29',
						" . d_azp_report_client_daily_t_day_30 . " AS 'lbl_azp_report_client_daily_t_day_30',
						" . d_azp_report_client_daily_t_day_31 . " AS 'lbl_azp_report_client_daily_t_day_31',
						" . d_azp_report_client_daily_t_total . " AS 'lbl_azp_report_client_daily_t_total'
					FROM " . t_azp_report_client_daily . "
				");
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_request() {
			if (isset($_GET['field_rf_date_sice']) && isset($_GET['field_rf_date_until'])) {
				# Query Sql Truncate: Vaciar los registros de la tabla
				$this->db->query("TRUNCATE TABLE " . t_azp_report_gsc_request);
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'Cliente',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'Solicitud',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'Fecha',
						COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_identification . ") AS 'Cedulas',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'Estado'
						-- MAX(tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . ") AS 'Estado'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE (tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " >= '" . $_GET['field_rf_date_sice'] . "'
						AND tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " <= '" . $_GET['field_rf_date_until'] . "')
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC

				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_report_gsc_request_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_request_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_request_m_date_created => DATE_HOUR,
							d_azp_report_gsc_request_m_date_modified => DATE_HOUR,
							d_azp_report_gsc_request_m_deleted => '1',
							d_azp_report_gsc_request_m_description => '',
							d_azp_report_gsc_request_m_level => '2',
							d_azp_report_gsc_request_m_status => '1',
							d_azp_report_gsc_request_m_temp => '1',
							d_azp_report_gsc_request_t_client => $key_sql['Cliente'],
							d_azp_report_gsc_request_t_request => $key_sql['Solicitud'],
							d_azp_report_gsc_request_t_date => $key_sql['Fecha'],
							d_azp_report_gsc_request_t_identification => $key_sql['Cedulas'],
							d_azp_report_gsc_request_t_state => $key_sql['Estado'],
						);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->insert(t_azp_report_gsc_request, $var_array);
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '4'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_delivered => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '2'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_in_process => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '1'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_request => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '3'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_without => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_delivered => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_delivered . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_delivered => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_delivered . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_in_process => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_in_process . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_in_process => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_in_process . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_request => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_request . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_request => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_request . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_without => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_without . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_without => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_without . " IS NULL");
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						`id_azp_report_gsc_request` AS 'lbl_id',
						CONCAT(
							ROUND(
								`t_c_delivered` / `t_identification` * 100, 0
							), '%'
						) AS 't_percentage'
					FROM " . t_azp_report_gsc_request . "
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_percentage => $key_sql['t_percentage'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_id_azp_report_gsc_request . " = '" . $key_sql['lbl_id'] . "'");
					endforeach;
				}
				#------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						" . d_azp_report_gsc_request_id_azp_report_gsc_request . " AS 'lbl_azp_report_gsc_request_id_azp_report_gsc_request',
						" . d_azp_report_gsc_request_t_client . " AS 'lbl_azp_report_gsc_request_t_client',
						" . d_azp_report_gsc_request_t_date . " AS 'lbl_azp_report_gsc_request_t_date',
						" . d_azp_report_gsc_request_t_state . " AS 'lbl_azp_report_gsc_request_t_state',
						" . d_azp_report_gsc_request_t_identification . " AS 'lbl_azp_report_gsc_request_t_identification',
						" . d_azp_report_gsc_request_t_percentage . " AS 'lbl_azp_report_gsc_request_t_percentage',
						" . d_azp_report_gsc_request_t_request . " AS 'lbl_azp_report_gsc_request_t_request',
						" . d_azp_report_gsc_request_t_state . " AS 'lbl_azp_report_gsc_request_t_state',
						" . d_azp_report_gsc_request_t_c_delivered . " AS 'lbl_azp_report_gsc_request_t_c_delivered',
						" . d_azp_report_gsc_request_t_c_in_process . " AS 'lbl_azp_report_gsc_request_t_c_in_process',
						" . d_azp_report_gsc_request_t_c_request . " AS 'lbl_azp_report_gsc_request_t_c_request',
						" . d_azp_report_gsc_request_t_c_without . " AS 'lbl_azp_report_gsc_request_t_c_without'
					FROM " . t_azp_report_gsc_request . "
				");
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_full() {
			if (isset($_GET['field_rf_date_sice']) && isset($_GET['field_rf_date_until'])) {
				# Query Sql Truncate: Vaciar los registros de la tabla
				$this->db->query("TRUNCATE TABLE " . t_azp_report_gsc_request);
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'Cliente',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'Solicitud',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'Fecha',
						COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_identification . ") AS 'Cedulas',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'Estado'
						-- MAX(tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . ") AS 'Estado'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE (tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " >= '" . $_GET['field_rf_date_sice'] . "'
						AND tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " <= '" . $_GET['field_rf_date_until'] . "')
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC;

				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_report_gsc_request_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_request_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_request_m_date_created => DATE_HOUR,
							d_azp_report_gsc_request_m_date_modified => DATE_HOUR,
							d_azp_report_gsc_request_m_deleted => '1',
							d_azp_report_gsc_request_m_description => '',
							d_azp_report_gsc_request_m_level => '2',
							d_azp_report_gsc_request_m_status => '1',
							d_azp_report_gsc_request_m_temp => '1',
							d_azp_report_gsc_request_t_client => $key_sql['Cliente'],
							d_azp_report_gsc_request_t_request => $key_sql['Solicitud'],
							d_azp_report_gsc_request_t_date => $key_sql['Fecha'],
							d_azp_report_gsc_request_t_identification => $key_sql['Cedulas'],
							d_azp_report_gsc_request_t_state => $key_sql['Estado'],
						);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->insert(t_azp_report_gsc_request, $var_array);
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '4'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_delivered => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '2'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_in_process => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '1'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_request => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 't_client',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 't_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 't_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 't_request_state',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 't_causal',
						COUNT(tc_azp_gsc_state." . d_azp_gsc_state_t_name . ") AS 't_count'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

					WHERE tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '3'
					GROUP BY
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC,
						tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " ASC,
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " ASC
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_c_without => $key_sql['t_count'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_client . " = '" . $key_sql['t_client'] . "' AND " . d_azp_report_gsc_request_t_date . " = '" . $key_sql['t_request_date'] . "' AND " . d_azp_report_gsc_request_t_request . " = '" . $key_sql['t_number_request'] . "' AND " . d_azp_report_gsc_request_t_state . " = '" . $key_sql['t_request_state'] . "'");
					endforeach;
				}
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_delivered => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_delivered . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_delivered => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_delivered . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_in_process => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_in_process . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_in_process => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_in_process . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_request => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_request . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_request => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_request . " IS NULL");
				#--------------------------------------------------------
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_without => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_without . " = '0'");
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_report_gsc_request_t_c_without => '0',);
				# Query Sql Insert: Registrar valores en latabla segun sus campos
				$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_t_c_without . " IS NULL");
				#--------------------------------------------------------
				# Seleccionar los registros de la tabla
				$var_sql = $this->db->query("
					SELECT
						`id_azp_report_gsc_request` AS 'lbl_id',
						CONCAT(
							ROUND(
								`t_c_delivered` / `t_identification` * 100, 0
							), '%'
						) AS 't_percentage'
					FROM " . t_azp_report_gsc_request . "
				");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_report_gsc_request_t_percentage => $key_sql['t_percentage'],);
						# Query Sql Insert: Registrar valores en la tabla segun sus campos
						$this->db->update(t_azp_report_gsc_request, $var_array, d_azp_report_gsc_request_id_azp_report_gsc_request . " = '" . $key_sql['lbl_id'] . "'");
					endforeach;
				}
				#------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						" . d_azp_report_gsc_request_id_azp_report_gsc_request . " AS 'lbl_azp_report_gsc_request_id_azp_report_gsc_request',
						" . d_azp_report_gsc_request_t_client . " AS 'lbl_azp_report_gsc_request_t_client',
						" . d_azp_report_gsc_request_t_date . " AS 'lbl_azp_report_gsc_request_t_date',
						" . d_azp_report_gsc_request_t_identification . " AS 'lbl_azp_report_gsc_request_t_identification',
						" . d_azp_report_gsc_request_t_percentage . " AS 'lbl_azp_report_gsc_request_t_percentage',
						" . d_azp_report_gsc_request_t_request . " AS 'lbl_azp_report_gsc_request_t_request',
						" . d_azp_report_gsc_request_t_state . " AS 'lbl_azp_report_gsc_request_t_state',
						SUM(" . d_azp_report_gsc_request_t_identification . ") AS 'lbl_azp_report_gsc_request_t_identification_sum',
						SUM(" . d_azp_report_gsc_request_t_c_delivered . ") AS 'lbl_azp_report_gsc_request_t_c_delivered_sum',
						SUM(" . d_azp_report_gsc_request_t_c_in_process . ") AS 'lbl_azp_report_gsc_request_t_c_in_process_sum',
						SUM(" . d_azp_report_gsc_request_t_c_request . ") AS 'lbl_azp_report_gsc_request_t_c_request_sum',
						SUM(" . d_azp_report_gsc_request_t_c_without . ") AS 'lbl_azp_report_gsc_request_t_c_without_sum'
					FROM " . t_azp_report_gsc_request . "
					GROUP BY " . d_azp_report_gsc_request_t_client . " ASC,
						" . d_azp_report_gsc_request_t_state . " ASC
				");
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_filter() {
			if (isset($_GET['field_rf_filter'])) {
				# Obtener el valor cargado en el campo
				$var_filter = $_GET['field_rf_filter'];
				# Control para validacion segun el valor obenido
				if ($var_filter == 1) {
					# Asignar nuevos valores a la sentencia sql o query
					$var_state = "WHERE " . d_azp_report_gsc_request_t_state . " = '1'";
				} else if ($var_filter == 2) {
					# Asignar nuevos valores a la sentencia sql o query
					$var_state = "WHERE " . d_azp_report_gsc_request_t_state . " = 2";
				} else if ($var_filter == 3) {
					# Asignar nuevos valores a la sentencia sql o query
					$var_state = "";
				} else {
					# Asignar nuevos valores a la sentencia sql o query
					$var_state = "";
				}
				#------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						" . d_azp_report_gsc_request_id_azp_report_gsc_request . " AS 'lbl_azp_report_gsc_request_id_azp_report_gsc_request',
						" . d_azp_report_gsc_request_t_client . " AS 'lbl_azp_report_gsc_request_t_client',
						" . d_azp_report_gsc_request_t_date . " AS 'lbl_azp_report_gsc_request_t_date',
						" . d_azp_report_gsc_request_t_identification . " AS 'lbl_azp_report_gsc_request_t_identification',
						" . d_azp_report_gsc_request_t_percentage . " AS 'lbl_azp_report_gsc_request_t_percentage',
						" . d_azp_report_gsc_request_t_request . " AS 'lbl_azp_report_gsc_request_t_request',
						" . d_azp_report_gsc_request_t_state . " AS 'lbl_azp_report_gsc_request_t_state',
						SUM(" . d_azp_report_gsc_request_t_identification . ") AS 'lbl_azp_report_gsc_request_t_identification_sum',
						SUM(" . d_azp_report_gsc_request_t_c_delivered . ") AS 'lbl_azp_report_gsc_request_t_c_delivered_sum',
						SUM(" . d_azp_report_gsc_request_t_c_in_process . ") AS 'lbl_azp_report_gsc_request_t_c_in_process_sum',
						SUM(" . d_azp_report_gsc_request_t_c_request . ") AS 'lbl_azp_report_gsc_request_t_c_request_sum',
						SUM(" . d_azp_report_gsc_request_t_c_without . ") AS 'lbl_azp_report_gsc_request_t_c_without_sum'
					FROM " . t_azp_report_gsc_request . " " . $var_state . " " . "
					GROUP BY " . d_azp_report_gsc_request_t_client . " ASC,
						" . d_azp_report_gsc_request_t_state . " ASC
				");
			} else {
				#------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						" . d_azp_report_gsc_request_id_azp_report_gsc_request . " AS 'lbl_azp_report_gsc_request_id_azp_report_gsc_request',
						" . d_azp_report_gsc_request_t_client . " AS 'lbl_azp_report_gsc_request_t_client',
						" . d_azp_report_gsc_request_t_date . " AS 'lbl_azp_report_gsc_request_t_date',
						" . d_azp_report_gsc_request_t_identification . " AS 'lbl_azp_report_gsc_request_t_identification',
						" . d_azp_report_gsc_request_t_percentage . " AS 'lbl_azp_report_gsc_request_t_percentage',
						" . d_azp_report_gsc_request_t_request . " AS 'lbl_azp_report_gsc_request_t_request',
						" . d_azp_report_gsc_request_t_state . " AS 'lbl_azp_report_gsc_request_t_state',
						SUM(" . d_azp_report_gsc_request_t_identification . ") AS 'lbl_azp_report_gsc_request_t_identification_sum',
						SUM(" . d_azp_report_gsc_request_t_c_delivered . ") AS 'lbl_azp_report_gsc_request_t_c_delivered_sum',
						SUM(" . d_azp_report_gsc_request_t_c_in_process . ") AS 'lbl_azp_report_gsc_request_t_c_in_process_sum',
						SUM(" . d_azp_report_gsc_request_t_c_request . ") AS 'lbl_azp_report_gsc_request_t_c_request_sum',
						SUM(" . d_azp_report_gsc_request_t_c_without . ") AS 'lbl_azp_report_gsc_request_t_c_without_sum'
					FROM " . t_azp_report_gsc_request . "
					GROUP BY " . d_azp_report_gsc_request_t_client . ",
						" . d_azp_report_gsc_request_t_state . " ASC
				");
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_gsc_follow_email() {
			if (isset($_GET['field_fm_date_sice']) && isset($_GET['field_fm_date_until'])) {
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("TRUNCATE TABLE " . t_azp_report_gsc_follow_email);
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_date_since = $_GET['field_fm_date_sice'];
				$empty_date_until = $_GET['field_fm_date_until'];
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_city . " AS 'lbl_azp_gsc_request_t_city',
						tc_azp_gsc_request." . d_azp_gsc_request_t_death_date . " AS 'lbl_azp_gsc_request_t_death_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_full_name . " AS 'lbl_azp_gsc_request_t_full_name',
						tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " AS 'lbl_azp_gsc_request_t_identification',
						tc_azp_gsc_request." . d_azp_gsc_request_t_notary . " AS 'lbl_azp_gsc_request_t_notary',
						tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
						tc_azp_gsc_request." . d_azp_gsc_request_t_observation . " AS 'lbl_azp_gsc_request_t_observation',
						tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
						tc_azp_gsc_request." . d_azp_gsc_request_t_serial . " AS 'lbl_azp_gsc_request_t_serial',
						tc_azp_gsc_causal." . d_azp_gsc_causal_t_name . " AS 'lbl_azp_gsc_causal_t_name',
						tc_azp_gsc_client." . d_azp_gsc_client_t_code . " AS 'lbl_azp_gsc_client_t_code',
						tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name',
						tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_azp_gsc_state_t_name'
					FROM " . t_azp_gsc_request . " tc_azp_gsc_request

					INNER JOIN " . t_azp_gsc_causal . " tc_azp_gsc_causal
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . "
							= tc_azp_gsc_causal." . d_azp_gsc_causal_id_azp_gsc_causal . "
					INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
							= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
					INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
						ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
							= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
					
					WHERE (tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " >= '" . $empty_date_since . "'
						AND tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " <= '" . $empty_date_until . "')
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(
							d_azp_report_gsc_follow_email_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_follow_email_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_report_gsc_follow_email_m_date_created => DATE_HOUR,
							d_azp_report_gsc_follow_email_m_date_modified => DATE_HOUR,
							d_azp_report_gsc_follow_email_m_deleted => '1',
							d_azp_report_gsc_follow_email_m_description => '',
							d_azp_report_gsc_follow_email_m_level => '2',
							d_azp_report_gsc_follow_email_m_status => '1',
							d_azp_report_gsc_follow_email_m_temp => '1',
							d_azp_report_gsc_follow_email_t_city => $key_sql['lbl_azp_gsc_request_t_city'],
							d_azp_report_gsc_follow_email_t_death_date => $key_sql['lbl_azp_gsc_request_t_death_date'],
							d_azp_report_gsc_follow_email_t_full_name => $key_sql['lbl_azp_gsc_request_t_full_name'],
							d_azp_report_gsc_follow_email_t_identification => $key_sql['lbl_azp_gsc_request_t_identification'],
							d_azp_report_gsc_follow_email_t_notary => $key_sql['lbl_azp_gsc_request_t_notary'],
							d_azp_report_gsc_follow_email_t_number_request => $key_sql['lbl_azp_gsc_client_t_code'] . '_' . $key_sql['lbl_azp_gsc_request_t_number_request'],
							d_azp_report_gsc_follow_email_t_observation_internal => $key_sql['lbl_azp_gsc_request_t_observation'],
							d_azp_report_gsc_follow_email_t_plan_action => '',
							d_azp_report_gsc_follow_email_t_request_date => $key_sql['lbl_azp_gsc_request_t_request_date'],
							d_azp_report_gsc_follow_email_t_serial => $key_sql['lbl_azp_gsc_request_t_serial'],
							d_azp_report_gsc_follow_email_u_gsc_causal => $key_sql['lbl_azp_gsc_causal_t_name'],
							d_azp_report_gsc_follow_email_u_gsc_client => $key_sql['lbl_azp_gsc_client_t_code'],
							d_azp_report_gsc_follow_email_u_gsc_state => $key_sql['lbl_azp_gsc_state_t_name'],
							d_azp_report_gsc_follow_email_t_number_sexic => '0',
							d_azp_report_gsc_follow_email_t_number_sexpc => '0',
							d_azp_report_gsc_follow_email_v_id_azp_gsc_request => $key_sql['lbl_azp_gsc_request_id_azp_gsc_request'],
						);
						# Insertar valores en la nueva tabla que no existen
						$this->db->insert(t_azp_report_gsc_follow_email, $var_array);
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("
					SELECT " . d_azp_gsc_observation_internal_t_identification . " AS 'lbl_azp_gsc_observation_internal_t_identification',
					GROUP_CONCAT(LEFT(" . d_azp_gsc_observation_internal_m_date_modified . ", 10), ': ', " . d_azp_gsc_observation_internal_t_observation . ", '\n') AS 'lbl_obs'
					FROM " . t_azp_gsc_observation_internal . "
					GROUP BY " . d_azp_gsc_observation_internal_t_identification . "
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_report_gsc_follow_email_t_observation_internal => $key_sql['lbl_obs'],);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_report_gsc_follow_email, $var_array, d_azp_report_gsc_follow_email_t_identification . " = '" . $key_sql['lbl_azp_gsc_observation_internal_t_identification'] . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("
					SELECT " . d_azp_gsc_plan_action_t_identification . " AS 'lbl_azp_gsc_plan_action_t_identification',
					GROUP_CONCAT(LEFT(" . d_azp_gsc_plan_action_m_date_modified . ", 10), ': ', " . d_azp_gsc_plan_action_t_observation . ", '\n') AS 'lbl_obs'
					FROM " . t_azp_gsc_plan_action . "
					GROUP BY " . d_azp_gsc_plan_action_t_identification . "
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_report_gsc_follow_email_t_plan_action => $key_sql['lbl_obs'],);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_report_gsc_follow_email, $var_array, d_azp_report_gsc_follow_email_t_identification . " = '" . $key_sql['lbl_azp_gsc_plan_action_t_identification'] . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				/*$var_sql = $this->db->query("
					SELECT
						t_identification AS 'lbl_identification',
						MAX(LEFT(m_date_modified,10)) AS 'lbl_max'
					FROM `azp_gsc_observation_internal`
					GROUP BY t_identification
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_report_gsc_follow_email_t_mg_last_date => $key_sql['lbl_max'],);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_report_gsc_follow_email, $var_array, d_azp_report_gsc_follow_email_t_identification . " = '" . $key_sql['lbl_identification'] . "'");
					endforeach;
				}*/
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select("MAX(" . d_azp_gsc_observation_internal_id_azp_gsc_observation_internal . ") AS 'lbl_max'",
					t_azp_gsc_observation_internal, d_azp_gsc_observation_internal_m_deleted . " = '1' GROUP BY " . d_azp_gsc_observation_internal_t_identification);
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql2 = $this->db->select("*", t_azp_gsc_observation_internal,
							d_azp_gsc_observation_internal_id_azp_gsc_observation_internal . " = '" . $key_sql['lbl_max'] . "'");
						# Validar si la consulta es verdadera
						if (false != $var_sql2) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql2 as $key_sql2):
								# Cadena de texto de ciertos caracteres
								$var_date = substr($key_sql2[d_azp_gsc_observation_internal_m_date_modified], 0, 10);
								$var_observation = $key_sql2[d_azp_gsc_observation_internal_t_observation];
								$var_identification = $key_sql2[d_azp_gsc_observation_internal_t_identification];
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_report_gsc_follow_email_t_mg_last_date => $var_date,
									//d_azp_report_gsc_follow_email_t_observation_internal => $var_observation,
								);
								# Insertar valores en la nueva tabla que no existen
								$this->db->update(t_azp_report_gsc_follow_email, $var_array,
									d_azp_report_gsc_follow_email_t_identification . " = '" . $var_identification . "'");
							endforeach;
						}
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
						COUNT(tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_register . ") AS 'lbl_azp_gsc_follow_email_t_register'
					FROM " . t_azp_gsc_follow_email . " tc_azp_gsc_follow_email
					INNER JOIN " . t_azp_gsc_request . " tc_azp_gsc_request
					ON tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_v_id_azp_gsc_request . "
						= tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . "
					WHERE tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_template . " = 'Solicitud Existencia Certificado'
						-- AND (tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_date . " >= '" . $empty_date_since . "'
							-- AND tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_date . " <= '" . $empty_date_until . "')
					GROUP BY tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_v_id_azp_gsc_request . "
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_report_gsc_follow_email_t_number_sexic => $key_sql['lbl_azp_gsc_follow_email_t_register'],);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_report_gsc_follow_email, $var_array, d_azp_report_gsc_follow_email_v_id_azp_gsc_request . " = '" . $key_sql['lbl_azp_gsc_request_id_azp_gsc_request'] . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->query("
					SELECT
						tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
						COUNT(tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_register . ") AS 'lbl_azp_gsc_follow_email_t_register'
					FROM " . t_azp_gsc_follow_email . " tc_azp_gsc_follow_email
					INNER JOIN " . t_azp_gsc_request . " tc_azp_gsc_request
					ON tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_v_id_azp_gsc_request . "
						= tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . "
					WHERE tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_template . " = 'Solicitud Expedicion Certificado'
						-- AND (tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_date . " >= '" . $empty_date_since . "'
							-- AND tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_t_date . " <= '" . $empty_date_until . "')
					GROUP BY tc_azp_gsc_follow_email." . d_azp_gsc_follow_email_v_id_azp_gsc_request . "
				");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_report_gsc_follow_email_t_number_sexpc => $key_sql['lbl_azp_gsc_follow_email_t_register'],);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_report_gsc_follow_email, $var_array, d_azp_report_gsc_follow_email_v_id_azp_gsc_request . " = '" . $key_sql['lbl_azp_gsc_request_id_azp_gsc_request'] . "'");
					endforeach;
				}
				#------------------------------------------------------
				# Seleccionar los registros de la tabla
				return $this->db->query("
					
					SELECT
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email . " AS 'lbl_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_created . " AS 'lbl_azp_report_gsc_follow_email_m_by_created',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_modified . " AS 'lbl_azp_report_gsc_follow_email_m_by_modified',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_date_created . " AS 'lbl_azp_report_gsc_follow_email_m_date_created',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_date_modified . " AS 'lbl_azp_report_gsc_follow_email_m_date_modified',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_deleted . " AS 'lbl_azp_report_gsc_follow_email_m_deleted',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_description . " AS 'lbl_azp_report_gsc_follow_email_m_description',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_level . " AS 'lbl_azp_report_gsc_follow_email_m_level',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_status . " AS 'lbl_azp_report_gsc_follow_email_m_status',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_temp . " AS 'lbl_azp_report_gsc_follow_email_m_temp',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_city . " AS 'lbl_azp_report_gsc_follow_email_t_city',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_death_date . " AS 'lbl_azp_report_gsc_follow_email_t_death_date',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_full_name . " AS 'lbl_azp_report_gsc_follow_email_t_full_name',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_identification . " AS 'lbl_azp_report_gsc_follow_email_t_identification',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_mg_last_date . " AS 'lbl_azp_report_gsc_follow_email_t_mg_last_date',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_notary . " AS 'lbl_azp_report_gsc_follow_email_t_notary',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_request . " AS 'lbl_azp_report_gsc_follow_email_t_number_request',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_sexic . " AS 'lbl_azp_report_gsc_follow_email_t_number_sexic',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_sexpc . " AS 'lbl_azp_report_gsc_follow_email_t_number_sexpc',
						REPLACE(tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_observation_internal . ", '\n,', '\n') AS 'lbl_azp_report_gsc_follow_email_t_observation_internal',
						REPLACE(tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_plan_action . ", '\n,', '\n') AS 'lbl_azp_report_gsc_follow_email_t_plan_action',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_request_date . " AS 'lbl_azp_report_gsc_follow_email_t_request_date',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_serial . " AS 'lbl_azp_report_gsc_follow_email_t_serial',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_causal . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_causal',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_client . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_client',
						tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_state . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_state'
					FROM " . t_azp_report_gsc_follow_email . " tc_azp_report_gsc_follow_email
					
					INNER JOIN " . t_azp_user . " tc_azp_user_created
						ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_created . "
							= tc_azp_user_created." . d_azp_user_id_azp_user . "
					INNER JOIN " . t_azp_user . " tc_azp_user_modified
						ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_modified . "
							= tc_azp_user_modified." . d_azp_user_id_azp_user . "
					INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
						ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_level . "
							= tc_azp_sys_level." . d_azp_sys_level_t_value . "
					INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
						ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_status . "
							= tc_azp_sys_state." . d_azp_sys_state_t_value . "
					
					WHERE tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_deleted . " = '1'
					ORDER BY tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email . " ASC
				");
			}
		}

		# Query Sql Insert
		final public function sql_azp_gsc_follow_email_table(array $data) {
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				$this->db->query("DELETE FROM " . t_azs_gsc_plan_action);
				$this->db->query("ALTER TABLE " . t_azs_gsc_plan_action . " AUTO_INCREMENT = 1");
				#-------------------------------------------------------------------------#
				$var_id = $data['field_tb_id'];
				#-------------------------------------------------------------------------#
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_id as $key => $value) {
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azs_gsc_plan_action_m_by_created => $_SESSION[SESS_APP_ID],
						d_azs_gsc_plan_action_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azs_gsc_plan_action_m_date_created => DATE_HOUR,
						d_azs_gsc_plan_action_m_date_modified => DATE_HOUR,
						d_azs_gsc_plan_action_m_deleted => '1',
						d_azs_gsc_plan_action_m_description => '',
						d_azs_gsc_plan_action_m_level => '2',
						d_azs_gsc_plan_action_m_status => '1',
						d_azs_gsc_plan_action_m_temp => '1',
						d_azs_gsc_plan_action_v_id_azp_gsc_request => $value,
					);
					# Insertar valores en la nueva tabla que no existen
					$this->db->insert(t_azs_gsc_plan_action, $var_array);
				}
				#-------------------------------------------------------------------------#
				$var_sql = $this->db->select('*', t_azp_report_gsc_follow_email);
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azs_gsc_plan_action_t_identification => $key_sql[d_azp_gsc_request_t_identification],);
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->update(t_azs_gsc_plan_action, $var_array, d_azs_gsc_plan_action_v_id_azp_gsc_request . " = '" . $key_sql[d_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email] . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Datos registrados correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_azp_gsc_follow_email_pl_observation(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_pl_observation'])) { throw new Exception('<b>Error:</b> El campo de observacion esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_observation = $this->db->scape($data['field_pl_observation']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_observation)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de observacion es oblgitario.');
				}
				#---------------------------------------------#
				if (strpos($empty_observation, ' ')) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de nombres completos no permite tener más de un espacio en blanco seguido.');
				}
				#---------------------------------------------#
				if (preg_match('/^\s|\s$/', $empty_observation)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de observacion no permite tener espacios en blanco al principio o al final.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_azp_gsc_follow_email_pl_observation(array $data) : array {
			$var_error = $this->error_sql_azp_gsc_follow_email_pl_observation($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_observation = $this->db->scape($data['field_pl_observation']);
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select('*', t_azs_gsc_plan_action, d_azs_gsc_plan_action_m_deleted . " = '1' GROUP BY " . d_azs_gsc_plan_action_t_identification);
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						#-------------------------------------------------------------------------#
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_gsc_plan_action_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_gsc_plan_action_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_gsc_plan_action_m_date_created => DATE_HOUR,
							d_azp_gsc_plan_action_m_date_modified => DATE_HOUR,
							d_azp_gsc_plan_action_m_deleted => '1',
							d_azp_gsc_plan_action_m_description => '',
							d_azp_gsc_plan_action_m_level => '2',
							d_azp_gsc_plan_action_m_status => '1',
							d_azp_gsc_plan_action_m_temp => '1',
							d_azp_gsc_plan_action_t_identification => $key_sql[d_azs_gsc_plan_action_t_identification],
							d_azp_gsc_plan_action_t_observation => $empty_observation,
						);
						# Query Sql Insert: Insertar datos en la tabla con sus campos respectivos y asignados
						$this->db->insert(t_azp_gsc_plan_action, $var_array);
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Registro almacenado correctamente.');
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email . " AS 'lbl_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_date_created . " AS 'lbl_azp_report_gsc_follow_email_m_date_created',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_date_modified . " AS 'lbl_azp_report_gsc_follow_email_m_date_modified',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_deleted . " AS 'lbl_azp_report_gsc_follow_email_m_deleted',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_description . " AS 'lbl_azp_report_gsc_follow_email_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_temp . " AS 'lbl_azp_report_gsc_follow_email_m_temp',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_city . " AS 'lbl_azp_report_gsc_follow_email_t_city',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_death_date . " AS 'lbl_azp_report_gsc_follow_email_t_death_date',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_full_name . " AS 'lbl_azp_report_gsc_follow_email_t_full_name',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_identification . " AS 'lbl_azp_report_gsc_follow_email_t_identification',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_mg_last_date . " AS 'lbl_azp_report_gsc_follow_email_t_mg_last_date',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_notary . " AS 'lbl_azp_report_gsc_follow_email_t_notary',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_request . " AS 'lbl_azp_report_gsc_follow_email_t_number_request',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_sexic . " AS 'lbl_azp_report_gsc_follow_email_t_number_sexic',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_number_sexpc . " AS 'lbl_azp_report_gsc_follow_email_t_number_sexpc',
					REPLACE(tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_observation_internal . ", '\n,','<br/>') AS 'lbl_azp_report_gsc_follow_email_t_observation_internal',
					REPLACE(tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_plan_action . ", '\n,','<br/>') AS 'lbl_azp_report_gsc_follow_email_t_plan_action',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_request_date . " AS 'lbl_azp_report_gsc_follow_email_t_request_date',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_t_serial . " AS 'lbl_azp_report_gsc_follow_email_t_serial',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_causal . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_causal',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_client . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_client',
					tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_u_gsc_state . " AS 'lbl_azp_report_gsc_follow_email_u_gsc_state'
				FROM " . t_azp_report_gsc_follow_email . " tc_azp_report_gsc_follow_email
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_report_gsc_follow_email." . d_azp_report_gsc_follow_email_id_azp_report_gsc_follow_email . " = '" . $this->id . "'
				LIMIT 1
			");
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_crt_client_phase() {
			if (isset($_GET['field_date_sice']) && isset($_GET['field_date_until'])) {
				return $this->db->query("
					SELECT
						tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " AS 'lbl_azp_crt_request_data_t_request_date',
						tc_azp_crt_bank." . d_azp_crt_bank_t_name . " AS 'lbl_azp_crt_bank_t_name',
						tc_azp_crt_phase." . d_azp_crt_phase_t_name . " AS 'lbl_azp_crt_phase_t_name',
						COUNT(tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . ") AS 'lbl_count'

					FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data
					
					INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
							= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "
					
					INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
						ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
							= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "
					
					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "
					
					INNER JOIN " . t_azp_crt_phase . " tc_azp_crt_phase
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . "
							= tc_azp_crt_phase." . d_azp_crt_phase_id_azp_crt_phase . "
					
					WHERE (tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " >= '" . $_GET['field_date_sice'] . "'
							AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " <= '" . $_GET['field_date_until'] . "'
						)
					GROUP BY tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . " ASC,
						tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . " ASC,
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " ASC

					ORDER BY tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . " ASC,
						tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . " ASC,
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " ASC
				");
			}
		}

		# Query Sql Select Get Id
		final public function sql_controller_report_crt_binnacle() {
			if (isset($_GET['field_date_binnacle'])) {
				$var_sql = $this->db->query("
					SELECT
						tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_crt_date_image . " AS 'lbl_azp_crt_request_data_t_crt_date_image',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_date_delivery . " AS 'lbl_azp_crt_request_data_t_date_delivery',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " AS 'lbl_azp_crt_request_data_t_identification',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_full_name . " AS 'lbl_azp_crt_request_data_t_full_name',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_observation . " AS 'lbl_azp_crt_request_data_t_observation',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " AS 'lbl_azp_crt_request_data_t_plaque_enrollment',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_provider_name . " AS 'lbl_azp_crt_request_data_t_provider_name',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_rcb_receipt . " AS 'lbl_azp_crt_request_data_t_rcb_receipt',
						tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " AS 'lbl_azp_crt_request_data_t_request_date',
						tc_azp_crt_city." . d_azp_crt_city_t_name . " AS 'lbl_azp_crt_city_t_name',
						tc_azp_crt_client." . d_azp_crt_client_t_code . " AS 'lbl_azp_crt_client_t_code',
						tc_azp_crt_request_type." . d_azp_crt_request_type_t_name . " AS 'lbl_azp_crt_request_type_t_name',
						tc_azp_crt_observation_type." . d_azp_crt_observation_type_t_name . " AS 'lbl_azp_crt_observation_type_t_name'
					FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data

					INNER JOIN " . t_azp_crt_city . " tc_azp_crt_city
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_city . "
							= tc_azp_crt_city." . d_azp_crt_city_id_azp_crt_city . "

					INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
							= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "
					
					INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
						ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
							= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "
					
					INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
						ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
							= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

					INNER JOIN " . t_azp_crt_request_type . " tc_azp_crt_request_type
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_request_type . "
							= tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . "

					INNER JOIN " . t_azp_crt_observation_type . " tc_azp_crt_observation_type
						ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_observation_type . "
							= tc_azp_crt_observation_type." . d_azp_crt_observation_type_id_azp_crt_observation_type . "

					WHERE (tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " >= '" . $_GET['field_date_binnacle'] . "-01'
						AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " <= '" . $_GET['field_date_binnacle'] . "-31')

					ORDER BY tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . " ASC,
						tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . " ASC
				");
				$this->db->query("DELETE FROM " . t_azp_crt_binnacle);
				$this->db->query("ALTER TABLE " . t_azp_crt_binnacle . " AUTO_INCREMENT = 1");
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key_sql):
						#-------------------------------------------------------------------------#
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(
							d_azp_crt_binnacle_m_by_created => $_SESSION[SESS_APP_ID],
							d_azp_crt_binnacle_m_by_modified => $_SESSION[SESS_APP_ID],
							d_azp_crt_binnacle_m_date_created => DATE_HOUR,
							d_azp_crt_binnacle_m_date_modified => DATE_HOUR,
							d_azp_crt_binnacle_m_deleted => '1',
							d_azp_crt_binnacle_m_description => '',
							d_azp_crt_binnacle_m_level => '2',
							d_azp_crt_binnacle_m_status => '1',
							d_azp_crt_binnacle_m_temp => '1',
							d_azp_crt_binnacle_t_city => $key_sql['lbl_azp_crt_city_t_name'],
							d_azp_crt_binnacle_t_client_code => $key_sql['lbl_azp_crt_client_t_code'],
							d_azp_crt_binnacle_t_date_delivery => $key_sql['lbl_azp_crt_request_data_t_date_delivery'],
							d_azp_crt_binnacle_t_full_name => $key_sql['lbl_azp_crt_request_data_t_full_name'],
							d_azp_crt_binnacle_t_identification => $key_sql['lbl_azp_crt_request_data_t_identification'],
							d_azp_crt_binnacle_t_observation_type => $key_sql['lbl_azp_crt_observation_type_t_name'],
							d_azp_crt_binnacle_t_plaque_enrollment => $key_sql['lbl_azp_crt_request_data_t_plaque_enrollment'],
							d_azp_crt_binnacle_t_provider_name => $key_sql['lbl_azp_crt_request_data_t_provider_name'],
							d_azp_crt_binnacle_t_rcb_receipt => $key_sql['lbl_azp_crt_request_data_t_rcb_receipt'],
							d_azp_crt_binnacle_t_request_date => $key_sql['lbl_azp_crt_request_data_t_request_date'],
							d_azp_crt_binnacle_t_request_type => $key_sql['lbl_azp_crt_request_type_t_name'],
						);
						# Query Sql Insert: Insertar datos en la tabla con sus campos respectivos y asignados
						$this->db->insert(t_azp_crt_binnacle, $var_array);
					endforeach;
				}
				return $this->db->query("
					SELECT
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_id_azp_crt_binnacle . " AS 'lbl_azp_crt_binnacle_id_azp_crt_binnacle',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_city . " AS 'lbl_azp_crt_binnacle_t_city',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_client_code . " AS 'lbl_azp_crt_binnacle_t_client_code',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_date_delivery . " AS 'lbl_azp_crt_binnacle_t_date_delivery',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_full_name . " AS 'lbl_azp_crt_binnacle_t_full_name',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_identification . " AS 'lbl_azp_crt_binnacle_t_identification',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_observation_type . " AS 'lbl_azp_crt_binnacle_t_observation_type',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_plaque_enrollment . " AS 'lbl_azp_crt_binnacle_t_plaque_enrollment',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_provider_name . " AS 'lbl_azp_crt_binnacle_t_provider_name',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_rcb_receipt . " AS 'lbl_azp_crt_binnacle_t_rcb_receipt',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_request_date . " AS 'lbl_azp_crt_binnacle_t_request_date',
						tc_azp_crt_binnacle." . d_azp_crt_binnacle_t_request_type . " AS 'lbl_azp_crt_binnacle_t_request_type'
					FROM " . t_azp_crt_binnacle . " tc_azp_crt_binnacle
				");
			}
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_read() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'Activo' " . $var_code . "
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_evaluation() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_graphic_cam => strtoupper($value['lbl_count']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_graphic_fur => strtoupper($value['lbl_count']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_graphic_pro => strtoupper($value['lbl_count']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_graphic_veh => strtoupper($value['lbl_count']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_graphic_war => strtoupper($value['lbl_count']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_graphic_cam . " AS 'lbl_azp_ibn_control_panel_t_graphic_cam',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_graphic_fur . " AS 'lbl_azp_ibn_control_panel_t_graphic_fur',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_graphic_pro . " AS 'lbl_azp_ibn_control_panel_t_graphic_pro',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_graphic_veh . " AS 'lbl_azp_ibn_control_panel_t_graphic_veh',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_graphic_war . " AS 'lbl_azp_ibn_control_panel_t_graphic_war'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_information_read() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_information." . d_azp_ibn_information_id_azp_ibn_information . " AS 'lbl_azp_ibn_information_id_azp_ibn_information',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_created . " AS 'lbl_azp_ibn_information_m_date_created',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_modified . " AS 'lbl_azp_ibn_information_m_date_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_description . " AS 'lbl_azp_ibn_information_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_document . " AS 'lbl_azp_ibn_information_w_document',
					tc_azp_ibn_information." . d_azp_ibn_information_w_error . " AS 'lbl_azp_ibn_information_w_error',
					tc_azp_ibn_information." . d_azp_ibn_information_w_folder . " AS 'lbl_azp_ibn_information_w_folder',
					tc_azp_ibn_information." . d_azp_ibn_information_w_name . " AS 'lbl_azp_ibn_information_w_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_route . " AS 'lbl_azp_ibn_information_w_route',
					tc_azp_ibn_information." . d_azp_ibn_information_w_size . " AS 'lbl_azp_ibn_information_w_size',
					tc_azp_ibn_information." . d_azp_ibn_information_w_tmp_name . " AS 'lbl_azp_ibn_information_w_tmp_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_type . " AS 'lbl_azp_ibn_information_w_type',
					tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_information_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_information . " tc_azp_ibn_information
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_information." . d_azp_ibn_information_m_deleted . " = '1'
					AND tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_imagespress_read() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_id_azp_ibn_imagespress . " AS 'lbl_azp_ibn_imagespress_id_azp_ibn_imagespress',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_created . " AS 'lbl_azp_ibn_imagespress_m_date_created',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_modified . " AS 'lbl_azp_ibn_imagespress_m_date_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_description . " AS 'lbl_azp_ibn_imagespress_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_document . " AS 'lbl_azp_ibn_imagespress_w_document',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_error . " AS 'lbl_azp_ibn_imagespress_w_error',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_folder . " AS 'lbl_azp_ibn_imagespress_w_folder',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_name . " AS 'lbl_azp_ibn_imagespress_w_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_route . " AS 'lbl_azp_ibn_imagespress_w_route',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_size . " AS 'lbl_azp_ibn_imagespress_w_size',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_tmp_name . " AS 'lbl_azp_ibn_imagespress_w_tmp_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_type . " AS 'lbl_azp_ibn_imagespress_w_type',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_imagespress_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_imagespress . " tc_azp_ibn_imagespress
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_deleted . " = '1'
					AND tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_information_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_information." . d_azp_ibn_information_id_azp_ibn_information . " AS 'lbl_azp_ibn_information_id_azp_ibn_information',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_created . " AS 'lbl_azp_ibn_information_m_date_created',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_modified . " AS 'lbl_azp_ibn_information_m_date_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_description . " AS 'lbl_azp_ibn_information_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_document . " AS 'lbl_azp_ibn_information_w_document',
					tc_azp_ibn_information." . d_azp_ibn_information_w_error . " AS 'lbl_azp_ibn_information_w_error',
					tc_azp_ibn_information." . d_azp_ibn_information_w_folder . " AS 'lbl_azp_ibn_information_w_folder',
					tc_azp_ibn_information." . d_azp_ibn_information_w_name . " AS 'lbl_azp_ibn_information_w_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_route . " AS 'lbl_azp_ibn_information_w_route',
					tc_azp_ibn_information." . d_azp_ibn_information_w_size . " AS 'lbl_azp_ibn_information_w_size',
					tc_azp_ibn_information." . d_azp_ibn_information_w_tmp_name . " AS 'lbl_azp_ibn_information_w_tmp_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_type . " AS 'lbl_azp_ibn_information_w_type',
					tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_information_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_information . " tc_azp_ibn_information
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_information." . d_azp_ibn_information_m_deleted . " = '1'
					AND tc_azp_ibn_information." . d_azp_ibn_information_id_azp_ibn_information . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_imagespress_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_id_azp_ibn_imagespress . " AS 'lbl_azp_ibn_imagespress_id_azp_ibn_imagespress',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_created . " AS 'lbl_azp_ibn_imagespress_m_date_created',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_modified . " AS 'lbl_azp_ibn_imagespress_m_date_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_description . " AS 'lbl_azp_ibn_imagespress_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_document . " AS 'lbl_azp_ibn_imagespress_w_document',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_error . " AS 'lbl_azp_ibn_imagespress_w_error',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_folder . " AS 'lbl_azp_ibn_imagespress_w_folder',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_name . " AS 'lbl_azp_ibn_imagespress_w_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_route . " AS 'lbl_azp_ibn_imagespress_w_route',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_size . " AS 'lbl_azp_ibn_imagespress_w_size',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_tmp_name . " AS 'lbl_azp_ibn_imagespress_w_tmp_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_type . " AS 'lbl_azp_ibn_imagespress_w_type',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_imagespress_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_imagespress . " tc_azp_ibn_imagespress
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_deleted . " = '1'
					AND tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_information_client() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_information." . d_azp_ibn_information_id_azp_ibn_information . " AS 'lbl_azp_ibn_information_id_azp_ibn_information',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_created . " AS 'lbl_azp_ibn_information_m_date_created',
					tc_azp_ibn_information." . d_azp_ibn_information_m_date_modified . " AS 'lbl_azp_ibn_information_m_date_modified',
					tc_azp_ibn_information." . d_azp_ibn_information_m_description . " AS 'lbl_azp_ibn_information_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_document . " AS 'lbl_azp_ibn_information_w_document',
					tc_azp_ibn_information." . d_azp_ibn_information_w_error . " AS 'lbl_azp_ibn_information_w_error',
					tc_azp_ibn_information." . d_azp_ibn_information_w_folder . " AS 'lbl_azp_ibn_information_w_folder',
					tc_azp_ibn_information." . d_azp_ibn_information_w_name . " AS 'lbl_azp_ibn_information_w_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_route . " AS 'lbl_azp_ibn_information_w_route',
					tc_azp_ibn_information." . d_azp_ibn_information_w_size . " AS 'lbl_azp_ibn_information_w_size',
					tc_azp_ibn_information." . d_azp_ibn_information_w_tmp_name . " AS 'lbl_azp_ibn_information_w_tmp_name',
					tc_azp_ibn_information." . d_azp_ibn_information_w_type . " AS 'lbl_azp_ibn_information_w_type',
					tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_information_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_information . " tc_azp_ibn_information
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_information." . d_azp_ibn_information_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_information." . d_azp_ibn_information_m_deleted . " = '1'
					AND tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				ORDER BY tc_azp_ibn_information." . d_azp_ibn_information_v_id_azp_ibn_control_panel . " DESC LIMIT 1
			");
		}

		# Query Sql Select
		final public function sql_controller_crt_information_client() {
			# Definir variables con valores especificos
			$var_crt_client = ''; $var_crt_bank = ''; $var_fct_client = ''; $var_base = '';	

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_crt_request_data, d_azp_crt_request_data_id_azp_crt_request_data . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_crt_client = $value[d_azp_crt_request_data_v_id_azp_crt_client]; endforeach; }

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_crt_client, d_azp_crt_client_id_azp_crt_client . " = '" . $var_crt_client . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_crt_bank = $value[d_azp_crt_client_v_id_azp_crt_bank]; endforeach; }

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_crt_bank, d_azp_crt_bank_id_azp_crt_bank . " = '" . $var_crt_bank . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_fct_client = $value[d_azp_crt_bank_v_id_azp_fct_client]; endforeach; }

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_crt_request_data, d_azp_crt_request_data_id_azp_crt_request_data . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_base = $value[d_azp_crt_request_data_t_request_nro]; endforeach; }

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_crt_information." . d_azp_crt_information_id_azp_crt_information . " AS 'lbl_azp_crt_information_id_azp_crt_information',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_crt_information." . d_azp_crt_information_m_date_created . " AS 'lbl_azp_crt_information_m_date_created',
					tc_azp_crt_information." . d_azp_crt_information_m_date_modified . " AS 'lbl_azp_crt_information_m_date_modified',
					tc_azp_crt_information." . d_azp_crt_information_m_description . " AS 'lbl_azp_crt_information_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_crt_information." . d_azp_crt_information_t_request . " AS 'lbl_azp_crt_information_t_request',
					tc_azp_crt_information." . d_azp_crt_information_w_document . " AS 'lbl_azp_crt_information_w_document',
					tc_azp_crt_information." . d_azp_crt_information_w_error . " AS 'lbl_azp_crt_information_w_error',
					tc_azp_crt_information." . d_azp_crt_information_w_folder . " AS 'lbl_azp_crt_information_w_folder',
					tc_azp_crt_information." . d_azp_crt_information_w_name . " AS 'lbl_azp_crt_information_w_name',
					tc_azp_crt_information." . d_azp_crt_information_w_route . " AS 'lbl_azp_crt_information_w_route',
					tc_azp_crt_information." . d_azp_crt_information_w_size . " AS 'lbl_azp_crt_information_w_size',
					tc_azp_crt_information." . d_azp_crt_information_w_tmp_name . " AS 'lbl_azp_crt_information_w_tmp_name',
					tc_azp_crt_information." . d_azp_crt_information_w_type . " AS 'lbl_azp_crt_information_w_type',
					tc_azp_crt_information." . d_azp_crt_information_v_id_azp_fct_client . " AS 'lbl_azp_crt_information_v_id_azp_fct_client'
				FROM " . t_azp_crt_information . " tc_azp_crt_information
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_crt_information." . d_azp_crt_information_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_crt_information." . d_azp_crt_information_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_crt_information." . d_azp_crt_information_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_crt_information." . d_azp_crt_information_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
					ON tc_azp_crt_information." . d_azp_crt_information_v_id_azp_fct_client . "
						= tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
				
				WHERE tc_azp_crt_information." . d_azp_crt_information_m_deleted . " = '1'
					AND tc_azp_crt_information." . d_azp_crt_information_v_id_azp_fct_client . " = '" . $var_fct_client . "'
					AND tc_azp_crt_information." . d_azp_crt_information_t_request . " = '" . $var_base . "'
				ORDER BY tc_azp_crt_information." . d_azp_crt_information_id_azp_crt_information . " DESC LIMIT 1
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_information_client() {
			# Definir variables con valores especificos
			$var_gsc_client = ''; $var_fct_client = ''; $var_base = '';	

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_gsc_request, d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_gsc_client = $value[d_azp_gsc_request_v_id_azp_gsc_client]; endforeach; }

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_gsc_client, d_azp_gsc_client_id_azp_gsc_client . " = '" . $var_gsc_client . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_fct_client = $value[d_azp_gsc_client_v_id_azp_fct_client]; endforeach; }

			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_gsc_request, d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_base = $value[d_azp_gsc_request_t_number_request]; endforeach; }

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_information." . d_azp_gsc_information_id_azp_gsc_information . " AS 'lbl_azp_gsc_information_id_azp_gsc_information',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_gsc_information." . d_azp_gsc_information_m_date_created . " AS 'lbl_azp_gsc_information_m_date_created',
					tc_azp_gsc_information." . d_azp_gsc_information_m_date_modified . " AS 'lbl_azp_gsc_information_m_date_modified',
					tc_azp_gsc_information." . d_azp_gsc_information_m_description . " AS 'lbl_azp_gsc_information_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_gsc_information." . d_azp_gsc_information_t_request . " AS 'lbl_azp_gsc_information_t_request',
					tc_azp_gsc_information." . d_azp_gsc_information_w_document . " AS 'lbl_azp_gsc_information_w_document',
					tc_azp_gsc_information." . d_azp_gsc_information_w_error . " AS 'lbl_azp_gsc_information_w_error',
					tc_azp_gsc_information." . d_azp_gsc_information_w_folder . " AS 'lbl_azp_gsc_information_w_folder',
					tc_azp_gsc_information." . d_azp_gsc_information_w_name . " AS 'lbl_azp_gsc_information_w_name',
					tc_azp_gsc_information." . d_azp_gsc_information_w_route . " AS 'lbl_azp_gsc_information_w_route',
					tc_azp_gsc_information." . d_azp_gsc_information_w_size . " AS 'lbl_azp_gsc_information_w_size',
					tc_azp_gsc_information." . d_azp_gsc_information_w_tmp_name . " AS 'lbl_azp_gsc_information_w_tmp_name',
					tc_azp_gsc_information." . d_azp_gsc_information_w_type . " AS 'lbl_azp_gsc_information_w_type',
					tc_azp_gsc_information." . d_azp_gsc_information_v_id_azp_fct_client . " AS 'lbl_azp_gsc_information_v_id_azp_fct_client'
				FROM " . t_azp_gsc_information . " tc_azp_gsc_information
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_gsc_information." . d_azp_gsc_information_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_gsc_information." . d_azp_gsc_information_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_gsc_information." . d_azp_gsc_information_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_gsc_information." . d_azp_gsc_information_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_information." . d_azp_gsc_information_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "
				
				WHERE tc_azp_gsc_information." . d_azp_gsc_information_m_deleted . " = '1'
					AND tc_azp_gsc_information." . d_azp_gsc_information_v_id_azp_fct_client . " = '" . $var_fct_client . "'
					AND tc_azp_gsc_information." . d_azp_gsc_information_t_request . " = '" . $var_base . "'
				ORDER BY tc_azp_gsc_information." . d_azp_gsc_information_id_azp_gsc_information . " DESC LIMIT 1
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_imagespress_client() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_id_azp_ibn_imagespress . " AS 'lbl_azp_ibn_imagespress_id_azp_ibn_imagespress',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_created . " AS 'lbl_azp_ibn_imagespress_m_date_created',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_date_modified . " AS 'lbl_azp_ibn_imagespress_m_date_modified',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_description . " AS 'lbl_azp_ibn_imagespress_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_document . " AS 'lbl_azp_ibn_imagespress_w_document',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_error . " AS 'lbl_azp_ibn_imagespress_w_error',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_folder . " AS 'lbl_azp_ibn_imagespress_w_folder',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_name . " AS 'lbl_azp_ibn_imagespress_w_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_route . " AS 'lbl_azp_ibn_imagespress_w_route',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_size . " AS 'lbl_azp_ibn_imagespress_w_size',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_tmp_name . " AS 'lbl_azp_ibn_imagespress_w_tmp_name',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_w_type . " AS 'lbl_azp_ibn_imagespress_w_type',
					tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_imagespress_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_imagespress . " tc_azp_ibn_imagespress
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_m_deleted . " = '1'
					AND tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				ORDER BY tc_azp_ibn_imagespress." . d_azp_ibn_imagespress_v_id_azp_ibn_control_panel . " DESC LIMIT 1
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_individual() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_evaluation . " tc_azp_ibn_evaluation
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
						= tc_azp_ibn_evaluation." . d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " = 'SI'
				GROUP BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_all() {
			if (isset($_GET['field_finish'])) { $var_finish = $_GET['field_finish']; } else { $var_finish = ''; }
			if (isset($_GET['field_state'])) { $var_state = $_GET['field_state']; } else { $var_state = ''; }
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_inform_client . " AS 'lbl_azp_ibn_control_panel_t_inform_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_evaluation . " tc_azp_ibn_evaluation
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
						= tc_azp_ibn_evaluation." . d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = '" . $var_state . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " = '" . $var_finish . "'
				GROUP BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_idntf() {
			if (isset($_GET['field_finish'])) { $var_finish = $_GET['field_finish']; } else { $var_finish = ''; }
			if (isset($_GET['field_state'])) { $var_state = $_GET['field_state']; } else { $var_state = ''; }
			if (isset($_GET['field_idntf'])) { $var_identification = $_GET['field_idntf']; } else { $var_identification = ''; }
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_inform_client . " AS 'lbl_azp_ibn_control_panel_t_inform_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_evaluation . " tc_azp_ibn_evaluation
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
						= tc_azp_ibn_evaluation." . d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = '" . $var_state . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " = '" . $var_finish . "'
					AND tc_azp_ibn_evaluation." . d_azp_ibn_evaluation_t_identification . " = '" . $var_identification . "'
				GROUP BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_date() {
			if (isset($_GET['field_finish'])) { $var_finish = $_GET['field_finish']; } else { $var_finish = ''; }
			if (isset($_GET['field_state'])) { $var_state = $_GET['field_state']; } else { $var_state = ''; }
			if (isset($_GET['field_since'])) { $var_date_since = $_GET['field_since']; } else { $var_date_since = ''; }
			if (isset($_GET['field_until'])) { $var_date_until = $_GET['field_until']; } else { $var_date_until = ''; }
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_inform_client . " AS 'lbl_azp_ibn_control_panel_t_inform_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_evaluation . " tc_azp_ibn_evaluation
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
						= tc_azp_ibn_evaluation." . d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = '" . $var_state . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " = '" . $var_finish . "'
					AND (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $var_date_since . "'
						AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $var_date_until . "')
				GROUP BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_data_main() {
			if (isset($_GET['field_identification'])) {
				if ($_GET['field_identification'] != '') {
					$var_cedulation = "AND " . d_azp_ibn_data_main_t_identification . " = '" . $_GET['field_identification'] . "'";
				} else { $var_cedulation = ''; }
			} else { $var_cedulation = ''; }
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_capture, d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $this->id . "' AND " . d_azp_ibn_capture_v_id_azp_ibn_module . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_capture_t_identification];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_t_image_camera => 'SI',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_capture, d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $this->id . "' AND " . d_azp_ibn_capture_v_id_azp_ibn_module . " = '2'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_capture_t_identification];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_t_image_property => 'SI',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_capture, d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $this->id . "' AND " . d_azp_ibn_capture_v_id_azp_ibn_module . " = '3'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_capture_t_identification];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_t_image_vehicle => 'SI',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_capture, d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $this->id . "' AND " . d_azp_ibn_capture_v_id_azp_ibn_module . " = '4'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_capture_t_identification];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_t_image_warranty => 'SI',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_capture, d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $this->id . "' AND " . d_azp_ibn_capture_v_id_azp_ibn_module . " = '5'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_capture_t_identification];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_t_image_furniture => 'SI',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_created . " AS 'lbl_azp_ibn_data_main_m_date_created',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_modified . " AS 'lbl_azp_ibn_data_main_m_date_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_description . " AS 'lbl_azp_ibn_data_main_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_image_camera . " AS 'lbl_azp_ibn_data_main_t_image_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_image_furniture . " AS 'lbl_azp_ibn_data_main_t_image_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_image_property . " AS 'lbl_azp_ibn_data_main_t_image_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_image_vehicle . " AS 'lbl_azp_ibn_data_main_t_image_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_image_warranty . " AS 'lbl_azp_ibn_data_main_t_image_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' " . $var_cedulation . "
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_data_found() {
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql => $value):
					# Asingacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_data_main_t_identification];
					$var_ibn_control_panel = $value[d_azp_ibn_data_main_v_id_azp_ibn_control_panel];
				endforeach;
			} else { $var_identification = 0; $var_ibn_control_panel = 0; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_ibn_control_panel . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql => $value):
					# Asingacion de valores a nuevas variables
					$var_ibn_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client];
				endforeach;
			} else { $var_ibn_client = 0; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_created . " AS 'lbl_azp_ibn_data_main_m_date_created',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_modified . " AS 'lbl_azp_ibn_data_main_m_date_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_description . " AS 'lbl_azp_ibn_data_main_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " != '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . " = '" . $var_ibn_client . "'
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_count() {
			if (isset($_GET['field_identification'])) {
				if ($_GET['field_identification'] != '') {
					$var_identification = "AND " . d_azp_ibn_evaluation_t_identification . " = '" . $_GET['field_identification'] . "'";
				} else { $var_identification = ''; }
			} else { $var_identification = ''; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel);
			# Validar si la consulta es verdadera
			if (false != $var_sql) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql as $key_sql):
					# Asignar valores a una vairable
					$var_id = $key_sql[d_azp_ibn_control_panel_id_azp_ibn_control_panel];
					#-----------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " . d_azp_ibn_data_main_t_bcount . " = '1' " . $var_identification);
					# Validar si la consulta es verdadera
					if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_register = $value['lbl_count']; endforeach; } else { $var_register = 0; }
					#-----------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_control_panel_t_register => $var_register,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_control_panel, $var_array,
						d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_id . "'");
				endforeach;
			}
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_finish() {
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_t_state . " = 'Activo'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql as $key_sql):
					# Asignacion de valores a nuevas variables
					$var_id = $key_sql[d_azp_ibn_control_panel_id_azp_ibn_control_panel];
					$var_camera = $key_sql[d_azp_ibn_control_panel_t_mod_camera];
					$var_furniture = $key_sql[d_azp_ibn_control_panel_t_mod_furniture];
					$var_property = $key_sql[d_azp_ibn_control_panel_t_mod_property];
					$var_vehicle = $key_sql[d_azp_ibn_control_panel_t_mod_vehicle];
					$var_warranty = $key_sql[d_azp_ibn_control_panel_t_mod_warranty];
					# Control de condiciones para la validacion de datos
					if ($var_camera == 'SI' && $var_furniture == 'SI' && $var_property == 'SI' && $var_vehicle == 'SI' && $var_warranty == 'SI') {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_finished => 'SI',);
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_id . "'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_finished => 'NO',);
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_id . "'");
					}
				endforeach;
			}
		}

		# Control Errores Update
		final private function error_sql_dsh_azp_ibn_control_panel_import(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_im_id'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_im_id']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_im_file']['name'];
				$empty_type = $_FILES['field_im_file']['type'];
				$empty_tmp_name = $_FILES['field_im_file']['tmp_name'];
				$empty_error = $_FILES['field_im_file']['error'];
				$empty_size = $_FILES['field_im_file']['size'];
				#-------------------------------------------------------------------------#
				$empty_tamanio = 1000; $empty_bytes = 1024;
				$empty_extension = array('csv',);
				$empty_path_info = strtolower(pathinfo($empty_name, PATHINFO_EXTENSION));
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es oblgitario.');
				}
				#---------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#---------------------------------------------#
				if (Func::emp($empty_name)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo es oblgitario.');
				}
				#---------------------------------------------#
				if (!in_array($empty_path_info, $empty_extension)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo solo acepta formatos ' . implode(',', $empty_extension) . '.');
				}
				#---------------------------------------------#
				if ($empty_size > ($empty_tamanio * $empty_bytes)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El archivo seleccionado excede el tamaño de 1 MB.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_dsh_azp_ibn_control_panel_import(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_control_panel_import($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Consultar helper y sus opciones
				Helper::load('files');
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_im_id']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_im_file']['name'];
				$empty_error = $_FILES['field_im_file']['error'];
				$empty_size = $_FILES['field_im_file']['size'];
				$empty_tmp_name = $_FILES['field_im_file']['tmp_name'];
				$empty_type = $_FILES['field_im_file']['type'];
				#-------------------------------------------------------------------------#
				$empty_route = '../systemfiles/filesproject/';
				$empty_folder = 'azp_ibn_mass_load/';
				$empty_document = DATE_NUMBER . '_' . HOUR_NUMBER . '.csv';
				#-------------------------------------------------------------------------#
				# Control de existencia de carpeta
				if (!is_dir($empty_route . $empty_folder)) {
					# Creacion de carpetas en el desarrollo
					Files::create_dir($empty_route . $empty_folder, 0777);
				}
				#-------------------------------------------------------------------------#
				# Subida de archivos en el desarrollo
				Files::upload_file(trim(preg_replace('/\s+/',' ', $empty_document)), $empty_tmp_name, $empty_route . $empty_folder, true);
				#-------------------------------------------------------------------------#
				# Dar permisos a la ruta y archivo
				chmod($empty_route . $empty_folder . $empty_document, 0777);
				#-------------------------------------------------------------------------#
				$var_search = array(
					'	', "'", '"', ';', ',', '', '`', '─', '~', '´', '	', '{', '}', '[', ']', '–',
					'ç', 'Ç', 'æ', 'Æ', 'ã', 'Ã', '°', '\n', '\r', '\t');
				$var_replace = array(
					'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
					'c', 'C', '', '', '', '', '', '', '', '');
				#-------------------------------------------------------------------------#
				# Eliminar registros de la tabla de importacion
				$this->db->query("DELETE FROM " . t_azp_ibn_mass_load);
				# Eliminar registros de la tabla de importacion
				$this->db->query("ALTER TABLE " . t_azp_ibn_mass_load . " AUTO_INCREMENT = 1");
				#-------------------------------------------------------------------------#
				# Obtener datos del archivo recibido y saltar lineas
				$var_file = file_get_contents($empty_route . $empty_folder . $empty_document);
				$var_file = explode("\n", $var_file);
				$var_file = array_filter($var_file);
				# Recorrer los datos del archivo y separarlos por coma o punto y coma
				foreach ($var_file as $key => $value) { $var_list[] = explode(";", $value); }
				#-------------------------------------------------------------------------#
				# Recorrer los datos divididos por filas y almacenarlos en la base
				foreach ($var_list as $key => $value) {
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[0])) { $import_00 = ''; } else {
						if ($value[0] != '' || $value[0] != NULL) {
							$import_00 = $this->db->scape($value[0]);
						} else { $import_00 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[1])) { $import_01 = ''; } else {
						if ($value[1] != '' || $value[1] != NULL) {
							$import_01 = $this->db->scape($value[1]);
						} else { $import_01 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[2])) { $import_02 = ''; } else {
						if ($value[2] != '' || $value[2] != NULL) {
							$import_02 = $this->db->scape($value[2]);
						} else { $import_02 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[3])) { $import_03 = ''; } else {
						if ($value[3] != '' || $value[3] != NULL) {
							$import_03 = $this->db->scape($value[3]);
						} else { $import_03 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[4])) { $import_04 = ''; } else {
						if ($value[4] != '' || $value[4] != NULL) {
							$import_04 = $this->db->scape($value[4]);
						} else { $import_04 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[5])) { $import_05 = ''; } else {
						if ($value[5] != '' || $value[5] != NULL) {
							$import_05 = $this->db->scape($value[5]);
						} else { $import_05 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[6])) { $import_06 = ''; } else {
						if ($value[6] != '' || $value[6] != NULL) {
							$import_06 = $this->db->scape($value[6]);
						} else { $import_06 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[7])) { $import_07 = ''; } else {
						if ($value[7] != '' || $value[7] != NULL) {
							$import_07 = $this->db->scape($value[7]);
						} else { $import_07 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[8])) { $import_08 = ''; } else {
						if ($value[8] != '' || $value[8] != NULL) {
							$import_08 = $this->db->scape($value[8]);
						} else { $import_08 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					if (empty($value[9])) { $import_09 = ''; } else {
						if ($value[9] != '' || $value[9] != NULL) {
							$import_09 = $this->db->scape($value[9]);
						} else { $import_09 = ''; }
					}
					# Captura de los datos a traves de post para ser revisados y asignados a una nueva variable
					/*if (empty($value[10])) { $import_10 = ''; } else {
						if ($value[10] != '' || $value[10] != NULL) {
							$import_10 = $this->db->scape($value[10]);
						} else { $import_10 = ''; }
					}*/
					#-------------------------------------------------------------------------#
					# Reemplazar ciertos caracteres especificados de los valores recibidos
					$repl_00 = str_replace($var_search, $var_replace, $import_00);
					$repl_01 = str_replace($var_search, $var_replace, $import_01);
					$repl_02 = str_replace($var_search, $var_replace, $import_02);
					$repl_03 = str_replace($var_search, $var_replace, $import_03);
					$repl_04 = str_replace($var_search, $var_replace, $import_04);
					$repl_05 = str_replace($var_search, $var_replace, $import_05);
					$repl_06 = str_replace($var_search, $var_replace, $import_06);
					$repl_07 = str_replace($var_search, $var_replace, $import_07);
					$repl_08 = str_replace($var_search, $var_replace, $import_08);
					$repl_09 = str_replace($var_search, $var_replace, $import_09);
					//$repl_10 = str_replace($var_search, $var_replace, $import_10);
					#-------------------------------------------------------------------------#
					# Eliminar dobles vacios en los valores recibidos
					$preg_00 = trim(preg_replace('/\s+/',' ', $repl_00));
					$preg_01 = trim(preg_replace('/\s+/',' ', $repl_01));
					$preg_02 = trim(preg_replace('/\s+/',' ', $repl_02));
					$preg_03 = trim(preg_replace('/\s+/',' ', $repl_03));
					$preg_04 = trim(preg_replace('/\s+/',' ', $repl_04));
					$preg_05 = trim(preg_replace('/\s+/',' ', $repl_05));
					$preg_06 = trim(preg_replace('/\s+/',' ', $repl_06));
					$preg_07 = trim(preg_replace('/\s+/',' ', $repl_07));
					$preg_08 = trim(preg_replace('/\s+/',' ', $repl_08));
					$preg_09 = trim(preg_replace('/\s+/',' ', $repl_09));
					//$preg_10 = trim(preg_replace('/\s+/',' ', $repl_10));
					#-------------------------------------------------------------------------#
					# Validacion de valores recibidos para codificacion.
					$empty_00 = html_entity_decode(utf8_encode($preg_00));
					$empty_01 = html_entity_decode(utf8_encode($preg_01));
					$empty_02 = html_entity_decode(utf8_encode($preg_02));
					$empty_03 = html_entity_decode(utf8_encode($preg_03));
					$empty_04 = html_entity_decode(utf8_encode($preg_04));
					$empty_05 = html_entity_decode(utf8_encode($preg_05));
					$empty_06 = html_entity_decode(utf8_encode($preg_06));
					$empty_07 = html_entity_decode(utf8_encode($preg_07));
					$empty_08 = html_entity_decode(utf8_encode($preg_08));
					$empty_09 = html_entity_decode(utf8_encode($preg_09));
					//$empty_10 = html_entity_decode(utf8_encode($preg_10));
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_mass_load_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_mass_load_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_mass_load_m_date_created => DATE_HOUR,
						d_azp_ibn_mass_load_m_date_modified => DATE_HOUR,
						d_azp_ibn_mass_load_m_deleted => '1',
						d_azp_ibn_mass_load_m_description => '',
						d_azp_ibn_mass_load_m_level => '2',
						d_azp_ibn_mass_load_m_status => '1',
						d_azp_ibn_mass_load_m_temp => '2',
						d_azp_ibn_mass_load_s_date => '',
						d_azp_ibn_mass_load_t_city => strtoupper($empty_05),
						d_azp_ibn_mass_load_t_code => strtoupper($empty_00),
						d_azp_ibn_mass_load_t_code_research => strtoupper($empty_09),
						d_azp_ibn_mass_load_t_consecutive => strtoupper(''),
						d_azp_ibn_mass_load_t_coverage => strtoupper(''),
						//d_azp_ibn_mass_load_t_coverage => strtoupper($empty_10),
						d_azp_ibn_mass_load_t_data => strtoupper('No'),
						d_azp_ibn_mass_load_t_date_arrival => strtoupper($empty_07),
						d_azp_ibn_mass_load_t_date_final => strtoupper(''),
						d_azp_ibn_mass_load_t_date_general => strtoupper(''),
						d_azp_ibn_mass_load_t_date_load => strtoupper(DATE),
						d_azp_ibn_mass_load_t_date_reply => strtoupper($empty_08),
						d_azp_ibn_mass_load_t_department => strtoupper($empty_06),
						d_azp_ibn_mass_load_t_entity => strtoupper($empty_04),
						d_azp_ibn_mass_load_t_finished => strtoupper('No'),
						d_azp_ibn_mass_load_t_full_name => strtoupper($empty_03),
						d_azp_ibn_mass_load_t_identification => strtoupper($empty_02),
						d_azp_ibn_mass_load_t_nro_obligation => strtoupper($empty_01),
						d_azp_ibn_mass_load_t_policy_final => strtoupper('Negativo'),
						d_azp_ibn_mass_load_t_policy_effective => strtoupper('Negativo'),
						d_azp_ibn_mass_load_t_policy_viability => strtoupper('Negativo'),
						d_azp_ibn_mass_load_v_id_azp_ibn_client => '0',
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_mass_load, $var_array);
				}
				#-------------------------------------------------------------------------#
				# Eliminar registros de la tabla de importacion
				$this->db->query("DELETE FROM " . t_azp_ibn_mass_load . " WHERE " . d_azp_ibn_mass_load_id_azp_ibn_mass_load . " = '1'");
				#-------------------------------------------------------------------------#
				# Eliminar registros de la tabla de importacion
				$this->db->query("DELETE FROM " . t_azs_ibn_mass_load);
				# Eliminar registros de la tabla de importacion
				$this->db->query("ALTER TABLE " . t_azs_ibn_mass_load . " AUTO_INCREMENT = 1");
				# --------------------------------------------------------------------------------------------------
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_mass_load, d_azp_ibn_mass_load_t_date_arrival . " = ''");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_mass_load_s_date => 1,);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_id_azp_ibn_mass_load . " = '" . $key_sql[d_azp_ibn_mass_load_id_azp_ibn_mass_load] . "'");
					endforeach;
				}
				# --------------------------------------------------------------------------------------------------
				# Instanciando el modelo en una variable
				$var_model = new m_zv_dashboardModel;
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_mass_load, d_azp_ibn_mass_load_t_date_arrival . " != ''");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						$var_model->validate_date($key_sql[d_azp_ibn_mass_load_t_date_arrival]);
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_mass_load_s_date => $var_model->validate_date($key_sql[d_azp_ibn_mass_load_t_date_arrival]),);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_id_azp_ibn_mass_load . " = '" . $key_sql[d_azp_ibn_mass_load_id_azp_ibn_mass_load] . "'");
					endforeach;
				}
				# --------------------------------------------------------------------------------------------------
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_mass_load, d_azp_ibn_mass_load_t_date_reply . " = ''");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_mass_load_s_date => 1,);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_id_azp_ibn_mass_load . " = '" . $key_sql[d_azp_ibn_mass_load_id_azp_ibn_mass_load] . "'");
					endforeach;
				}
				# --------------------------------------------------------------------------------------------------
				# Instanciando el modelo en una variable
				$var_model = new m_zv_dashboardModel;
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_mass_load, d_azp_ibn_mass_load_t_date_reply . " != ''");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						$var_model->validate_date($key_sql[d_azp_ibn_mass_load_t_date_reply]);
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_mass_load_s_date => $var_model->validate_date($key_sql[d_azp_ibn_mass_load_t_date_reply]),);
						# Insertar valores en la nueva tabla que no existen
						$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_id_azp_ibn_mass_load . " = '" . $key_sql[d_azp_ibn_mass_load_id_azp_ibn_mass_load] . "'");
					endforeach;
				}
				# --------------------------------------------------------------------------------------------------
				# Organizacion de los valores capturados y asignados a los campos a insertar
				$var_array = array(d_azp_ibn_mass_load_s_date => 0,);
				# Insertar valores en la nueva tabla que no existen
				$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_s_date . " = ''");
				# --------------------------------------------------------------------------------------------------
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_mass_load, d_azp_ibn_mass_load_s_date . " = '0'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_date_count = $key_sql['lbl_count']; endforeach; }
				# Validar si la consulta es verdadera
				if ($var_date_count == 0) {
					#-------------------------------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					/*$var_sql = $this->db->select("*", t_azp_ibn_mass_load, d_azp_ibn_mass_load_m_deleted . " = '1' GROUP BY " . d_azp_ibn_mass_load_t_identification);
					# Validar si la consulta es verdadera
					if (false != $var_sql) {
						# Recorrer las filas de la consulta generada
						foreach ($var_sql as $key_sql):
							# Asignacion de valores a nuevas variables
							$var_identification = $key_sql[d_azp_ibn_mass_load_t_identification];
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array(
								d_azs_ibn_mass_load_m_by_created => $_SESSION[SESS_APP_ID],
								d_azs_ibn_mass_load_m_by_modified => $_SESSION[SESS_APP_ID],
								d_azs_ibn_mass_load_m_date_created => DATE_HOUR,
								d_azs_ibn_mass_load_m_date_modified => DATE_HOUR,
								d_azs_ibn_mass_load_m_deleted => '1',
								d_azs_ibn_mass_load_m_description => '',
								d_azs_ibn_mass_load_m_level => '2',
								d_azs_ibn_mass_load_m_status => '1',
								d_azs_ibn_mass_load_m_temp => '1',
								d_azs_ibn_mass_load_t_identification => $var_identification,
							);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->insert(t_azs_ibn_mass_load, $var_array);
						endforeach;
					}*/
					#-------------------------------------------------------------------------#
					$var_sql_ = $this->db->query("
						INSERT INTO " . t_azs_ibn_mass_load . " (
							" . d_azs_ibn_mass_load_m_by_created . ",
							" . d_azs_ibn_mass_load_m_by_modified . ",
							" . d_azs_ibn_mass_load_m_date_created . ",
							" . d_azs_ibn_mass_load_m_date_modified . ",
							" . d_azs_ibn_mass_load_m_deleted . ",
							" . d_azs_ibn_mass_load_m_description . ",
							" . d_azs_ibn_mass_load_m_level . ",
							" . d_azs_ibn_mass_load_m_status . ",
							" . d_azs_ibn_mass_load_m_temp . ",
							" . d_azs_ibn_mass_load_s_date . ",
							" . d_azs_ibn_mass_load_t_city . ",
							" . d_azs_ibn_mass_load_t_code . ",
							" . d_azs_ibn_mass_load_t_code_research . ",
							" . d_azs_ibn_mass_load_t_consecutive . ",
							" . d_azs_ibn_mass_load_t_data . ",
							" . d_azs_ibn_mass_load_t_date_arrival . ",
							" . d_azs_ibn_mass_load_t_date_final . ",
							" . d_azs_ibn_mass_load_t_date_general . ",
							" . d_azs_ibn_mass_load_t_date_load . ",
							" . d_azs_ibn_mass_load_t_date_reply . ",
							" . d_azs_ibn_mass_load_t_department . ",
							" . d_azs_ibn_mass_load_t_entity . ",
							" . d_azs_ibn_mass_load_t_finished . ",
							" . d_azs_ibn_mass_load_t_full_name . ",
							" . d_azs_ibn_mass_load_t_identification . ",
							" . d_azs_ibn_mass_load_t_nro_obligation . ",
							" . d_azs_ibn_mass_load_t_policy_final . ",
							" . d_azs_ibn_mass_load_t_policy_effective . ",
							" . d_azs_ibn_mass_load_t_policy_viability . ",
							" . d_azs_ibn_mass_load_u_ibn_client . "
						) SELECT
							" . d_azp_ibn_mass_load_m_by_created . ",
							" . d_azp_ibn_mass_load_m_by_modified . ",
							" . d_azp_ibn_mass_load_m_date_created . ",
							" . d_azp_ibn_mass_load_m_date_modified . ",
							" . d_azp_ibn_mass_load_m_deleted . ",
							" . d_azp_ibn_mass_load_m_description . ",
							" . d_azp_ibn_mass_load_m_level . ",
							" . d_azp_ibn_mass_load_m_status . ",
							" . d_azp_ibn_mass_load_m_temp . ",
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							" . d_azp_ibn_mass_load_t_identification . ",
							'',
							'',
							'',
							'',
							''
						FROM " . t_azp_ibn_mass_load . "
						WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
						GROUP BY " . d_azp_ibn_mass_load_t_identification . "
					");
					#-------------------------------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select("*", t_azs_ibn_mass_load);
					# Validar si la consulta es verdadera
					if (false != $var_sql) {
						# Recorrer las filas de la consulta generada
						foreach ($var_sql as $key_sql):
							# Asignacion de valores a variables
							$var_id_copy = $key_sql[d_azs_ibn_mass_load_id_azs_ibn_mass_load];
							$var_identif = $key_sql[d_azs_ibn_mass_load_t_identification];
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array(d_azp_ibn_mass_load_t_consecutive => $var_id_copy,);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_mass_load, $var_array, d_azp_ibn_mass_load_t_identification . " = '" . $var_identif . "'");
						endforeach;
					}
					#-------------------------------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select('*', t_azp_ibn_client, d_azp_ibn_client_m_deleted . " = '1'");
					# Validar si la consulta es verdadera
					if (false != $var_sql) {
						# Recorrer las filas de la consulta generada
						foreach ($var_sql as $key_sql):
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array(d_azp_ibn_mass_load_v_id_azp_ibn_client => $key_sql[d_azp_ibn_client_id_azp_ibn_client],);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_mass_load, $var_array,
								d_azp_ibn_mass_load_t_entity . " = '" . $key_sql[d_azp_ibn_client_t_name] . "'");
						endforeach;
					}
					#-------------------------------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_mass_load);
					# Validar si la consulta es verdadera
					if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_count = $key_sql['lbl_count']; endforeach; }
					#-------------------------------------------------------------------------#
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select("COUNT(*) AS 'lbl_count_client'", t_azp_ibn_mass_load, d_azp_ibn_mass_load_v_id_azp_ibn_client . " = '0'");
					# Validar si la consulta es verdadera
					if (true == $var_sql) { foreach ($var_sql as $key_sql): $var_count_client = $key_sql['lbl_count_client']; endforeach; }
					#-------------------------------------------------------------------------#
					if ($var_count_client > 0) {
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("MIN(" . d_azp_ibn_mass_load_id_azp_ibn_mass_load . ") AS 'lbl_min_id'",
							t_azp_ibn_mass_load, d_azp_ibn_mass_load_v_id_azp_ibn_client . " = '0'");
						# Validar si la consulta es verdadera
						if (true == $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql): $var_min_id = $key_sql['lbl_min_id'] - 1; endforeach;
							# Retornar el mensaje una vez ejecutada la rutina del proceso
							return array('error' => 1, 'message' => '<b>Error:</b> El cliente ingresado en la fila ' . $var_min_id . ' de excel, no coincide con la base.');
						}
					}
					#-------------------------------------------------------------------------#
					if ($var_count_client == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_data_main_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("*", t_azp_ibn_mass_load, d_azp_ibn_mass_load_m_deleted . " = '1'" . " " . "GROUP BY" . " " . d_azp_ibn_mass_load_t_code_research);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_ibn_control_panel_m_by_created => $key_sql[d_azp_ibn_mass_load_m_by_created],
									d_azp_ibn_control_panel_m_by_modified => $key_sql[d_azp_ibn_mass_load_m_by_modified],
									d_azp_ibn_control_panel_m_date_created => $key_sql[d_azp_ibn_mass_load_m_date_created],
									d_azp_ibn_control_panel_m_date_modified => $key_sql[d_azp_ibn_mass_load_m_date_modified],
									d_azp_ibn_control_panel_m_deleted => $key_sql[d_azp_ibn_mass_load_m_deleted],
									d_azp_ibn_control_panel_m_description => $key_sql[d_azp_ibn_mass_load_m_description],
									d_azp_ibn_control_panel_m_level => $key_sql[d_azp_ibn_mass_load_m_level],
									d_azp_ibn_control_panel_m_status => $key_sql[d_azp_ibn_mass_load_m_status],
									d_azp_ibn_control_panel_m_temp => $key_sql[d_azp_ibn_mass_load_m_temp],
									d_azp_ibn_control_panel_s_date => '',
									d_azp_ibn_control_panel_t_code_research => strtoupper($key_sql[d_azp_ibn_mass_load_t_code_research]),
									d_azp_ibn_control_panel_t_count_camera => '',
									d_azp_ibn_control_panel_t_count_furniture => '',
									d_azp_ibn_control_panel_t_count_property => '',
									d_azp_ibn_control_panel_t_count_vehicle => '',
									d_azp_ibn_control_panel_t_count_warranty => '',
									d_azp_ibn_control_panel_t_date_arrival => strtoupper($key_sql[d_azp_ibn_mass_load_t_date_arrival]),
									d_azp_ibn_control_panel_t_date_final => strtoupper($key_sql[d_azp_ibn_mass_load_t_date_final]),
									d_azp_ibn_control_panel_t_date_general => strtoupper($key_sql[d_azp_ibn_mass_load_t_date_general]),
									d_azp_ibn_control_panel_t_date_load => strtoupper($key_sql[d_azp_ibn_mass_load_t_date_load]),
									d_azp_ibn_control_panel_t_date_reply => strtoupper($key_sql[d_azp_ibn_mass_load_t_date_reply]),
									d_azp_ibn_control_panel_t_entity => strtoupper($key_sql[d_azp_ibn_mass_load_t_entity]),
									d_azp_ibn_control_panel_t_document => '',
									d_azp_ibn_control_panel_t_encode => '',
									d_azp_ibn_control_panel_t_finished => strtoupper($key_sql[d_azp_ibn_mass_load_t_finished]),
									d_azp_ibn_control_panel_t_mod_camera => strtoupper('No'),
									d_azp_ibn_control_panel_t_mod_furniture => strtoupper('No'),
									d_azp_ibn_control_panel_t_mod_property => strtoupper('No'),
									d_azp_ibn_control_panel_t_mod_vehicle => strtoupper('No'),
									d_azp_ibn_control_panel_t_mod_warranty => strtoupper('No'),
									d_azp_ibn_control_panel_t_register => '',
									d_azp_ibn_control_panel_t_route => '',
									d_azp_ibn_control_panel_t_state => strtoupper('Activo'),
									d_azp_ibn_control_panel_v_id_azp_ibn_client => $key_sql[d_azp_ibn_mass_load_v_id_azp_ibn_client],
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->insert(t_azp_ibn_control_panel, $var_array);
							endforeach;
						}
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_m_deleted . " = '1' AND " . d_azp_ibn_control_panel_m_temp . " = '2'");
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql => $value):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_id = $value[d_azp_ibn_control_panel_id_azp_ibn_control_panel];
								# Rutas para la creacion de carpetas
								$var_route = '../systemfiles/filesproject/';
								$var_folder = 'azp_ibn_control_panel/' . $var_id . '/';
								# Control de existencia de carpeta
								if (!is_dir($var_route . $var_folder)) { Files::create_dir($var_route . $var_folder, 0777); chmod($var_route . $var_folder, 0777); }
							endforeach;
						}
						#-------------------------------------------------------------------------#
						$var_sql_ = $this->db->query("
							INSERT INTO " . t_azp_ibn_evaluation . " (
								" . d_azp_ibn_evaluation_m_by_created . ",
								" . d_azp_ibn_evaluation_m_by_modified . ",
								" . d_azp_ibn_evaluation_m_date_created . ",
								" . d_azp_ibn_evaluation_m_date_modified . ",
								" . d_azp_ibn_evaluation_m_deleted . ",
								" . d_azp_ibn_evaluation_m_description . ",
								" . d_azp_ibn_evaluation_m_level . ",
								" . d_azp_ibn_evaluation_m_status . ",
								" . d_azp_ibn_evaluation_m_temp . ",
								" . d_azp_ibn_evaluation_t_municipality . ",
								" . d_azp_ibn_evaluation_t_identification . ",
								" . d_azp_ibn_evaluation_t_policy_effective . ",
								" . d_azp_ibn_evaluation_t_policy_viability . ",
								" . d_azp_ibn_evaluation_t_policy_ef_cam . ",
								" . d_azp_ibn_evaluation_t_policy_ef_fur . ",
								" . d_azp_ibn_evaluation_t_policy_ef_pro . ",
								" . d_azp_ibn_evaluation_t_policy_ef_veh . ",
								" . d_azp_ibn_evaluation_t_policy_ef_war . ",
								" . d_azp_ibn_evaluation_t_policy_vb_cam . ",
								" . d_azp_ibn_evaluation_t_policy_vb_fur . ",
								" . d_azp_ibn_evaluation_t_policy_vb_pro . ",
								" . d_azp_ibn_evaluation_t_policy_vb_veh . ",
								" . d_azp_ibn_evaluation_t_policy_vb_war . ",
								" . d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . "
							) SELECT
								UPPER(" . d_azp_ibn_mass_load_m_by_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_by_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_deleted . "),
								UPPER(" . d_azp_ibn_mass_load_m_description . "),
								UPPER(" . d_azp_ibn_mass_load_m_level . "),
								UPPER(" . d_azp_ibn_mass_load_m_status . "),
								UPPER(" . d_azp_ibn_mass_load_m_temp . "),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER(" . d_azp_ibn_mass_load_t_identification . "),
								UPPER(" . d_azp_ibn_mass_load_t_policy_effective . "),
								UPPER(" . d_azp_ibn_mass_load_t_policy_viability . "),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('" . $var_id . "')
							FROM " . t_azp_ibn_mass_load . "
							WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
							GROUP BY " . d_azp_ibn_mass_load_t_identification . " ASC
						");
						#-------------------------------------------------------------------------#
						$var_sql_ = $this->db->query("
							INSERT INTO " . t_azp_ibn_data_main . " (
								" . d_azp_ibn_data_main_m_by_created . ",
								" . d_azp_ibn_data_main_m_by_modified . ",
								" . d_azp_ibn_data_main_m_date_created . ",
								" . d_azp_ibn_data_main_m_date_modified . ",
								" . d_azp_ibn_data_main_m_deleted . ",
								" . d_azp_ibn_data_main_m_description . ",
								" . d_azp_ibn_data_main_m_level . ",
								" . d_azp_ibn_data_main_m_status . ",
								" . d_azp_ibn_data_main_m_temp . ",
								" . d_azp_ibn_data_main_t_acount . ",
								" . d_azp_ibn_data_main_t_city . ",
								" . d_azp_ibn_data_main_t_code . ",
								" . d_azp_ibn_data_main_t_coincidence_base . ",
								" . d_azp_ibn_data_main_t_coincidence_date . ",
								" . d_azp_ibn_data_main_t_consecutive . ",
								" . d_azp_ibn_data_main_t_coverage . ",
								" . d_azp_ibn_data_main_t_data . ",
								" . d_azp_ibn_data_main_t_department . ",
								" . d_azp_ibn_data_main_t_full_name . ",
								" . d_azp_ibn_data_main_t_identification . ",
								" . d_azp_ibn_data_main_t_image_camera . ",
								" . d_azp_ibn_data_main_t_image_furniture . ",
								" . d_azp_ibn_data_main_t_image_property . ",
								" . d_azp_ibn_data_main_t_image_vehicle . ",
								" . d_azp_ibn_data_main_t_image_warranty . ",
								" . d_azp_ibn_data_main_t_nro_obligation . ",
								" . d_azp_ibn_data_main_t_policy_final . ",
								" . d_azp_ibn_data_main_t_policy_effective . ",
								" . d_azp_ibn_data_main_t_policy_e_camera . ",
								" . d_azp_ibn_data_main_t_policy_e_furniture . ",
								" . d_azp_ibn_data_main_t_policy_e_property . ",
								" . d_azp_ibn_data_main_t_policy_e_vehicle . ",
								" . d_azp_ibn_data_main_t_policy_e_warranty . ",
								" . d_azp_ibn_data_main_t_policy_e_con_cam . ",
								" . d_azp_ibn_data_main_t_policy_e_con_fur . ",
								" . d_azp_ibn_data_main_t_policy_e_con_pro . ",
								" . d_azp_ibn_data_main_t_policy_e_con_veh . ",
								" . d_azp_ibn_data_main_t_policy_e_con_war . ",
								" . d_azp_ibn_data_main_t_policy_viability . ",
								" . d_azp_ibn_data_main_t_policy_v_camera . ",
								" . d_azp_ibn_data_main_t_policy_v_furniture . ",
								" . d_azp_ibn_data_main_t_policy_v_property . ",
								" . d_azp_ibn_data_main_t_policy_v_vehicle . ",
								" . d_azp_ibn_data_main_t_policy_v_warranty . ",
								" . d_azp_ibn_data_main_t_policy_v_con_cam . ",
								" . d_azp_ibn_data_main_t_policy_v_con_fur . ",
								" . d_azp_ibn_data_main_t_policy_v_con_pro . ",
								" . d_azp_ibn_data_main_t_policy_v_con_veh . ",
								" . d_azp_ibn_data_main_t_policy_v_con_war . ",
								" . d_azp_ibn_data_main_w_document . ",
								" . d_azp_ibn_data_main_w_error . ",
								" . d_azp_ibn_data_main_w_folder . ",
								" . d_azp_ibn_data_main_w_name . ",
								" . d_azp_ibn_data_main_w_route . ",
								" . d_azp_ibn_data_main_w_size . ",
								" . d_azp_ibn_data_main_w_tmp_name . ",
								" . d_azp_ibn_data_main_w_type . ",
								" . d_azp_ibn_data_main_v_id_azp_ibn_client . ",
								" . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
							) SELECT
								UPPER(" . d_azp_ibn_mass_load_m_by_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_by_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_deleted . "),
								UPPER(" . d_azp_ibn_mass_load_m_description . "),
								UPPER(" . d_azp_ibn_mass_load_m_level . "),
								UPPER(" . d_azp_ibn_mass_load_m_status . "),
								UPPER(" . d_azp_ibn_mass_load_m_temp . "),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER(" . d_azp_ibn_mass_load_t_code . "),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_consecutive . "),
								UPPER(" . d_azp_ibn_mass_load_t_coverage . "),
								UPPER(" . d_azp_ibn_mass_load_t_data . "),
								UPPER(" . d_azp_ibn_mass_load_t_department . "),
								UPPER(" . d_azp_ibn_mass_load_t_full_name . "),
								UPPER(" . d_azp_ibn_mass_load_t_identification . "),
								UPPER('NO'),
								UPPER('NO'),
								UPPER('NO'),
								UPPER('NO'),
								UPPER('NO'),
								UPPER(" . d_azp_ibn_mass_load_t_nro_obligation . "),
								UPPER(" . d_azp_ibn_mass_load_t_policy_final . "),
								UPPER(" . d_azp_ibn_mass_load_t_policy_effective . "),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER(" . d_azp_ibn_mass_load_t_policy_viability . "),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_v_id_azp_ibn_client . "),
								UPPER('" . $var_id . "')
							FROM " . t_azp_ibn_mass_load . "
							WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
							GROUP BY " . d_azp_ibn_mass_load_t_identification . " ASC
							ORDER BY " . d_azp_ibn_mass_load_t_consecutive . " ASC
						");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						/*$var_sql = $this->db->select("*", t_azp_ibn_mass_load,
							d_azp_ibn_mass_load_m_deleted . " = '1'" . " " .
							"GROUP BY" . " " . d_azp_ibn_mass_load_t_identification . " " . "ASC" . " " .
							"ORDER BY" . " " . d_azp_ibn_mass_load_t_consecutive . " " . "ASC"
						);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_ibn_data_main_m_by_created => $key_sql[d_azp_ibn_mass_load_m_by_created],
									d_azp_ibn_data_main_m_by_modified => $key_sql[d_azp_ibn_mass_load_m_by_modified],
									d_azp_ibn_data_main_m_date_created => $key_sql[d_azp_ibn_mass_load_m_date_created],
									d_azp_ibn_data_main_m_date_modified => $key_sql[d_azp_ibn_mass_load_m_date_modified],
									d_azp_ibn_data_main_m_deleted => $key_sql[d_azp_ibn_mass_load_m_deleted],
									d_azp_ibn_data_main_m_description => $key_sql[d_azp_ibn_mass_load_m_description],
									d_azp_ibn_data_main_m_level => $key_sql[d_azp_ibn_mass_load_m_level],
									d_azp_ibn_data_main_m_status => $key_sql[d_azp_ibn_mass_load_m_status],
									d_azp_ibn_data_main_m_temp => $key_sql[d_azp_ibn_mass_load_m_temp],
									d_azp_ibn_data_main_t_city => strtoupper($key_sql[d_azp_ibn_mass_load_t_city]),
									d_azp_ibn_data_main_t_code => strtoupper($key_sql[d_azp_ibn_mass_load_t_code]),
									d_azp_ibn_data_main_t_consecutive => strtoupper($key_sql[d_azp_ibn_mass_load_t_consecutive]),
									d_azp_ibn_data_main_t_data => strtoupper($key_sql[d_azp_ibn_mass_load_t_data]),
									d_azp_ibn_data_main_t_department => strtoupper($key_sql[d_azp_ibn_mass_load_t_department]),
									d_azp_ibn_data_main_t_full_name => strtoupper($key_sql[d_azp_ibn_mass_load_t_full_name]),
									d_azp_ibn_data_main_t_identification => strtoupper($key_sql[d_azp_ibn_mass_load_t_identification]),
									d_azp_ibn_data_main_t_image_camera => strtoupper('No'),
									d_azp_ibn_data_main_t_image_furniture => strtoupper('No'),
									d_azp_ibn_data_main_t_image_property => strtoupper('No'),
									d_azp_ibn_data_main_t_image_vehicle => strtoupper('No'),
									d_azp_ibn_data_main_t_image_warranty => strtoupper('No'),
									d_azp_ibn_data_main_t_nro_obligation => strtoupper($key_sql[d_azp_ibn_mass_load_t_nro_obligation]),
									d_azp_ibn_data_main_t_policy_final => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_final]),
									d_azp_ibn_data_main_t_policy_effective => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_viability => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_t_policy_e_camera => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_e_furniture => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_e_property => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_e_vehicle => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_e_warranty => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_effective]),
									d_azp_ibn_data_main_t_policy_v_camera => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_t_policy_v_furniture => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_t_policy_v_property => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_t_policy_v_vehicle => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_t_policy_v_warranty => strtoupper($key_sql[d_azp_ibn_mass_load_t_policy_viability]),
									d_azp_ibn_data_main_w_document => '',
									d_azp_ibn_data_main_w_error => '',
									d_azp_ibn_data_main_w_folder => '',
									d_azp_ibn_data_main_w_name => '',
									d_azp_ibn_data_main_w_route => '',
									d_azp_ibn_data_main_w_size => '',
									d_azp_ibn_data_main_w_tmp_name => '',
									d_azp_ibn_data_main_w_type => '',
									d_azp_ibn_data_main_v_id_azp_ibn_client => $key_sql[d_azp_ibn_mass_load_v_id_azp_ibn_client],
									d_azp_ibn_data_main_v_id_azp_ibn_control_panel => $var_id,
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->insert(t_azp_ibn_data_main, $var_array);
								#-------------------------------------------------------------------------#
								$var_sql = $this->db->select("*", t_azp_ibn_data_main,
									d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
									d_azp_ibn_data_main_m_deleted . " = '1' GROUP BY " . d_azp_ibn_data_main_t_identification
								);
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_sql) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_sql as $key => $value):
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_cedula = $value[d_azp_ibn_data_main_t_identification]; $var_suma = 1; $var_buma = 1;
										$var_number = $this->db->select("*", t_azp_ibn_data_main,
											d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
											d_azp_ibn_data_main_t_identification . " = '" . $var_cedula . "'"
										);
										# Validar si la sentencia query ejecutada es correcta y no falsa
										if (true == $var_number) {
											# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
											foreach ($var_number as $key2 => $value2):
												# Organizacion de los valores capturados y asignados a los campos a insertar
												$var_id2 = $value2[d_azp_ibn_data_main_id_azp_ibn_data_main];
												$var_cedula2 = $value2[d_azp_ibn_data_main_t_identification];
												$var_union = $var_cedula2 . '_' . $var_suma++;
												$var_bcount = $var_buma++;
												# Array para asignar argumentos o valores a los elementos
												$var_array = array(d_azp_ibn_data_main_t_acount => $var_union, d_azp_ibn_data_main_t_bcount => $var_bcount);
												# Query Sql Update: Actualizar valores de la tabla segun sus campos
												$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $var_id2 . "'");
											endforeach;
										}

									endforeach;
								}
								#-------------------------------------------------------------------------#
								# Ruta de la carpeta con cedulas
								$var_route = '../systemfiles/filesproject/azp_ibn_control_panel/' . $var_id . '/' . $key_sql[d_azp_ibn_mass_load_t_identification] . '/';
								# Consultar helper y sus opciones
								Helper::load('files');
								# Creacion de carpetas en el desarrollo
								Files::create_dir($var_route, 0777);
								# Dar permisos a la carpeta y archivo
								chmod($var_route, 0777);
							endforeach;
						}*/
						#-------------------------------------------------------------------------#
						$var_sql = $this->db->select("*", t_azp_ibn_data_main,
							d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
							d_azp_ibn_data_main_m_deleted . " = '1' GROUP BY " . d_azp_ibn_data_main_t_identification
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sql as $key => $value):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_cedula = $value[d_azp_ibn_data_main_t_identification]; $var_suma = 1; $var_buma = 1;
								$var_number = $this->db->select("*", t_azp_ibn_data_main,
									d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
									d_azp_ibn_data_main_t_identification . " = '" . $var_cedula . "'"
								);
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_number) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_number as $key2 => $value2):
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_id2 = $value2[d_azp_ibn_data_main_id_azp_ibn_data_main];
										$var_cedula2 = $value2[d_azp_ibn_data_main_t_identification];
										$var_union = $var_cedula2 . '_' . $var_suma++;
										$var_bcount = $var_buma++;
										# Array para asignar argumentos o valores a los elementos
										$var_array = array(d_azp_ibn_data_main_t_acount => $var_union, d_azp_ibn_data_main_t_bcount => $var_bcount);
										# Query Sql Update: Actualizar valores de la tabla segun sus campos
										$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $var_id2 . "'");
									endforeach;
								}

							endforeach;
						}
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("*", t_azp_ibn_mass_load,
							d_azp_ibn_mass_load_m_deleted . " = '1'" . " " .
							"GROUP BY" . " " . d_azp_ibn_mass_load_t_identification . " " . "ASC" . " " .
							"ORDER BY" . " " . d_azp_ibn_mass_load_t_consecutive . " " . "ASC"
						);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Ruta de la carpeta con cedulas
								$var_route = '../systemfiles/filesproject/azp_ibn_control_panel/' . $var_id . '/' . $key_sql[d_azp_ibn_mass_load_t_identification] . '/';
								# Consultar helper y sus opciones
								Helper::load('files');
								# Creacion de carpetas en el desarrollo
								Files::create_dir($var_route, 0777);
								# Dar permisos a la carpeta y archivo
								chmod($var_route, 0777);
							endforeach;
						}
						#-------------------------------------------------------------------------#
						$var_sql_ = $this->db->query("
							INSERT INTO " . t_azp_ibn_camera . " (
								" . d_azp_ibn_camera_m_by_created . ",
								" . d_azp_ibn_camera_m_by_modified . ",
								" . d_azp_ibn_camera_m_date_created . ",
								" . d_azp_ibn_camera_m_date_modified . ",
								" . d_azp_ibn_camera_m_deleted . ",
								" . d_azp_ibn_camera_m_description . ",
								" . d_azp_ibn_camera_m_level . ",
								" . d_azp_ibn_camera_m_status . ",
								" . d_azp_ibn_camera_m_temp . ",
								" . d_azp_ibn_camera_t_validate . ",
								" . d_azp_ibn_camera_t_acount . ",
								" . d_azp_ibn_camera_t_act_economic . ",
								" . d_azp_ibn_camera_t_address . ",
								" . d_azp_ibn_camera_t_assessment . ",
								" . d_azp_ibn_camera_t_business_name . ",
								" . d_azp_ibn_camera_t_causal_feasibility . ",
								" . d_azp_ibn_camera_t_city . ",
								" . d_azp_ibn_camera_t_comment_legal . ",
								" . d_azp_ibn_camera_t_concept . ",
								" . d_azp_ibn_camera_t_consecutive . ",
								" . d_azp_ibn_camera_t_department . ",
								" . d_azp_ibn_camera_t_establishment . ",
								" . d_azp_ibn_camera_t_full_name . ",
								" . d_azp_ibn_camera_t_identification . ",
								" . d_azp_ibn_camera_t_legal_representative . ",
								" . d_azp_ibn_camera_t_legal_rp_certificate . ",
								" . d_azp_ibn_camera_t_limitation . ",
								" . d_azp_ibn_camera_t_municipality . ",
								" . d_azp_ibn_camera_t_nit . ",
								" . d_azp_ibn_camera_t_nro_registration . ",
								" . d_azp_ibn_camera_t_observation . ",
								" . d_azp_ibn_camera_t_phone . ",
								" . d_azp_ibn_camera_t_policy_effective . ",
								" . d_azp_ibn_camera_t_policy_final . ",
								" . d_azp_ibn_camera_t_policy_viability . ",
								" . d_azp_ibn_camera_t_renewal_date . ",
								" . d_azp_ibn_camera_t_rup . ",
								" . d_azp_ibn_camera_t_total_active . ",
								" . d_azp_ibn_camera_t_type_company . ",
								" . d_azp_ibn_camera_t_type_organization . ",
								" . d_azp_ibn_camera_t_viable . ",
								" . d_azp_ibn_camera_t_well_viable . ",
								" . d_azp_ibn_camera_t_year . ",
								" . d_azp_ibn_camera_t_st_located . ",
								" . d_azp_ibn_camera_t_st_returnable . ",
								" . d_azp_ibn_camera_t_st_receipt . ",
								" . d_azp_ibn_camera_t_st_date . ",
								" . d_azp_ibn_camera_t_st_value . ",
								" . d_azp_ibn_camera_t_zmunicipality . ",
								" . d_azp_ibn_camera_v_id_azp_ibn_control_panel . ",
								" . d_azp_ibn_camera_v_id_azp_ibn_observation . ",
								" . d_azp_ibn_camera_v_id_azp_ibn_state . ",
								" . d_azp_ibn_camera_v_id_azp_ibn_type_certified . ",
								" . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
							) SELECT
								UPPER(" . d_azp_ibn_mass_load_m_by_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_by_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_deleted . "),
								UPPER(" . d_azp_ibn_mass_load_m_description . "),
								UPPER(" . d_azp_ibn_mass_load_m_level . "),
								UPPER(" . d_azp_ibn_mass_load_m_status . "),
								UPPER(" . d_azp_ibn_mass_load_m_temp . "),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_consecutive . "),
								UPPER(" . d_azp_ibn_mass_load_t_department . "),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_full_name . "),
								UPPER(" . d_azp_ibn_mass_load_t_identification . "),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER(''),
								UPPER('NO'),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER('NO'),
								UPPER(''),
								UPPER(''),
								UPPER('NO'),
								UPPER('NO'),
								UPPER(''),
								UPPER(''),
								UPPER('0'),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER('" . $var_id . "'),
								UPPER('1'),
								UPPER('1'),
								UPPER('1'),
								UPPER('1')
							FROM " . t_azp_ibn_mass_load . "
							WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
							GROUP BY " . d_azp_ibn_mass_load_t_identification . " ASC
							ORDER BY " . d_azp_ibn_mass_load_t_consecutive . " ASC
						");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						/*$var_sql = $this->db->select("*", t_azp_ibn_mass_load,
							d_azp_ibn_mass_load_m_deleted . " = '1'" . " " .
							"GROUP BY" . " " . d_azp_ibn_mass_load_t_identification . " " . "ASC" . " " .
							"ORDER BY" . " " . d_azp_ibn_mass_load_t_consecutive . " " . "ASC"
						);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_ibn_camera_m_by_created => $key_sql[d_azp_ibn_mass_load_m_by_created],
									d_azp_ibn_camera_m_by_modified => $key_sql[d_azp_ibn_mass_load_m_by_modified],
									d_azp_ibn_camera_m_date_created => $key_sql[d_azp_ibn_mass_load_m_date_created],
									d_azp_ibn_camera_m_date_modified => $key_sql[d_azp_ibn_mass_load_m_date_modified],
									d_azp_ibn_camera_m_deleted => $key_sql[d_azp_ibn_mass_load_m_deleted],
									d_azp_ibn_camera_m_description => $key_sql[d_azp_ibn_mass_load_m_description],
									d_azp_ibn_camera_m_level => $key_sql[d_azp_ibn_mass_load_m_level],
									d_azp_ibn_camera_m_status => $key_sql[d_azp_ibn_mass_load_m_status],
									d_azp_ibn_camera_m_temp => $key_sql[d_azp_ibn_mass_load_m_temp],
									d_azp_ibn_camera_t_validate => strtoupper(''),
									d_azp_ibn_camera_t_act_economic => strtoupper(''),
									d_azp_ibn_camera_t_address => strtoupper(''),
									d_azp_ibn_camera_t_assessment => strtoupper(''),
									d_azp_ibn_camera_t_business_name => strtoupper(''),
									d_azp_ibn_camera_t_causal_feasibility => strtoupper(''),
									d_azp_ibn_camera_t_city => strtoupper($key_sql[d_azp_ibn_mass_load_t_city]),
									d_azp_ibn_camera_t_consecutive => strtoupper($key_sql[d_azp_ibn_mass_load_t_consecutive]),
									d_azp_ibn_camera_t_department => strtoupper($key_sql[d_azp_ibn_mass_load_t_department]),
									d_azp_ibn_camera_t_establishment => strtoupper(''),
									d_azp_ibn_camera_t_full_name => strtoupper($key_sql[d_azp_ibn_mass_load_t_full_name]),
									d_azp_ibn_camera_t_identification => strtoupper($key_sql[d_azp_ibn_mass_load_t_identification]),
									d_azp_ibn_camera_t_legal_representative => strtoupper(''),
									d_azp_ibn_camera_t_legal_rp_certificate => strtoupper(''),
									d_azp_ibn_camera_t_municipality => strtoupper(''),
									d_azp_ibn_camera_t_nit => strtoupper(''),
									d_azp_ibn_camera_t_nro_registration => strtoupper(''),
									d_azp_ibn_camera_t_observation => strtoupper(''),
									d_azp_ibn_camera_t_phone => strtoupper(''),
									d_azp_ibn_camera_t_renewal_date => strtoupper(''),
									d_azp_ibn_camera_t_rup => strtoupper('No'),
									d_azp_ibn_camera_t_total_active => strtoupper(''),
									d_azp_ibn_camera_t_type_company => strtoupper(''),
									d_azp_ibn_camera_t_type_organization => strtoupper(''),
									d_azp_ibn_camera_t_viable => strtoupper('No'),
									d_azp_ibn_camera_t_well_viable => strtoupper(''),
									d_azp_ibn_camera_t_year => strtoupper(''),
									d_azp_ibn_camera_v_id_azp_ibn_control_panel => $var_id,
									d_azp_ibn_camera_v_id_azp_ibn_state => '1',
									d_azp_ibn_camera_v_id_azp_ibn_type_certified => '1',
									d_azp_ibn_camera_v_id_azp_ibn_type_concept => '1',
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->insert(t_azp_ibn_camera, $var_array);
							endforeach;
						}*/
						#-------------------------------------------------------------------------#
						$var_sql = $this->db->select("*", t_azp_ibn_camera,
							d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
							d_azp_ibn_camera_m_deleted . " = '1' GROUP BY " . d_azp_ibn_camera_t_identification
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sql as $key => $value):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_cedula = $value[d_azp_ibn_camera_t_identification]; $var_suma = 1; $var_buma = 1;
								$var_number = $this->db->select("*", t_azp_ibn_camera,
									d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
									d_azp_ibn_camera_t_identification . " = '" . $var_cedula . "'"
								);
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_number) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_number as $key2 => $value2):
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_id2 = $value2[d_azp_ibn_camera_id_azp_ibn_camera];
										$var_cedula2 = $value2[d_azp_ibn_camera_t_identification];
										$var_union = $var_cedula2 . '_' . $var_suma++;
										$var_bcount = $var_buma++;
										# Array para asignar argumentos o valores a los elementos
										$var_array = array(d_azp_ibn_camera_t_acount => $var_union, d_azp_ibn_camera_t_bcount => $var_bcount);
										# Query Sql Update: Actualizar valores de la tabla segun sus campos
										$this->db->update(t_azp_ibn_camera, $var_array, d_azp_ibn_camera_id_azp_ibn_camera . " = '" . $var_id2 . "'");
									endforeach;
								}

							endforeach;
						}
						#-------------------------------------------------------------------------#
						$var_sql_ = $this->db->query("
							INSERT INTO " . t_azp_ibn_warranty . " (
								" . d_azp_ibn_warranty_m_by_created . ",
								" . d_azp_ibn_warranty_m_by_modified . ",
								" . d_azp_ibn_warranty_m_date_created . ",
								" . d_azp_ibn_warranty_m_date_modified . ",
								" . d_azp_ibn_warranty_m_deleted . ",
								" . d_azp_ibn_warranty_m_description . ",
								" . d_azp_ibn_warranty_m_level . ",
								" . d_azp_ibn_warranty_m_status . ",
								" . d_azp_ibn_warranty_m_temp . ",
								" . d_azp_ibn_warranty_t_validate . ",
								" . d_azp_ibn_warranty_t_acount . ",
								" . d_azp_ibn_warranty_t_comment_legal . ",
								" . d_azp_ibn_warranty_t_concept . ",
								" . d_azp_ibn_warranty_t_consecutive . ",
								" . d_azp_ibn_warranty_t_creditor . ",
								" . d_azp_ibn_warranty_t_date . ",
								" . d_azp_ibn_warranty_t_full_name . ",
								" . d_azp_ibn_warranty_t_identification . ",
								" . d_azp_ibn_warranty_t_limitation . ",
								" . d_azp_ibn_warranty_t_observation . ",
								" . d_azp_ibn_warranty_t_policy_effective . ",
								" . d_azp_ibn_warranty_t_policy_final . ",
								" . d_azp_ibn_warranty_t_policy_viability . ",
								" . d_azp_ibn_warranty_t_well_detail . ",
								" . d_azp_ibn_warranty_t_well_name . ",
								" . d_azp_ibn_warranty_t_value . ",
								" . d_azp_ibn_warranty_t_zmunicipality . ",
								" . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . ",
								" . d_azp_ibn_warranty_v_id_azp_ibn_state . "
							) SELECT
								UPPER(" . d_azp_ibn_mass_load_m_by_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_by_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_deleted . "),
								UPPER(" . d_azp_ibn_mass_load_m_description . "),
								UPPER(" . d_azp_ibn_mass_load_m_level . "),
								UPPER(" . d_azp_ibn_mass_load_m_status . "),
								UPPER(" . d_azp_ibn_mass_load_m_temp . "),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_consecutive . "),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_full_name . "),
								UPPER(" . d_azp_ibn_mass_load_t_identification . "),
								UPPER(''),
								UPPER(''),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER(''),
								UPPER(''),
								UPPER('0'),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER('" . $var_id . "'),
								UPPER('4')
							FROM " . t_azp_ibn_mass_load . "
							WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
							GROUP BY " . d_azp_ibn_mass_load_t_identification . " ASC
							ORDER BY " . d_azp_ibn_mass_load_t_consecutive . " ASC
						");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						/*$var_sql = $this->db->select("*", t_azp_ibn_mass_load,
							d_azp_ibn_mass_load_m_deleted . " = '1'" . " " .
							"GROUP BY" . " " . d_azp_ibn_mass_load_t_identification . " " . "ASC" . " " .
							"ORDER BY" . " " . d_azp_ibn_mass_load_t_consecutive . " " . "ASC"
						);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_ibn_warranty_m_by_created => $key_sql[d_azp_ibn_mass_load_m_by_created],
									d_azp_ibn_warranty_m_by_modified => $key_sql[d_azp_ibn_mass_load_m_by_modified],
									d_azp_ibn_warranty_m_date_created => $key_sql[d_azp_ibn_mass_load_m_date_created],
									d_azp_ibn_warranty_m_date_modified => $key_sql[d_azp_ibn_mass_load_m_date_modified],
									d_azp_ibn_warranty_m_deleted => $key_sql[d_azp_ibn_mass_load_m_deleted],
									d_azp_ibn_warranty_m_description => $key_sql[d_azp_ibn_mass_load_m_description],
									d_azp_ibn_warranty_m_level => $key_sql[d_azp_ibn_mass_load_m_level],
									d_azp_ibn_warranty_m_status => $key_sql[d_azp_ibn_mass_load_m_status],
									d_azp_ibn_warranty_m_temp => $key_sql[d_azp_ibn_mass_load_m_temp],
									d_azp_ibn_warranty_t_value => strtoupper(''),
									d_azp_ibn_warranty_t_consecutive => strtoupper($key_sql[d_azp_ibn_mass_load_t_consecutive]),
									d_azp_ibn_warranty_t_creditor => strtoupper(''),
									d_azp_ibn_warranty_t_date => strtoupper(''),
									d_azp_ibn_warranty_t_full_name => strtoupper($key_sql[d_azp_ibn_mass_load_t_full_name]),
									d_azp_ibn_warranty_t_identification => strtoupper($key_sql[d_azp_ibn_mass_load_t_identification]),
									d_azp_ibn_warranty_t_observation => strtoupper(''),
									d_azp_ibn_warranty_t_well_detail => strtoupper(''),
									d_azp_ibn_warranty_t_well_name => strtoupper(''),
									d_azp_ibn_warranty_t_value => strtoupper('0'),
									d_azp_ibn_warranty_v_id_azp_ibn_control_panel => $var_id,
									d_azp_ibn_warranty_v_id_azp_ibn_state => '4',
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->insert(t_azp_ibn_warranty, $var_array);
							endforeach;
						}*/
						#-------------------------------------------------------------------------#
						$var_sql = $this->db->select("*", t_azp_ibn_warranty,
							d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
							d_azp_ibn_warranty_m_deleted . " = '1' GROUP BY " . d_azp_ibn_warranty_t_identification
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sql as $key => $value):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_cedula = $value[d_azp_ibn_warranty_t_identification]; $var_suma = 1; $var_buma = 1;
								$var_number = $this->db->select("*", t_azp_ibn_warranty,
									d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
									d_azp_ibn_warranty_t_identification . " = '" . $var_cedula . "'"
								);
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_number) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_number as $key2 => $value2):
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_id2 = $value2[d_azp_ibn_warranty_id_azp_ibn_warranty];
										$var_cedula2 = $value2[d_azp_ibn_warranty_t_identification];
										$var_union = $var_cedula2 . '_' . $var_suma++;
										$var_bcount = $var_buma++;
										# Array para asignar argumentos o valores a los elementos
										$var_array = array(d_azp_ibn_warranty_t_acount => $var_union, d_azp_ibn_warranty_t_bcount => $var_bcount);
										# Query Sql Update: Actualizar valores de la tabla segun sus campos
										$this->db->update(t_azp_ibn_warranty, $var_array, d_azp_ibn_warranty_id_azp_ibn_warranty . " = '" . $var_id2 . "'");
									endforeach;
								}

							endforeach;
						}
						#-------------------------------------------------------------------------#
						$var_sql_ = $this->db->query("
							INSERT INTO " . t_azp_ibn_furniture . " (
								" . d_azp_ibn_furniture_m_by_created . ",
								" . d_azp_ibn_furniture_m_by_modified . ",
								" . d_azp_ibn_furniture_m_date_created . ",
								" . d_azp_ibn_furniture_m_date_modified . ",
								" . d_azp_ibn_furniture_m_deleted . ",
								" . d_azp_ibn_furniture_m_description . ",
								" . d_azp_ibn_furniture_m_level . ",
								" . d_azp_ibn_furniture_m_status . ",
								" . d_azp_ibn_furniture_m_temp . ",
								" . d_azp_ibn_furniture_t_validate . ",
								" . d_azp_ibn_furniture_t_acount . ",
								" . d_azp_ibn_furniture_t_address . ",
								" . d_azp_ibn_furniture_t_business_name . ",
								" . d_azp_ibn_furniture_t_city . ",
								" . d_azp_ibn_furniture_t_comment_legal . ",
								" . d_azp_ibn_furniture_t_concept . ",
								" . d_azp_ibn_furniture_t_consecutive . ",
								" . d_azp_ibn_furniture_t_department . ",
								" . d_azp_ibn_furniture_t_entity . ",
								" . d_azp_ibn_furniture_t_full_name . ",
								" . d_azp_ibn_furniture_t_identification . ",
								" . d_azp_ibn_furniture_t_limitation . ",
								" . d_azp_ibn_furniture_t_municipality . ",
								" . d_azp_ibn_furniture_t_nit . ",
								" . d_azp_ibn_furniture_t_observation . ",
								" . d_azp_ibn_furniture_t_phone . ",
								" . d_azp_ibn_furniture_t_policy_effective . ",
								" . d_azp_ibn_furniture_t_policy_final . ",
								" . d_azp_ibn_furniture_t_policy_viability . ",
								" . d_azp_ibn_furniture_t_salary . ",
								" . d_azp_ibn_furniture_t_viable_causal . ",
								" . d_azp_ibn_furniture_t_well_option . ",
								" . d_azp_ibn_furniture_t_well_viable . ",
								" . d_azp_ibn_furniture_t_zmunicipality . ",
								" . d_azp_ibn_furniture_t_text_one . ",
								" . d_azp_ibn_furniture_t_text_two . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_outcome . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_rank . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_regime . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_state . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . ",
								" . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . "
							) SELECT
								UPPER(" . d_azp_ibn_mass_load_m_by_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_by_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_created . "),
								UPPER(" . d_azp_ibn_mass_load_m_date_modified . "),
								UPPER(" . d_azp_ibn_mass_load_m_deleted . "),
								UPPER(" . d_azp_ibn_mass_load_m_description . "),
								UPPER(" . d_azp_ibn_mass_load_m_level . "),
								UPPER(" . d_azp_ibn_mass_load_m_status . "),
								UPPER(" . d_azp_ibn_mass_load_m_temp . "),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_consecutive . "),
								UPPER(''),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_full_name . "),
								UPPER(" . d_azp_ibn_mass_load_t_identification . "),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER(''),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('NEGATIVO'),
								UPPER('0'),
								UPPER(''),
								UPPER('NO'),
								UPPER(''),
								UPPER(" . d_azp_ibn_mass_load_t_city . "),
								UPPER(''),
								UPPER(''),
								UPPER('" . $var_id . "'),
								UPPER('1'),
								UPPER('1'),
								UPPER('1'),
								UPPER('5'),
								UPPER('1'),
								UPPER('5'),
								UPPER('1')
							FROM " . t_azp_ibn_mass_load . "
							WHERE " . d_azp_ibn_mass_load_m_deleted . " = '1'
							GROUP BY " . d_azp_ibn_mass_load_t_identification . " ASC
							ORDER BY " . d_azp_ibn_mass_load_t_consecutive . " ASC
						");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						/*$var_sql = $this->db->select("*", t_azp_ibn_mass_load,
							d_azp_ibn_mass_load_m_deleted . " = '1'" . " " .
							"GROUP BY" . " " . d_azp_ibn_mass_load_t_identification . " " . "ASC" . " " .
							"ORDER BY" . " " . d_azp_ibn_mass_load_t_consecutive . " " . "ASC"
						);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									d_azp_ibn_furniture_m_by_created => $key_sql[d_azp_ibn_mass_load_m_by_created],
									d_azp_ibn_furniture_m_by_modified => $key_sql[d_azp_ibn_mass_load_m_by_modified],
									d_azp_ibn_furniture_m_date_created => $key_sql[d_azp_ibn_mass_load_m_date_created],
									d_azp_ibn_furniture_m_date_modified => $key_sql[d_azp_ibn_mass_load_m_date_modified],
									d_azp_ibn_furniture_m_deleted => $key_sql[d_azp_ibn_mass_load_m_deleted],
									d_azp_ibn_furniture_m_description => $key_sql[d_azp_ibn_mass_load_m_description],
									d_azp_ibn_furniture_m_level => $key_sql[d_azp_ibn_mass_load_m_level],
									d_azp_ibn_furniture_m_status => $key_sql[d_azp_ibn_mass_load_m_status],
									d_azp_ibn_furniture_m_temp => $key_sql[d_azp_ibn_mass_load_m_temp],
									d_azp_ibn_furniture_t_validate => strtoupper(''),
									d_azp_ibn_furniture_t_address => strtoupper(''),
									d_azp_ibn_furniture_t_business_name => strtoupper(''),
									d_azp_ibn_furniture_t_city => strtoupper($key_sql[d_azp_ibn_mass_load_t_city]),
									d_azp_ibn_furniture_t_consecutive => strtoupper($key_sql[d_azp_ibn_mass_load_t_consecutive]),
									d_azp_ibn_furniture_t_department => strtoupper(''),
									d_azp_ibn_furniture_t_entity => strtoupper(''),
									d_azp_ibn_furniture_t_full_name => strtoupper($key_sql[d_azp_ibn_mass_load_t_full_name]),
									d_azp_ibn_furniture_t_identification => strtoupper($key_sql[d_azp_ibn_mass_load_t_identification]),
									d_azp_ibn_furniture_t_municipality => strtoupper(''),
									d_azp_ibn_furniture_t_nit => strtoupper(''),
									d_azp_ibn_furniture_t_observation => strtoupper(''),
									d_azp_ibn_furniture_t_phone => strtoupper(''),
									d_azp_ibn_furniture_t_salary => strtoupper('0'),
									d_azp_ibn_furniture_t_viable_causal => strtoupper(''),
									d_azp_ibn_furniture_t_well_option => strtoupper('No'),
									d_azp_ibn_furniture_t_well_viable => strtoupper(''),
									d_azp_ibn_furniture_v_id_azp_ibn_control_panel => $var_id,
									d_azp_ibn_furniture_v_id_azp_ibn_outcome => '1',
									d_azp_ibn_furniture_v_id_azp_ibn_rank => '1',
									d_azp_ibn_furniture_v_id_azp_ibn_regime => '1',
									d_azp_ibn_furniture_v_id_azp_ibn_state => '5',
									d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate => '1',
									d_azp_ibn_furniture_v_id_azp_ibn_type_concept => '5',
									d_azp_ibn_furniture_v_id_azp_ibn_type_contributor => '1',
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->insert(t_azp_ibn_furniture, $var_array);
							endforeach;
						}*/
						#-------------------------------------------------------------------------#
						$var_sql = $this->db->select("*", t_azp_ibn_furniture,
							d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
							d_azp_ibn_furniture_m_deleted . " = '1' GROUP BY " . d_azp_ibn_furniture_t_identification
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sql as $key => $value):
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_cedula = $value[d_azp_ibn_furniture_t_identification]; $var_suma = 1; $var_buma = 1;
								$var_number = $this->db->select("*", t_azp_ibn_furniture,
									d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $var_id . "' AND " .
									d_azp_ibn_furniture_t_identification . " = '" . $var_cedula . "'"
								);
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_number) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_number as $key2 => $value2):
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_id2 = $value2[d_azp_ibn_furniture_id_azp_ibn_furniture];
										$var_cedula2 = $value2[d_azp_ibn_furniture_t_identification];
										$var_union = $var_cedula2 . '_' . $var_suma++;
										$var_bcount = $var_buma++;
										# Array para asignar argumentos o valores a los elementos
										$var_array = array(d_azp_ibn_furniture_t_acount => $var_union, d_azp_ibn_furniture_t_bcount => $var_bcount);
										# Query Sql Update: Actualizar valores de la tabla segun sus campos
										$this->db->update(t_azp_ibn_furniture, $var_array, d_azp_ibn_furniture_id_azp_ibn_furniture . " = '" . $var_id2 . "'");
									endforeach;
								}

							endforeach;
						}
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("*", t_azp_ibn_data_main, d_azp_ibn_data_main_m_temp . " = '2' GROUP BY " . d_azp_ibn_mass_load_v_id_azp_ibn_client);
						# Validar si la consulta es verdadera
						if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_cl_dp = $value[d_azp_ibn_mass_load_v_id_azp_ibn_client]; endforeach; } else { $var_cl_dp = 0; }
						#-------------------------------------------------------------------------#
						# Actualizar el campo existente si encuentra valores en otras tabla
						$this->db->query("
							UPDATE " . t_azp_ibn_data_main . " SET " . d_azp_ibn_data_main_t_data . " = 'SI'
							WHERE " . d_azp_ibn_data_main_t_identification . " IN (
								SELECT " . d_azp_ibn_data_main_t_identification . "
								FROM " . t_azp_ibn_data_main . "
								WHERE " . d_azp_ibn_data_main_m_deleted . " = '1'
									AND " . d_azp_ibn_data_main_m_temp . " = '1'
									AND " . d_azp_ibn_data_main_v_id_azp_ibn_client . " = '" . $var_cl_dp . "'
							) AND " . d_azp_ibn_data_main_m_temp . " = '2'
						");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("*", t_azp_ibn_data_main, d_azp_ibn_data_main_t_data . " = 'SI'");
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql):
								# Consulta para identificar los nuevos registros en la tabla
								$var_sql2 = $this->db->query("
									SELECT
										tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
										tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
										tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
										tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . " AS 'lbl_azp_ibn_data_main_v_id_azp_ibn_client'
									FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main

									INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
										ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
											= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "

									WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '1'
										AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " = '" . $key_sql[d_azp_ibn_data_main_t_identification] . "'
										AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . " = '" . $var_cl_dp . "'
									ORDER BY " . d_azp_ibn_data_main_id_azp_ibn_data_main . " DESC LIMIT 1
								");
								# Validar si la consulta es verdadera
								if (false != $var_sql2) {
									# Recorrer las filas de la consulta generada
									foreach ($var_sql2 as $key_sql2):
										# Cadena de texto de ciertos caracteres
										$var_code = $key_sql2['lbl_azp_ibn_control_panel_t_code_research'];
										$var_date = $key_sql2['lbl_azp_ibn_control_panel_t_date_arrival'];
										$var_iden = $key_sql2['lbl_azp_ibn_data_main_t_identification'];
										$var_clin = $key_sql2['lbl_azp_ibn_data_main_v_id_azp_ibn_client'];
										# Organizacion de los valores capturados y asignados a los campos a insertar
										$var_array = array(
											d_azp_ibn_data_main_t_coincidence_base => $var_code,
											d_azp_ibn_data_main_t_coincidence_date => $var_date,
										);
										# Insertar valores en la nueva tabla que no existen
										/*$this->db->update(t_azp_ibn_data_main, $var_array,
											d_azp_ibn_data_main_m_temp . " = '2' AND " . d_azp_ibn_data_main_t_data . " = 'SI' AND " .
											d_azp_ibn_data_main_t_identification . " = '" . $var_iden . "' AND " .
											d_azp_ibn_data_main_v_id_azp_ibn_client . " = '" . $var_clin . "'"
										);*/

										# Insertar valores en la nueva tabla que no existen
										$this->db->update(t_azp_ibn_data_main, $var_array,
											d_azp_ibn_data_main_m_temp . " = '2' AND " . d_azp_ibn_data_main_t_data . " = 'SI' AND " .
											d_azp_ibn_data_main_t_identification . " = '" . $var_iden . "'"
										);
									endforeach;
								}
							endforeach;
						}
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_data_main_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_camera_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_camera, $var_array, d_azp_ibn_camera_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_vehicle_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_vehicle, $var_array, d_azp_ibn_vehicle_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_warranty_m_temp => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_warranty, $var_array, d_azp_ibn_warranty_m_temp . " = '2'");
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("COUNT(*) AS 'lbl_count_total'", t_azp_ibn_data_main, d_azp_ibn_data_main_t_data . " = 'SI' AND " . d_azp_ibn_data_main_m_temp . " = '2'");
						# Validar si la consulta es verdadera
						if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_duplicate = $key_sql['lbl_count_total']; endforeach; } else { $var_duplicate = 0; }
						#-------------------------------------------------------------------------#
						# Consulta para identificar los nuevos registros en la tabla
						$var_sql = $this->db->select("COUNT(*) AS 'lbl_count_total'", t_azp_ibn_mass_load);
						# Validar si la consulta es verdadera
						if (false != $var_sql) {
							# Recorrer las filas de la consulta generada
							foreach ($var_sql as $key_sql): $var_total_id = $key_sql['lbl_count_total']; endforeach;
							# Retornar el mensaje una vez ejecutada la rutina del proceso
							return array('success' => 1,
								'message' => '<b>Exito:</b>' .' ' . 'Archivo almacenado correctamente.' . '<br><br>' .
									'<b>Procesado:</b>' .' ' . 'Registros importados en total' . ' '. $var_total_id . '.' . '<br>' .
									'<b>Duplicados:</b>' .' ' . $var_duplicate . ' ' . 'registros de' . ' '. $var_total_id . '.',
							);
						}
					}
				} else {
					return array('error' => 0, 'message' =>
						'<b>Error:</b> Fechas incorrectas en el archivo de carga.' . '</br>' .
						'<b>Error:</b> El formato correcto es: Año-Mes-Dia (yyyy-mm-dd).' . '</br>'
					);
				}
			}
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_dit_data_main_dit_img_pdf(array $data, string $var_control) {
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(
				d_azp_ibn_data_main_w_document => $data['lbl_document'],
				d_azp_ibn_data_main_w_error => $data['lbl_error'],
				d_azp_ibn_data_main_w_folder => $data['lbl_folder'],
				d_azp_ibn_data_main_w_name => $data['lbl_name'],
				d_azp_ibn_data_main_w_route => $data['lbl_route'],
				d_azp_ibn_data_main_w_size => $data['lbl_size'],
				d_azp_ibn_data_main_w_tmp_name => $data['lbl_tmp_name'],
				d_azp_ibn_data_main_w_type => $data['lbl_type'],
			);
			# Insertar valores en la tabla segun estructura de la tabla
			$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $data['lbl_id'] . "'");
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Archivo comprimido correctamente.');
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_dit_data_main_dit_img_zip(string $var_control) {
			# Seleccionar los registros de la tabla
			$var_sql =  $this->db->query("
				SELECT MIN(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . ") AS 'lbl_min'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_min_rn = $value['lbl_min']; endforeach; }
			# Valores del array vacios
			$var_file = array();
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main,
				d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "' AND " .
				d_azp_ibn_data_main_w_document . " != '' AND " .
				d_azp_ibn_data_main_m_temp . " = '3' AND " .
				d_azp_ibn_data_main_t_row_num . " = '" . $var_min_rn . "'"
			);
			# Validar si la consulta es verdadera
			if (false != $var_sql) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql as $key_sql => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_id = $value[d_azp_ibn_data_main_id_azp_ibn_data_main];
					$var_identification = $value[d_azp_ibn_data_main_t_identification];
					$var_document = $value[d_azp_ibn_data_main_w_document];
					$var_folder = $value[d_azp_ibn_data_main_w_folder];
					$var_route = $value[d_azp_ibn_data_main_w_route];
					$var_file[$var_id] = $var_route . $var_folder . $var_document;

					# Consulta para identificar los nuevos registros en la tabla
					$var_sql_capture = $this->db->select('*', t_azp_ibn_capture, d_azp_ibn_capture_m_deleted . " = '1' AND " .
						d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $var_control . "' AND " .
						d_azp_ibn_capture_t_identification . " = '" . $var_identification . "'"
					);
					# Validar si la consulta es verdadera
					if (false != $var_sql_capture) {
						# Recorrer las filas de la consulta generada
						foreach ($var_sql_capture as $key_sql_capture => $value_capture):
							# Asignacion de valores a nuevas variables
							$var_cid = $value_capture[d_azp_ibn_capture_id_azp_ibn_capture];
							$var_cidentification = $value_capture[d_azp_ibn_capture_t_identification];
							$var_cdocument = $value_capture[d_azp_ibn_capture_w_document];
							$var_cfolder = $value_capture[d_azp_ibn_capture_w_folder];
							$var_croute = $value_capture[d_azp_ibn_capture_w_route];
							$var_file[$var_cid] = $var_croute . $var_cfolder . $var_cdocument;
						endforeach;
					}
				endforeach;
			} else { $var_file[] = ''; }
			#-------------------------------------------------------------------------#
			# Ruta principal de la carpeta
			$var_ec_route = 'systemfiles/filesproject/';
			# Ruta de la carpeta principal
			$var_ec_folder = 'azp_ibn_control_panel/';
			# Ruta de la carpeta principal
			$var_ec_subfol = 'compressed/';
			# Carpeta del año
			$var_ec_year = YEAR . '/';
			# Carpeta del año y mes
			$var_ec_month = YEAR_MONTH . '/';
			# Carpeta del año, mes y día
			$var_ec_date = DATE . '/';
			#-------------------------------------------------------------------------#
			# Consultar helper y sus opciones
			Helper::load('files');
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			#-------------------------------------------------------------------------#
			# Nombre del archivo a guardar con sus datos respectivos
			$var_zip_name = 'Z_' . DATE . HOUR_NUMBER . '.zip';
			# Ruta de la carpeta para almacenar sus respectivos archivos
			$var_zip_route = $var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date;
			# Ruta final concatenada para almacenar el archivo en su carpeta
			$var_zip_final = '' . $var_zip_route . $var_zip_name;
			#-------------------------------------------------------------------------#
			$var_compressed = new ZipArchive();
			# Validacion de la ruta y archivo del archivo a comprimir
			if ($var_compressed->open($var_zip_final, ZIPARCHIVE::CREATE | ZIPARCHIVE::OVERWRITE) === true) {
				# Agregamos los archivos a comprimir
				foreach ($var_file as $key_file) {
					$var_ec_file = str_replace('../', '', $key_file);
					# Ruta de los archivos encontrados
					$var_get_route = $var_ec_route . $var_ec_folder . $var_control . '/';
					# Añadir los archivos a comprimir
					$var_get_content = file_get_contents($var_ec_file);
					# Añadir los archivos a comprimir
					$var_compressed->addFromString(str_replace($var_get_route, '', $var_ec_file), $var_get_content);
				}
			}
			# Cerrar la compresion del archivo
			$var_compressed->close();
			# Codificar la iniformacion del archivo
			$var_base_64 = base64_encode(file_get_contents($var_zip_final));
			#-------------------------------------------------------------------------#
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_zip_final, 0777);
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_document => $var_zip_name,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_route => $var_zip_route,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql =  $this->db->query("
				SELECT MIN(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . ") AS 'lbl_min'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_m_temp => '1',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "' AND " .
						d_azp_ibn_data_main_m_temp . " = '3' AND " . d_azp_ibn_data_main_t_row_num . " = '" . $value['lbl_min'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(
				d_azp_ibn_compress_m_by_created => $_SESSION[SESS_APP_ID],
				d_azp_ibn_compress_m_by_modified => $_SESSION[SESS_APP_ID],
				d_azp_ibn_compress_m_date_created => DATE_HOUR,
				d_azp_ibn_compress_m_date_modified => DATE_HOUR,
				d_azp_ibn_compress_m_deleted => '1',
				d_azp_ibn_compress_m_description => '',
				d_azp_ibn_compress_m_level => '2',
				d_azp_ibn_compress_m_status => '1',
				d_azp_ibn_compress_m_temp => '1',
				d_azp_ibn_compress_t_compress => 'Dits + Imagenes',
				d_azp_ibn_compress_t_document => $var_zip_name,
				d_azp_ibn_compress_t_route => $var_zip_final,
				d_azp_ibn_compress_v_id_azp_ibn_control_panel => $var_control,
			);
			$this->db->insert(t_azp_ibn_compress, $var_array);
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Archivo comprimido correctamente.');
		}

		# Query Sql Select
		final public function sql_controller_file_zip() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					" . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					" . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					" . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					" . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route'
				FROM " . t_azp_ibn_control_panel . "
				WHERE " . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_dit_data_main_dit_all_pdf(array $data, string $var_control) {
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(
				d_azp_ibn_data_main_w_document => $data['lbl_document'],
				d_azp_ibn_data_main_w_error => $data['lbl_error'],
				d_azp_ibn_data_main_w_folder => $data['lbl_folder'],
				d_azp_ibn_data_main_w_name => $data['lbl_name'],
				d_azp_ibn_data_main_w_route => $data['lbl_route'],
				d_azp_ibn_data_main_w_size => $data['lbl_size'],
				d_azp_ibn_data_main_w_tmp_name => $data['lbl_tmp_name'],
				d_azp_ibn_data_main_w_type => $data['lbl_type'],
			);
			# Insertar valores en la tabla segun estructura de la tabla
			$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $data['lbl_id'] . "'");
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Registro actualizado correctamente.');
		}

		# Query Sql Select
		final public function sql_controller_ibn_compress() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_compress." . d_azp_ibn_compress_id_azp_ibn_compress . " AS 'lbl_azp_ibn_compress_id_azp_ibn_compress',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_compress." . d_azp_ibn_compress_m_date_created . " AS 'lbl_azp_ibn_compress_m_date_created',
					tc_azp_ibn_compress." . d_azp_ibn_compress_m_date_modified . " AS 'lbl_azp_ibn_compress_m_date_modified',
					tc_azp_ibn_compress." . d_azp_ibn_compress_m_description . " AS 'lbl_azp_ibn_compress_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_compress." . d_azp_ibn_compress_t_compress . " AS 'lbl_azp_ibn_compress_t_compress',
					tc_azp_ibn_compress." . d_azp_ibn_compress_t_document . " AS 'lbl_azp_ibn_compress_t_document',
					tc_azp_ibn_compress." . d_azp_ibn_compress_t_route . " AS 'lbl_azp_ibn_compress_t_route',
					tc_azp_ibn_compress." . d_azp_ibn_compress_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_compress_v_id_azp_ibn_control_panel'
				FROM " . t_azp_ibn_compress . " tc_azp_ibn_compress
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_compress." . d_azp_ibn_compress_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_compress." . d_azp_ibn_compress_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_compress." . d_azp_ibn_compress_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_compress." . d_azp_ibn_compress_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_compress." . d_azp_ibn_compress_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "'
					AND tc_azp_ibn_compress." . d_azp_ibn_compress_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				ORDER BY tc_azp_ibn_compress." . d_azp_ibn_compress_id_azp_ibn_compress . " ASC
			");
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_compress_delete() {
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("DELETE FROM " . t_azp_ibn_compress . "
				WHERE " . d_azp_ibn_compress_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "'
					AND " . d_azp_ibn_compress_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Registro ejecutado correctamente.');
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_dit_data_main_dit_all_zip(string $var_control) {
			# Seleccionar los registros de la tabla
			$var_sql =  $this->db->query("
				SELECT MIN(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . ") AS 'lbl_min'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_min_rn = $value['lbl_min']; endforeach; }
			# Valores del array vacios
			$var_file = array();
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main,
				d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "' AND " .
				d_azp_ibn_data_main_w_document . " != '' AND " .
				d_azp_ibn_data_main_m_temp . " = '3' AND " .
				d_azp_ibn_data_main_t_row_num . " = '" . $var_min_rn . "'"
			);
			# Validar si la consulta es verdadera
			if (false != $var_sql) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql as $key_sql => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_id = $value[d_azp_ibn_data_main_id_azp_ibn_data_main];
					$var_identification = $value[d_azp_ibn_data_main_t_identification];
					$var_document = $value[d_azp_ibn_data_main_w_document];
					$var_folder = $value[d_azp_ibn_data_main_w_folder];
					$var_route = $value[d_azp_ibn_data_main_w_route];
					$var_file[$var_id] = $var_route . $var_folder . $var_document;
				endforeach;
			} else { $var_file[] = ''; }
			#-------------------------------------------------------------------------#
			# Ruta principal de la carpeta
			$var_ec_route = 'systemfiles/filesproject/';
			# Ruta de la carpeta principal
			$var_ec_folder = 'azp_ibn_control_panel/';
			# Ruta de la carpeta principal
			$var_ec_subfol = 'compressed/';
			# Carpeta del año
			$var_ec_year = YEAR . '/';
			# Carpeta del año y mes
			$var_ec_month = YEAR_MONTH . '/';
			# Carpeta del año, mes y día
			$var_ec_date = DATE . '/';
			#-------------------------------------------------------------------------#
			# Consultar helper y sus opciones
			Helper::load('files');
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			#-------------------------------------------------------------------------#
			# Nombre del archivo a guardar con sus datos respectivos
			$var_zip_name = 'Z_' . DATE . HOUR_NUMBER . '.zip';
			# Ruta de la carpeta para almacenar sus respectivos archivos
			$var_zip_route = $var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date;
			# Ruta final concatenada para almacenar el archivo en su carpeta
			$var_zip_final = '' . $var_zip_route . $var_zip_name;
			#-------------------------------------------------------------------------#
			$var_compressed = new ZipArchive();
			# Validacion de la ruta y archivo del archivo a comprimir
			if ($var_compressed->open($var_zip_final, ZIPARCHIVE::CREATE | ZIPARCHIVE::OVERWRITE) === true) {
				# Agregamos los archivos a comprimir
				foreach ($var_file as $key_file) {
					$var_ec_file = str_replace('../', '', $key_file);
					# Ruta de los archivos encontrados
					$var_get_route = $var_ec_route . $var_ec_folder . $var_control . '/archive/';
					# Añadir los archivos a comprimir
					$var_get_content = file_get_contents($var_ec_file);
					# Añadir los archivos a comprimir
					$var_compressed->addFromString(str_replace($var_get_route, '', $var_ec_file), $var_get_content);
				}
			}
			# Cerrar la compresion del archivo
			$var_compressed->close();
			# Codificar la iniformacion del archivo
			$var_base_64 = base64_encode(file_get_contents($var_zip_final));
			#-------------------------------------------------------------------------#
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_zip_final, 0777);
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_document => $var_zip_name,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_route => $var_zip_route,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql =  $this->db->query("
				SELECT MIN(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . ") AS 'lbl_min'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_m_temp => '1',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_control . "' AND " .
						d_azp_ibn_data_main_m_temp . " = '3' AND " . d_azp_ibn_data_main_t_row_num . " = '" . $value['lbl_min'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(
				d_azp_ibn_compress_m_by_created => $_SESSION[SESS_APP_ID],
				d_azp_ibn_compress_m_by_modified => $_SESSION[SESS_APP_ID],
				d_azp_ibn_compress_m_date_created => DATE_HOUR,
				d_azp_ibn_compress_m_date_modified => DATE_HOUR,
				d_azp_ibn_compress_m_deleted => '1',
				d_azp_ibn_compress_m_description => '',
				d_azp_ibn_compress_m_level => '2',
				d_azp_ibn_compress_m_status => '1',
				d_azp_ibn_compress_m_temp => '1',
				d_azp_ibn_compress_t_compress => 'Dits Individuales',
				d_azp_ibn_compress_t_document => $var_zip_name,
				d_azp_ibn_compress_t_route => $var_zip_final,
				d_azp_ibn_compress_v_id_azp_ibn_control_panel => $var_control,
			);
			$this->db->insert(t_azp_ibn_compress, $var_array);
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Archivo comprimido correctamente.');
		}

		# Query Sql Select
		final public function sql_controller_dit_archive() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					" . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					" . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					" . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					" . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route'
				FROM " . t_azp_ibn_control_panel . "
				WHERE " . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_dit_row_num() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
		}

		# Query Sql Select Get Id
		final public function sql_azp_ibn_control_panel_image_all() {
			# Valores del array vacios
			$var_file = array();
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (false != $var_sql_control) { foreach ($var_sql_control as $key_sql => $value): $var_control = $value[d_azp_ibn_control_panel_id_azp_ibn_control_panel]; endforeach; }
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_camera . " tc_azp_ibn_camera
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . "
				
				WHERE tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (false != $var_sql_camera) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_camera as $key_sql => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_id = $value['lbl_azp_ibn_capture_id_azp_ibn_capture'];
					$var_document = $value['lbl_azp_ibn_capture_w_document'];
					$var_folder = $value['lbl_azp_ibn_capture_w_folder'];
					$var_route = $value['lbl_azp_ibn_capture_w_route'];
					$var_file[$var_id] = $var_route . $var_folder . $var_document;
				endforeach;
			} else { $var_file[] = ''; }
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_property . " tc_azp_ibn_property
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . "
				
				WHERE tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . " = '2'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (false != $var_sql_property) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_property as $key_sql => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_id = $value['lbl_azp_ibn_capture_id_azp_ibn_capture'];
					$var_document = $value['lbl_azp_ibn_capture_w_document'];
					$var_folder = $value['lbl_azp_ibn_capture_w_folder'];
					$var_route = $value['lbl_azp_ibn_capture_w_route'];
					$var_file[$var_id] = $var_route . $var_folder . $var_document;
				endforeach;
			} else { $var_file[] = ''; }
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . "
				
				WHERE tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . " = '3'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (false != $var_sql_vehicle) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_vehicle as $key_sql => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_id = $value['lbl_azp_ibn_capture_id_azp_ibn_capture'];
					$var_document = $value['lbl_azp_ibn_capture_w_document'];
					$var_folder = $value['lbl_azp_ibn_capture_w_folder'];
					$var_route = $value['lbl_azp_ibn_capture_w_route'];
					$var_file[$var_id] = $var_route . $var_folder . $var_document;
				endforeach;
			} else { $var_file[] = ''; }
			#-------------------------------------------------------------------------#
			# Ruta principal de la carpeta
			$var_ec_route = 'systemfiles/filesproject/';
			# Ruta de la carpeta principal
			$var_ec_folder = 'azp_ibn_control_panel/';
			# Ruta de la carpeta principal
			$var_ec_subfol = 'compressed/';
			# Carpeta del año
			$var_ec_year = YEAR . '/';
			# Carpeta del año y mes
			$var_ec_month = YEAR_MONTH . '/';
			# Carpeta del año, mes y día
			$var_ec_date = DATE . '/';
			#-------------------------------------------------------------------------#
			# Consultar helper y sus opciones
			Helper::load('files');
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Creacion de carpetas en el desarrollo
			Files::create_dir($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			#-------------------------------------------------------------------------#
			# Nombre del archivo a guardar con sus datos respectivos
			$var_zip_name = 'Z_' . DATE . HOUR_NUMBER . '.zip';
			# Ruta de la carpeta para almacenar sus respectivos archivos
			$var_zip_route = $var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date;
			# Ruta final concatenada para almacenar el archivo en su carpeta
			$var_zip_final = '' . $var_zip_route . $var_zip_name;
			#-------------------------------------------------------------------------#
			$var_compressed = new ZipArchive();
			# Validacion de la ruta y archivo del archivo a comprimir
			if ($var_compressed->open($var_zip_final, ZIPARCHIVE::CREATE | ZIPARCHIVE::OVERWRITE) === true) {
				# Agregamos los archivos a comprimir
				foreach ($var_file as $key_file) {
					$var_ec_file = str_replace('../', '', $key_file);
					# Ruta de los archivos encontrados
					//$var_get_route = $var_ec_route . $var_ec_folder . $var_control . '/';
					# Ruta de los archivos encontrados
					$var_get_route = 'systemfiles/filesproject/azp_ibn_control_panel/' . $this->id . '/';
					# Añadir los archivos a comprimir
					$var_get_content = file_get_contents($var_ec_file);
					# Añadir los archivos a comprimir
					$var_compressed->addFromString(str_replace($var_get_route, '', $var_ec_file), $var_get_content);
				}
			}
			# Cerrar la compresion del archivo
			$var_compressed->close();
			# Codificar la iniformacion del archivo
			$var_base_64 = base64_encode(file_get_contents($var_zip_final));
			#-------------------------------------------------------------------------#
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_ec_route . $var_ec_folder . $var_ec_subfol . $var_ec_year . $var_ec_month . $var_ec_date, 0777);
			# Dar permisos a la carpeta y archivo
			chmod($var_zip_final, 0777);
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_document => $var_zip_name,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Array para asignar argumentos o valores a los elementos
			$var_array = array(d_azp_ibn_control_panel_t_route => $var_zip_route,);
			# Query Sql Insert: Registrar valores en la tabla segun sus campos
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_control . "'");
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Archivo comprimido correctamente.');
		}

		# Query Sql Select Get Id
		final public function get_sql_azp_ibn_sector() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1' " . $var_code . "
					AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_ibn_sector . " = '" . $this->id . "'
			");
		}

		# Query Sql Select Get Id
		final public function get_sql_azp_ibn_sector_two() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '4'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1' " . $var_code . "
					AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_ibn_sector . " = '" . $this->id . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_client() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_inform_client . " AS 'lbl_azp_ibn_control_panel_t_inform_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " = '" . $this->id . "'
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_control_panel_client_two() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_inform_client . " AS 'lbl_azp_ibn_control_panel_t_inform_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '4'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " = '" . $this->id . "'
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Control Errores Update
		final private function error_sql_dsh_azp_ibn_control_panel_archive(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_archive'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_archive']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es oblgitario.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_id) {
					# Verificar si el resultado devuleto no existe para asignar un valor especifico
					if (strtolower($sql_id) == '') { $sql_id[0][0] = 0; }
					# Verificiar si el valor recibido de la sql es diferente del digitado
					if (strtolower($sql_id[0][0]) != strtolower($empty_id)) {
						# Informar un mensaje al usuario por medio de una excepcion
						throw new Exception('<b>Error:</b> La base que está archivando no se encuentra registrado.');
					}
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false != $sql_id) {
					# Verificar si el resultado devuleto no existe para asignar un valor especifico
					if (strtolower($sql_id[0][0]) == '') { $sql_id[0][0] = 0; }
					# Verificiar si el valor recibido de la sql es diferente del digitado
					if (strtolower($sql_id[0][0]) == strtolower($empty_id)) {
						# Informar un mensaje al usuario por medio de una excepcion
						throw new Exception('<b>Error:</b> La base que estás archivando ya se encuentra archivado.');
					}
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro fue creado por el usuario root
				$sql_session = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_ibn_control_panel_m_level . " = '1'");
				# Verificar si el registro creado es igual el valor del campo nivel al valor dos
				$sql_level = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_level . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_session && false == $sql_level) {
					# Verificiar si el valor recibido de la sql es diferente del digitado
					throw new Exception('<b>Error:</b> No tienes suficientes permisos superiores para actualizar el registro.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_dsh_azp_ibn_control_panel_archive(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_control_panel_archive($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_archive']);
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_control_panel_t_state => 'ARCHIVADO',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Organizacion de los valores capturados y asignados a los campos a insertar
				$var_array = array(d_azp_ibn_control_panel_t_date_general => DATE,);
				# Insertar valores en la tabla segun estructura de la tabla
				$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Base archivado correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_dsh_azp_ibn_control_panel_eliminate(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_eliminate'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_eliminate']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es oblgitario.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_id) {
					# Verificar si el resultado devuleto no existe para asignar un valor especifico
					if (strtolower($sql_id) == '') { $sql_id[0][0] = 0; }
					# Verificiar si el valor recibido de la sql es diferente del digitado
					if (strtolower($sql_id[0][0]) != strtolower($empty_id)) {
						# Informar un mensaje al usuario por medio de una excepcion
						throw new Exception('<b>Error:</b> La base que estás eliminando no se encuentra registrado.');
					}
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro fue creado por el usuario root
				$sql_session = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_ibn_control_panel_m_level . " = '1'");
				# Verificar si el registro creado es igual el valor del campo nivel al valor dos
				$sql_level = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_level . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_session && false == $sql_level) {
					# Verificiar si el valor recibido de la sql es diferente del digitado
					throw new Exception('<b>Error:</b> No tienes suficientes permisos superiores para actualizar el registro.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_dsh_azp_ibn_control_panel_eliminate(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_control_panel_eliminate($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_eliminate']);
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_data_main_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_camera_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_camera, $var_array, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_furniture_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_furniture, $var_array, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_property_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_property, $var_array, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_vehicle_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_vehicle, $var_array, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_warranty_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_warranty, $var_array, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_evaluation_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_control_panel_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");





				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				/*$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_data_main_id_azp_ibn_data_main];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_camera_id_azp_ibn_camera];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_camera, d_azp_ibn_camera_id_azp_ibn_camera . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_furniture_id_azp_ibn_furniture];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_furniture, d_azp_ibn_furniture_id_azp_ibn_furniture . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_property_id_azp_ibn_property];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_property, d_azp_ibn_property_id_azp_ibn_property . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_vehicle_id_azp_ibn_vehicle];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_vehicle, d_azp_ibn_vehicle_id_azp_ibn_vehicle . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_warranty_id_azp_ibn_warranty];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_warranty, d_azp_ibn_warranty_id_azp_ibn_warranty . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_evaluation, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_evaluation_id_azp_ibn_evaluation];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_evaluation, d_azp_ibn_evaluation_id_azp_ibn_evaluation . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->delete(t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");*/
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Base eliminada correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_dsh_azp_ibn_control_panel_drop(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_drop'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_drop']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es oblgitario.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_id) {
					# Verificar si el resultado devuleto no existe para asignar un valor especifico
					if (strtolower($sql_id) == '') { $sql_id[0][0] = 0; }
					# Verificiar si el valor recibido de la sql es diferente del digitado
					if (strtolower($sql_id[0][0]) != strtolower($empty_id)) {
						# Informar un mensaje al usuario por medio de una excepcion
						throw new Exception('<b>Error:</b> La base que estás eliminando no se encuentra registrado.');
					}
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro fue creado por el usuario root
				$sql_session = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_ibn_control_panel_m_level . " = '1'");
				# Verificar si el registro creado es igual el valor del campo nivel al valor dos
				$sql_level = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "' AND " . d_azp_ibn_control_panel_m_level . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_session && false == $sql_level) {
					# Verificiar si el valor recibido de la sql es diferente del digitado
					throw new Exception('<b>Error:</b> No tienes suficientes permisos superiores para actualizar el registro.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_dsh_azp_ibn_control_panel_drop(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_control_panel_drop($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_drop']);
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_data_main_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_camera_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_camera, $var_array, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_furniture_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_furniture, $var_array, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_property_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_property, $var_array, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_vehicle_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_vehicle, $var_array, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_warranty_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_warranty, $var_array, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_evaluation_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_control_panel_m_deleted => '5',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");




				
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				/*$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_data_main_id_azp_ibn_data_main];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_camera_id_azp_ibn_camera];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_camera, d_azp_ibn_camera_id_azp_ibn_camera . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_furniture_id_azp_ibn_furniture];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_furniture, d_azp_ibn_furniture_id_azp_ibn_furniture . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_property_id_azp_ibn_property];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_property, d_azp_ibn_property_id_azp_ibn_property . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_vehicle_id_azp_ibn_vehicle];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_vehicle, d_azp_ibn_vehicle_id_azp_ibn_vehicle . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Consulta para identificar los nuevos registros en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
				# Validar si la consulta es verdadera
				if (false != $var_sql) {
					# Recorrer las filas de la consulta generada
					foreach ($var_sql as $key_sql):
						# Asignacion de valores a nuevas variables
						$empty_consult = $key_sql[d_azp_ibn_warranty_id_azp_ibn_warranty];
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->delete(t_azp_ibn_warranty, d_azp_ibn_warranty_id_azp_ibn_warranty . " = '" . $empty_consult . "'");
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->delete(t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_id . "'");*/
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Base eliminada correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_dsh_azp_ibn_data_main_delete(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_data'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_data']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es oblgitario.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_dsh_azp_ibn_data_main_delete(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_data_main_delete($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_data']);
				$empty_ck = $this->db->scape($data['field_tb_ck']);
				#-------------------------------------------------------------------------#
				# Separar la cadena usando un delimitador
				$var_array = explode(",", $empty_ck);
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_array as $key => $value) {
					# Consulta para identificar los nuevos registros en la tabla
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $value . "'");
					# Validar si la consulta es verdadera
					if (false != $var_sql) {
						# Recorrer las filas de la consulta generada
						foreach ($var_sql as $key_sql):
							# Asignacion de valores a nuevas variables
							$empty_identification = $key_sql[d_azp_ibn_data_main_t_identification];
							#-------------------------------------------------------------------------#
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->delete(t_azp_ibn_camera, d_azp_ibn_camera_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
							#-------------------------------------------------------------------------#
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->delete(t_azp_ibn_furniture, d_azp_ibn_furniture_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
							#-------------------------------------------------------------------------#
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->delete(t_azp_ibn_property, d_azp_ibn_property_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
							#-------------------------------------------------------------------------#
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->delete(t_azp_ibn_vehicle, d_azp_ibn_vehicle_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
							#-------------------------------------------------------------------------#
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->delete(t_azp_ibn_warranty, d_azp_ibn_warranty_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $empty_id . "'");
						endforeach;
					}
					#-------------------------------------------------------------------------#
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->delete(t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $value . "'");
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Base eliminada correctamente.');
			}
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_client() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_created . " AS 'lbl_azp_ibn_client_m_date_created',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_modified . " AS 'lbl_azp_ibn_client_m_date_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_description . " AS 'lbl_azp_ibn_client_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1' " . $var_code . "
				ORDER BY tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_controller_client_image() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT COUNT(" . d_azp_ibn_control_panel_id_azp_ibn_control_panel . ") AS 'lbl_count' FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_client." . d_azp_ibn_client_w_document . " != ''
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_sector() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_sector." . d_azp_ibn_sector_id_azp_ibn_sector . " AS 'lbl_azp_ibn_sector_id_azp_ibn_sector',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_sector." . d_azp_ibn_sector_m_date_created . " AS 'lbl_azp_ibn_sector_m_date_created',
					tc_azp_ibn_sector." . d_azp_ibn_sector_m_date_modified . " AS 'lbl_azp_ibn_sector_m_date_modified',
					tc_azp_ibn_sector." . d_azp_ibn_sector_m_description . " AS 'lbl_azp_ibn_sector_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_sector." . d_azp_ibn_sector_t_name . " AS 'lbl_azp_ibn_sector_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_sector . " tc_azp_ibn_sector
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_sector." . d_azp_ibn_sector_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_sector." . d_azp_ibn_sector_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_sector." . d_azp_ibn_sector_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_sector." . d_azp_ibn_sector_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_sector." . d_azp_ibn_sector_id_azp_ibn_sector . "
						= tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_ibn_sector . "
				
				WHERE tc_azp_ibn_sector." . d_azp_ibn_sector_m_deleted . " = '1'
					AND tc_azp_ibn_sector." . d_azp_ibn_sector_m_status . " = '1' " . $var_code . "
				GROUP BY tc_azp_ibn_sector." . d_azp_ibn_sector_id_azp_ibn_sector . " ASC
				ORDER BY tc_azp_ibn_sector." . d_azp_ibn_sector_id_azp_ibn_sector . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_data_main($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_created . " AS 'lbl_azp_ibn_data_main_m_date_created',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_modified . " AS 'lbl_azp_ibn_data_main_m_date_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_description . " AS 'lbl_azp_ibn_data_main_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_data_main_v_id_azp_ibn_control_panel',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_w_document . " AS 'lbl_azp_ibn_client_w_document',
					tc_azp_ibn_client." . d_azp_ibn_client_w_folder . " AS 'lbl_azp_ibn_client_w_folder',
					tc_azp_ibn_client." . d_azp_ibn_client_w_route . " AS 'lbl_azp_ibn_client_w_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_data_ceil_num() {
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_id',
					@rownum:=@rownum+1 AS 'lbl_row_num', CEIL(@rownum/80) AS 'lbl_ceil_num'
				FROM (SELECT @rownum:=0) r, " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . "
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . "
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_data_main_m_temp => '3', d_azp_ibn_data_main_t_row_num => $value['lbl_ceil_num'],);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $value['lbl_id'] . "'");
				endforeach;
			}
		}

		# Query Sql Select
		/*final public function sql_select_tc_azp_ibn_dit_data_row_num() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT * FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC,
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . " ASC
				
			");
		}*/

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_data_group() {
			# Seleccionar los registros de la tabla
			$var_sql =  $this->db->query("
				SELECT MIN(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . ") AS 'lbl_min'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_min_rn = $value['lbl_min']; endforeach; }
			//echo 'min'. $var_min_rn . '<br>';
			//exit();
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_created . " AS 'lbl_azp_ibn_data_main_m_date_created',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_date_modified . " AS 'lbl_azp_ibn_data_main_m_date_modified',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_description . " AS 'lbl_azp_ibn_data_main_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_data_main_v_id_azp_ibn_control_panel',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_w_document . " AS 'lbl_azp_ibn_client_w_document',
					tc_azp_ibn_client." . d_azp_ibn_client_w_folder . " AS 'lbl_azp_ibn_client_w_folder',
					tc_azp_ibn_client." . d_azp_ibn_client_w_route . " AS 'lbl_azp_ibn_client_w_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_row_num . " = '" . $var_min_rn . "'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_temp . " = '3'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_camera($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
				GROUP BY tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " ASC
				ORDER BY tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_furniture($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " = '18'
				GROUP BY tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " ASC
				ORDER BY tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_property($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_property." . d_azp_ibn_property_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " = '" . $var_identification . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
				GROUP BY tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " ASC
				ORDER BY tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_vehicle($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " = '" . $var_identification . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
				GROUP BY tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " ASC
				ORDER BY tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_dit_warranty($var_identification) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
				GROUP BY tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " ASC
				ORDER BY tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_controller_ibn_format_gantt_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_id_azp_ibn_format_gantt . " AS 'lbl_azp_ibn_format_gantt_id_azp_ibn_format_gantt',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_date_created . " AS 'lbl_azp_ibn_format_gantt_m_date_created',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_date_modified . " AS 'lbl_azp_ibn_format_gantt_m_date_modified',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_description . " AS 'lbl_azp_ibn_format_gantt_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_month . " AS 'lbl_azp_ibn_format_gantt_t_date_month',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_since . " AS 'lbl_azp_ibn_format_gantt_t_date_since',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_until . " AS 'lbl_azp_ibn_format_gantt_t_date_until',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_document . " AS 'lbl_azp_ibn_format_gantt_w_document',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_error . " AS 'lbl_azp_ibn_format_gantt_w_error',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_folder . " AS 'lbl_azp_ibn_format_gantt_w_folder',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_name . " AS 'lbl_azp_ibn_format_gantt_w_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_route . " AS 'lbl_azp_ibn_format_gantt_w_route',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_size . " AS 'lbl_azp_ibn_format_gantt_w_size',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_tmp_name . " AS 'lbl_azp_ibn_format_gantt_w_tmp_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_type . " AS 'lbl_azp_ibn_format_gantt_w_type'
				FROM " . t_azp_ibn_format_gantt . " tc_azp_ibn_format_gantt
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_id_azp_ibn_format_gantt . " = '" . $this->id . "'
					AND tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_deleted . " = '1'
			");
		}
		
		# Query Sql Select
		final public function sql_controller_ibn_format_gantt_read() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_id_azp_ibn_format_gantt . " AS 'lbl_azp_ibn_format_gantt_id_azp_ibn_format_gantt',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_date_created . " AS 'lbl_azp_ibn_format_gantt_m_date_created',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_date_modified . " AS 'lbl_azp_ibn_format_gantt_m_date_modified',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_description . " AS 'lbl_azp_ibn_format_gantt_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_month . " AS 'lbl_azp_ibn_format_gantt_t_date_month',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_since . " AS 'lbl_azp_ibn_format_gantt_t_date_since',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_t_date_until . " AS 'lbl_azp_ibn_format_gantt_t_date_until',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_document . " AS 'lbl_azp_ibn_format_gantt_w_document',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_error . " AS 'lbl_azp_ibn_format_gantt_w_error',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_folder . " AS 'lbl_azp_ibn_format_gantt_w_folder',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_name . " AS 'lbl_azp_ibn_format_gantt_w_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_route . " AS 'lbl_azp_ibn_format_gantt_w_route',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_size . " AS 'lbl_azp_ibn_format_gantt_w_size',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_tmp_name . " AS 'lbl_azp_ibn_format_gantt_w_tmp_name',
					tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_w_type . " AS 'lbl_azp_ibn_format_gantt_w_type'
				FROM " . t_azp_ibn_format_gantt . " tc_azp_ibn_format_gantt
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_m_deleted . " = '1'
				ORDER BY tc_azp_ibn_format_gantt." . d_azp_ibn_format_gantt_id_azp_ibn_format_gantt . " DESC
				LIMIT 5
			");
		}
		
		# Query Sql Select
		final public function sql_controller_ibn_format_gantt_file($var_date_month, $var_ec_route, $var_document) {
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(
				d_azp_ibn_format_gantt_m_by_created => $_SESSION[SESS_APP_ID],
				d_azp_ibn_format_gantt_m_by_modified => $_SESSION[SESS_APP_ID],
				d_azp_ibn_format_gantt_m_date_created => DATE_HOUR,
				d_azp_ibn_format_gantt_m_date_modified => DATE_HOUR,
				d_azp_ibn_format_gantt_m_deleted => '1',
				d_azp_ibn_format_gantt_m_description => '',
				d_azp_ibn_format_gantt_m_level => '2',
				d_azp_ibn_format_gantt_m_status => '1',
				d_azp_ibn_format_gantt_m_temp => '1',
				d_azp_ibn_format_gantt_t_date_month => $var_date_month,
				d_azp_ibn_format_gantt_t_date_since => $var_date_month . '-01',
				d_azp_ibn_format_gantt_t_date_until => $var_date_month . '-31',
				d_azp_ibn_format_gantt_w_document => $var_document,
				d_azp_ibn_format_gantt_w_error => '0',
				d_azp_ibn_format_gantt_w_folder => '',
				d_azp_ibn_format_gantt_w_name => 'Formato Tablero.xlsx',
				d_azp_ibn_format_gantt_w_route => $var_ec_route,
				d_azp_ibn_format_gantt_w_size => '0',
				d_azp_ibn_format_gantt_w_tmp_name => '',
				d_azp_ibn_format_gantt_w_type => 'application/xlsx',
			);
			$this->db->insert(t_azp_ibn_format_gantt, $var_array);
			#-------------------------------------------------------------------------#
			# Asignacion del nuevo nombre del archivo
			$var_new_panel = 'Tablero Control 2.xlsx';
			# Documento Excel Formato
			$var_doc_panel = $var_ec_route . 'Formato Tablero.xlsx';
			# Nueva ruta para copiar el archivo
			$var_route_new = '../../C:/xampp/htdocs/migration/systemfiles/filesimport/investigation/';
			# Copiar archivos de una ruta a otra
			copy($var_doc_panel, $var_route_new . $var_new_panel);
			#-------------------------------------------------------------------------#
			# Retornar el mensaje una vez ejecutada la rutina del proceso
			return array('success' => 1, 'message' => '<b>Exito:</b> Registro almacenado correctamente.');
		}
		
		# Query Sql Select
		final public function sql_controller_ibn_control_panel($var_date_since, $var_date_until) {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . " AS 'lbl_azp_ibn_control_panel_m_by_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . " AS 'lbl_azp_ibn_control_panel_m_by_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " AS 'lbl_azp_ibn_control_panel_m_deleted',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . " AS 'lbl_azp_ibn_control_panel_m_level',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . " AS 'lbl_azp_ibn_control_panel_m_status',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_temp . " AS 'lbl_azp_ibn_control_panel_m_temp',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $var_date_since . "'
						AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $var_date_until . "')
			");
		}
		
		# Query Sql Select
		final public function sql_controller_ibn_client() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_m_by_created . " AS 'lbl_azp_ibn_client_m_by_created',
					tc_azp_ibn_client." . d_azp_ibn_client_m_by_modified . " AS 'lbl_azp_ibn_client_m_by_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_created . " AS 'lbl_azp_ibn_client_m_date_created',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_modified . " AS 'lbl_azp_ibn_client_m_date_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " AS 'lbl_azp_ibn_client_m_deleted',
					tc_azp_ibn_client." . d_azp_ibn_client_m_description . " AS 'lbl_azp_ibn_client_m_description',
					tc_azp_ibn_client." . d_azp_ibn_client_m_level . " AS 'lbl_azp_ibn_client_m_level',
					tc_azp_ibn_client." . d_azp_ibn_client_m_status . " AS 'lbl_azp_ibn_client_m_status',
					tc_azp_ibn_client." . d_azp_ibn_client_m_temp . " AS 'lbl_azp_ibn_client_m_temp',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_w_document . " AS 'lbl_azp_ibn_client_w_document',
					tc_azp_ibn_client." . d_azp_ibn_client_w_error . " AS 'lbl_azp_ibn_client_w_error',
					tc_azp_ibn_client." . d_azp_ibn_client_w_folder . " AS 'lbl_azp_ibn_client_w_folder',
					tc_azp_ibn_client." . d_azp_ibn_client_w_name . " AS 'lbl_azp_ibn_client_w_name',
					tc_azp_ibn_client." . d_azp_ibn_client_w_route . " AS 'lbl_azp_ibn_client_w_route',
					tc_azp_ibn_client." . d_azp_ibn_client_w_size . " AS 'lbl_azp_ibn_client_w_size',
					tc_azp_ibn_client." . d_azp_ibn_client_w_tmp_name . " AS 'lbl_azp_ibn_client_w_tmp_name',
					tc_azp_ibn_client." . d_azp_ibn_client_w_type . " AS 'lbl_azp_ibn_client_w_type'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
			");
		}

		# Query Sql Select
		final public function sql_ibn_capture_camera() {
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_identification = $value[d_azp_ibn_data_main_t_identification]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_control = $value[d_azp_ibn_data_main_v_id_azp_ibn_control_panel]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_created . " AS 'lbl_azp_ibn_capture_m_date_created',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_modified . " AS 'lbl_azp_ibn_capture_m_date_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_description . " AS 'lbl_azp_ibn_capture_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_module',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_cfpvw'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_camera . " tc_azp_ibn_camera
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . "
				
				WHERE tc_azp_ibn_capture." . d_azp_ibn_capture_m_deleted . " = '1'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $var_control . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " = '1'
				ORDER BY tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " ASC
			");
		}

		# Query Sql Select
		final public function sql_ibn_capture_property() {
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_identification = $value[d_azp_ibn_data_main_t_identification]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_control = $value[d_azp_ibn_data_main_v_id_azp_ibn_control_panel]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_created . " AS 'lbl_azp_ibn_capture_m_date_created',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_modified . " AS 'lbl_azp_ibn_capture_m_date_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_description . " AS 'lbl_azp_ibn_capture_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_module',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_cfpvw'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_property . " tc_azp_ibn_property
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . "
				
				WHERE tc_azp_ibn_capture." . d_azp_ibn_capture_m_deleted . " = '1'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $var_control . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " = '2'
				ORDER BY tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " ASC
			");
		}

		# Query Sql Select
		final public function sql_ibn_capture_vehicle() {
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_identification = $value[d_azp_ibn_data_main_t_identification]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $this->id . "'");
			# Validar si la consulta es verdadera
			if (false != $var_sql) { foreach ($var_sql as $key_sql => $value): $var_control = $value[d_azp_ibn_data_main_v_id_azp_ibn_control_panel]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_created . " AS 'lbl_azp_ibn_capture_m_date_created',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_modified . " AS 'lbl_azp_ibn_capture_m_date_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_description . " AS 'lbl_azp_ibn_capture_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_module',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_cfpvw'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . "
						= tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . "
				
				WHERE tc_azp_ibn_capture." . d_azp_ibn_capture_m_deleted . " = '1'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_t_identification . " = '" . $var_identification . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_control . " = '" . $var_control . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " = '3'
				ORDER BY tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " ASC
			");
		}

		# Query Sql Select Get Id
		final public function sql_ibn_capture_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " AS 'lbl_azp_ibn_capture_id_azp_ibn_capture',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_created . " AS 'lbl_azp_ibn_capture_m_date_created',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_date_modified . " AS 'lbl_azp_ibn_capture_m_date_modified',
					tc_azp_ibn_capture." . d_azp_ibn_capture_m_description . " AS 'lbl_azp_ibn_capture_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_document . " AS 'lbl_azp_ibn_capture_w_document',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_error . " AS 'lbl_azp_ibn_capture_w_error',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_folder . " AS 'lbl_azp_ibn_capture_w_folder',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_name . " AS 'lbl_azp_ibn_capture_w_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_route . " AS 'lbl_azp_ibn_capture_w_route',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_size . " AS 'lbl_azp_ibn_capture_w_size',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_tmp_name . " AS 'lbl_azp_ibn_capture_w_tmp_name',
					tc_azp_ibn_capture." . d_azp_ibn_capture_w_type . " AS 'lbl_azp_ibn_capture_w_type',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_module',
					tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_cfpvw . " AS 'lbl_azp_ibn_capture_v_id_azp_ibn_cfpvw'
				FROM " . t_azp_ibn_capture . " tc_azp_ibn_capture
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_capture." . d_azp_ibn_capture_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				WHERE tc_azp_ibn_capture." . d_azp_ibn_capture_id_azp_ibn_capture . " = '" . $this->id . "'
					AND tc_azp_ibn_capture." . d_azp_ibn_capture_m_deleted . " = '1'
				LIMIT 1
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_viability_client() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_created . " AS 'lbl_azp_ibn_client_m_date_created',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_modified . " AS 'lbl_azp_ibn_client_m_date_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_description . " AS 'lbl_azp_ibn_client_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1' " . $var_code . "
				ORDER BY tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_viability_base() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " AS 'lbl_azp_ibn_control_panel_v_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " = '" . $this->id . "'
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_viability_code() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
				$var_state = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'";
			} else { $var_code = ''; $var_state = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " AS 'lbl_azp_ibn_control_panel_v_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1' " . $var_code . " " . $var_state . "
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_posession_client() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
			} else { $var_code = ''; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_created . " AS 'lbl_azp_ibn_client_m_date_created',
					tc_azp_ibn_client." . d_azp_ibn_client_m_date_modified . " AS 'lbl_azp_ibn_client_m_date_modified',
					tc_azp_ibn_client." . d_azp_ibn_client_m_description . " AS 'lbl_azp_ibn_client_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_client . " tc_azp_ibn_client
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_client." . d_azp_ibn_client_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_client." . d_azp_ibn_client_m_deleted . " = '1'
					AND tc_azp_ibn_client." . d_azp_ibn_client_m_status . " = '1' " . $var_code . "
				ORDER BY tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_posession_base() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " AS 'lbl_azp_ibn_control_panel_v_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " = '" . $this->id . "'
			");
		}
		
		# Query Sql Select
		final public function sql_tc_ibn_control_ultime_base() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
				$var_state = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'";
			} else { $var_code = ''; $var_state = ''; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . " AS 'lbl_azp_ibn_control_panel_v_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1' " . $var_code . " " . $var_state . "
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " DESC
				LIMIT 1
			");
		}













		# Query Sql Select
		final public function sql_tc_gsc_request_ultime_base() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '3' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_client = '0'; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_created . " AS 'lbl_azp_gsc_request_m_date_created',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_modified . " AS 'lbl_azp_gsc_request_m_date_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_description . " AS 'lbl_azp_gsc_request_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_s_capture . " AS 'lbl_azp_gsc_request_s_capture',
					tc_azp_gsc_request." . d_azp_gsc_request_s_data . " AS 'lbl_azp_gsc_request_s_data',
					tc_azp_gsc_request." . d_azp_gsc_request_s_date . " AS 'lbl_azp_gsc_request_s_date',
					tc_azp_gsc_request." . d_azp_gsc_request_s_duplicate . " AS 'lbl_azp_gsc_request_s_duplicate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_existing . " AS 'lbl_azp_gsc_request_s_existing',
					tc_azp_gsc_request." . d_azp_gsc_request_s_validate . " AS 'lbl_azp_gsc_request_s_validate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_web_service . " AS 'lbl_azp_gsc_request_s_web_service',
					tc_azp_gsc_request." . d_azp_gsc_request_t_city . " AS 'lbl_azp_gsc_request_t_city',
					tc_azp_gsc_request." . d_azp_gsc_request_t_date_associate . " AS 'lbl_azp_gsc_request_t_date_associate',
					tc_azp_gsc_request." . d_azp_gsc_request_t_death_date . " AS 'lbl_azp_gsc_request_t_death_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_full_name . " AS 'lbl_azp_gsc_request_t_full_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_id_supplier . " AS 'lbl_azp_gsc_request_t_id_supplier',
					tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " AS 'lbl_azp_gsc_request_t_identification',
					tc_azp_gsc_request." . d_azp_gsc_request_t_notary . " AS 'lbl_azp_gsc_request_t_notary',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_consecutive . " AS 'lbl_azp_gsc_request_t_number_consecutive',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_obligation . " AS 'lbl_azp_gsc_request_t_number_obligation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation . " AS 'lbl_azp_gsc_request_t_observation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation_outer . " AS 'lbl_azp_gsc_request_t_observation_outer',
					tc_azp_gsc_request." . d_azp_gsc_request_t_reported_bank . " AS 'lbl_azp_gsc_request_t_reported_bank',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_by . " AS 'lbl_azp_gsc_request_t_request_by',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'lbl_azp_gsc_request_t_request_state',
					tc_azp_gsc_request." . d_azp_gsc_request_t_serial . " AS 'lbl_azp_gsc_request_t_serial',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " AS 'lbl_azp_gsc_request_t_shipping_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_number . " AS 'lbl_azp_gsc_request_t_shipping_number',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_date . " AS 'lbl_azp_gsc_request_t_supplier_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_number . " AS 'lbl_azp_gsc_request_t_supplier_request_number',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_causal',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_client',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_expiration . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_expiration',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_phase . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_phase',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_state',
					tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
				
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
					AND tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " = '" . $var_client . "'
				ORDER BY tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " DESC
				LIMIT 1
			");
		}
		
		# Query Sql Select
		final public function sql_tc_gsc_request_code() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '3' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_client = '0'; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_created . " AS 'lbl_azp_gsc_request_m_date_created',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_modified . " AS 'lbl_azp_gsc_request_m_date_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_description . " AS 'lbl_azp_gsc_request_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_s_capture . " AS 'lbl_azp_gsc_request_s_capture',
					tc_azp_gsc_request." . d_azp_gsc_request_s_data . " AS 'lbl_azp_gsc_request_s_data',
					tc_azp_gsc_request." . d_azp_gsc_request_s_date . " AS 'lbl_azp_gsc_request_s_date',
					tc_azp_gsc_request." . d_azp_gsc_request_s_duplicate . " AS 'lbl_azp_gsc_request_s_duplicate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_existing . " AS 'lbl_azp_gsc_request_s_existing',
					tc_azp_gsc_request." . d_azp_gsc_request_s_validate . " AS 'lbl_azp_gsc_request_s_validate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_web_service . " AS 'lbl_azp_gsc_request_s_web_service',
					tc_azp_gsc_request." . d_azp_gsc_request_t_city . " AS 'lbl_azp_gsc_request_t_city',
					tc_azp_gsc_request." . d_azp_gsc_request_t_date_associate . " AS 'lbl_azp_gsc_request_t_date_associate',
					tc_azp_gsc_request." . d_azp_gsc_request_t_death_date . " AS 'lbl_azp_gsc_request_t_death_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_full_name . " AS 'lbl_azp_gsc_request_t_full_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_id_supplier . " AS 'lbl_azp_gsc_request_t_id_supplier',
					tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " AS 'lbl_azp_gsc_request_t_identification',
					tc_azp_gsc_request." . d_azp_gsc_request_t_notary . " AS 'lbl_azp_gsc_request_t_notary',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_consecutive . " AS 'lbl_azp_gsc_request_t_number_consecutive',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_obligation . " AS 'lbl_azp_gsc_request_t_number_obligation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation . " AS 'lbl_azp_gsc_request_t_observation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation_outer . " AS 'lbl_azp_gsc_request_t_observation_outer',
					tc_azp_gsc_request." . d_azp_gsc_request_t_reported_bank . " AS 'lbl_azp_gsc_request_t_reported_bank',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_by . " AS 'lbl_azp_gsc_request_t_request_by',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'lbl_azp_gsc_request_t_request_state',
					tc_azp_gsc_request." . d_azp_gsc_request_t_serial . " AS 'lbl_azp_gsc_request_t_serial',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " AS 'lbl_azp_gsc_request_t_shipping_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_number . " AS 'lbl_azp_gsc_request_t_shipping_number',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_date . " AS 'lbl_azp_gsc_request_t_supplier_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_number . " AS 'lbl_azp_gsc_request_t_supplier_request_number',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_causal',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_client',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_expiration . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_expiration',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_phase . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_phase',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_state',
					tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
				
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
					AND tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " = '" . $var_client . "'
				GROUP BY tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
		}

		# Query Sql Select
		final public function sql_tc_gsc_request_graphic_state() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_gsc_request, d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_number = $key_sql[d_azp_gsc_request_t_number_request]; endforeach; } else { $var_number = ''; }
			#-------------------------------------------------------------------------#
			if ($this->id == '' || $this->id == 0) { $var_control = "";
				$var_since = "WHERE (tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " >= '" . $_GET['date_since'] . "'";
				$var_until = "AND tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " <= '" . $_GET['date_until'] . "')";
			} else {
				$var_control = "WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_number . "'";
				$var_since = ""; $var_until = "";
			}
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_name',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . ") AS 'lbl_count'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
						= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
				
				" . $var_control . " " . $var_since . " " . $var_until . "
				GROUP BY tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " ASC
			");
		}













		# Query Sql Select
		final public function sql_tc_gsc_request_ultime_causal() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '3' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_client = '0'; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_created . " AS 'lbl_azp_gsc_request_m_date_created',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_modified . " AS 'lbl_azp_gsc_request_m_date_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_description . " AS 'lbl_azp_gsc_request_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_s_capture . " AS 'lbl_azp_gsc_request_s_capture',
					tc_azp_gsc_request." . d_azp_gsc_request_s_data . " AS 'lbl_azp_gsc_request_s_data',
					tc_azp_gsc_request." . d_azp_gsc_request_s_date . " AS 'lbl_azp_gsc_request_s_date',
					tc_azp_gsc_request." . d_azp_gsc_request_s_duplicate . " AS 'lbl_azp_gsc_request_s_duplicate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_existing . " AS 'lbl_azp_gsc_request_s_existing',
					tc_azp_gsc_request." . d_azp_gsc_request_s_validate . " AS 'lbl_azp_gsc_request_s_validate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_web_service . " AS 'lbl_azp_gsc_request_s_web_service',
					tc_azp_gsc_request." . d_azp_gsc_request_t_city . " AS 'lbl_azp_gsc_request_t_city',
					tc_azp_gsc_request." . d_azp_gsc_request_t_date_associate . " AS 'lbl_azp_gsc_request_t_date_associate',
					tc_azp_gsc_request." . d_azp_gsc_request_t_death_date . " AS 'lbl_azp_gsc_request_t_death_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_full_name . " AS 'lbl_azp_gsc_request_t_full_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_id_supplier . " AS 'lbl_azp_gsc_request_t_id_supplier',
					tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " AS 'lbl_azp_gsc_request_t_identification',
					tc_azp_gsc_request." . d_azp_gsc_request_t_notary . " AS 'lbl_azp_gsc_request_t_notary',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_consecutive . " AS 'lbl_azp_gsc_request_t_number_consecutive',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_obligation . " AS 'lbl_azp_gsc_request_t_number_obligation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation . " AS 'lbl_azp_gsc_request_t_observation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation_outer . " AS 'lbl_azp_gsc_request_t_observation_outer',
					tc_azp_gsc_request." . d_azp_gsc_request_t_reported_bank . " AS 'lbl_azp_gsc_request_t_reported_bank',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_by . " AS 'lbl_azp_gsc_request_t_request_by',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'lbl_azp_gsc_request_t_request_state',
					tc_azp_gsc_request." . d_azp_gsc_request_t_serial . " AS 'lbl_azp_gsc_request_t_serial',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " AS 'lbl_azp_gsc_request_t_shipping_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_number . " AS 'lbl_azp_gsc_request_t_shipping_number',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_date . " AS 'lbl_azp_gsc_request_t_supplier_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_number . " AS 'lbl_azp_gsc_request_t_supplier_request_number',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_causal',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_client',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_expiration . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_expiration',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_phase . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_phase',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_state',
					tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
				
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
					AND tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " = '" . $var_client . "'
				ORDER BY tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " DESC
				LIMIT 1
			");
		}
		
		# Query Sql Select
		final public function sql_tc_gsc_request_causal() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '3' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_client = '0'; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_created . " AS 'lbl_azp_gsc_request_m_date_created',
					tc_azp_gsc_request." . d_azp_gsc_request_m_date_modified . " AS 'lbl_azp_gsc_request_m_date_modified',
					tc_azp_gsc_request." . d_azp_gsc_request_m_description . " AS 'lbl_azp_gsc_request_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_s_capture . " AS 'lbl_azp_gsc_request_s_capture',
					tc_azp_gsc_request." . d_azp_gsc_request_s_data . " AS 'lbl_azp_gsc_request_s_data',
					tc_azp_gsc_request." . d_azp_gsc_request_s_date . " AS 'lbl_azp_gsc_request_s_date',
					tc_azp_gsc_request." . d_azp_gsc_request_s_duplicate . " AS 'lbl_azp_gsc_request_s_duplicate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_existing . " AS 'lbl_azp_gsc_request_s_existing',
					tc_azp_gsc_request." . d_azp_gsc_request_s_validate . " AS 'lbl_azp_gsc_request_s_validate',
					tc_azp_gsc_request." . d_azp_gsc_request_s_web_service . " AS 'lbl_azp_gsc_request_s_web_service',
					tc_azp_gsc_request." . d_azp_gsc_request_t_city . " AS 'lbl_azp_gsc_request_t_city',
					tc_azp_gsc_request." . d_azp_gsc_request_t_date_associate . " AS 'lbl_azp_gsc_request_t_date_associate',
					tc_azp_gsc_request." . d_azp_gsc_request_t_death_date . " AS 'lbl_azp_gsc_request_t_death_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_full_name . " AS 'lbl_azp_gsc_request_t_full_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_id_supplier . " AS 'lbl_azp_gsc_request_t_id_supplier',
					tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " AS 'lbl_azp_gsc_request_t_identification',
					tc_azp_gsc_request." . d_azp_gsc_request_t_notary . " AS 'lbl_azp_gsc_request_t_notary',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_consecutive . " AS 'lbl_azp_gsc_request_t_number_consecutive',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_obligation . " AS 'lbl_azp_gsc_request_t_number_obligation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation . " AS 'lbl_azp_gsc_request_t_observation',
					tc_azp_gsc_request." . d_azp_gsc_request_t_observation_outer . " AS 'lbl_azp_gsc_request_t_observation_outer',
					tc_azp_gsc_request." . d_azp_gsc_request_t_reported_bank . " AS 'lbl_azp_gsc_request_t_reported_bank',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_by . " AS 'lbl_azp_gsc_request_t_request_by',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_state . " AS 'lbl_azp_gsc_request_t_request_state',
					tc_azp_gsc_request." . d_azp_gsc_request_t_serial . " AS 'lbl_azp_gsc_request_t_serial',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " AS 'lbl_azp_gsc_request_t_shipping_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_number . " AS 'lbl_azp_gsc_request_t_shipping_number',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_date . " AS 'lbl_azp_gsc_request_t_supplier_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_supplier_request_number . " AS 'lbl_azp_gsc_request_t_supplier_request_number',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_causal',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_client',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_expiration . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_expiration',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_phase . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_phase',
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " AS 'lbl_azp_gsc_request_v_id_azp_gsc_state',
					tc_azp_gsc_client." . d_azp_gsc_client_t_name . " AS 'lbl_azp_gsc_client_t_name'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "
				
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_m_deleted . " = '1'
					AND tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . " = '" . $var_client . "'
				GROUP BY tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_causal_s() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_gsc_request, d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_number = $key_sql[d_azp_gsc_request_t_number_request]; endforeach; } else { $var_number = '0'; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_number',
					tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_state',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") AS 'lbl_count',
					CONCAT(ROUND((COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") / (
						SELECT COUNT(*) FROM " . t_azp_gsc_request . " tc_azp_gsc_request
						WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_number . "'
					) * 100),0), '%') AS 'lbl_percentage'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_number . "'
				GROUP BY tc_azp_gsc_request."  . d_azp_gsc_request_v_id_azp_gsc_state . " ASC
				ORDER BY tc_azp_gsc_state." . d_azp_gsc_state_t_name . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_causal_i() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_gsc_request, d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_number = $key_sql[d_azp_gsc_request_t_number_request]; endforeach; } else { $var_number = '0'; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_number',
					tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_state',
					tc_azp_gsc_causal." . d_azp_gsc_causal_t_name . " AS 'lbl_causal',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") AS 'lbl_count',
					CONCAT(ROUND((COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") / (
						SELECT COUNT(*) FROM " . t_azp_gsc_request . " tc_azp_gsc_request
						WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_number . "'
					) * 100),0), '%') AS 'lbl_percentage'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request
				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
					
				INNER JOIN " . t_azp_gsc_causal . " tc_azp_gsc_causal
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " = tc_azp_gsc_causal." . d_azp_gsc_causal_id_azp_gsc_causal . "
					
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_number . "'
				GROUP BY tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " ASC
				ORDER BY tc_azp_gsc_state." . d_azp_gsc_state_t_name . " ASC,
					tc_azp_gsc_causal." . d_azp_gsc_causal_t_name . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_causal_dt_s() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_number',
					tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_state',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") AS 'lbl_count',
					CONCAT(ROUND((COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") / (
						SELECT COUNT(*) FROM " . t_azp_gsc_request . " tc_azp_gsc_request
						WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					) * 100),0), '%') AS 'lbl_percentage'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
						= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'

				GROUP BY tc_azp_gsc_request."  . d_azp_gsc_request_v_id_azp_gsc_state . " ASC

				ORDER BY tc_azp_gsc_state." . d_azp_gsc_state_t_name . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_causal_dt_i() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_number',
					-- tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_state',
					tc_azp_gsc_causal." . d_azp_gsc_causal_t_name . " AS 'lbl_causal',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") AS 'lbl_count',
					CONCAT(ROUND((COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") / (
						SELECT COUNT(*) FROM " . t_azp_gsc_request . " tc_azp_gsc_request
						WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					) * 100),0), '%') AS 'lbl_percentage'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
						= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
					
				INNER JOIN " . t_azp_gsc_causal . " tc_azp_gsc_causal
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . "
					= tc_azp_gsc_causal." . d_azp_gsc_causal_id_azp_gsc_causal . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					AND tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . " = '3'

				GROUP BY tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_causal . " ASC

				ORDER BY tc_azp_gsc_state." . d_azp_gsc_state_t_name . " ASC,
					tc_azp_gsc_causal." . d_azp_gsc_causal_t_name . " ASC
			");
		}









		# Query Sql Select
		final public function sql_tc_ibn_control_viability_graphic() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
				$var_state = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'";
			} else { $var_code = ''; $var_state = ''; }


			if ($this->id == '' || $this->id == 0) {
				$var_control = "";
				$var_since = "WHERE (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $_GET['date_since'] . "'";
				$var_until = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $_GET['date_until'] . "')";
			} else {
				$var_control = "WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_since = ""; $var_until = "";
			}
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_name',
					COUNT(tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . ") AS 'lbl_count'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				" . $var_control . " " . $var_since . " " . $var_until . " " . $var_code . " " . $var_state . "
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . "
			");
		}

		# Query Sql Select
		final public function sql_tc_ibn_control_posession_graphic() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_application . " = '6' AND " . d_azp_user_v_id_azp_role . " = '16'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key_sql): $var_ibn_client = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach;
				# Asignar nuevos valores a la sentencia sql o query
				$var_code = "AND tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_fct_client . " = '" . $var_ibn_client . "'";
				$var_state = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " = 'ARCHIVADO'";
			} else { $var_code = ''; $var_state = ''; }


			if ($this->id == '' || $this->id == 0) {
				$var_camera = ""; $var_furniture = ""; $var_property = ""; $var_vehicle = ""; $var_warranty = "";
				$var_since = "WHERE (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $_GET['date_since'] . "'";
				$var_until = "AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $_GET['date_until'] . "')";
			} else {
				$var_camera = "WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_furniture = "WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_property = "WHERE tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_vehicle = "WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_warranty = "WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'";
				$var_since = ""; $var_until = "";
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				" . $var_camera . " " . $var_since . " " . $var_until . "
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					if ($this->id == '' || $this->id == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_camera => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_deleted . " = '1'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_camera => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				" . $var_furniture . " " . $var_since . " " . $var_until . "
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					if ($this->id == '' || $this->id == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_furniture => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_deleted . " = '1'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_furniture => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				" . $var_property . " " . $var_since . " " . $var_until . "
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					if ($this->id == '' || $this->id == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_property => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_deleted . " = '1'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_property => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				" . $var_vehicle . " " . $var_since . " " . $var_until . "
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					if ($this->id == '' || $this->id == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_vehicle => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_deleted . " = '1'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_vehicle => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			//$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			$var_sql = $this->db->query("
				SELECT COUNT(*) AS 'lbl_count' FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				" . $var_warranty . " " . $var_since . " " . $var_until . "
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					if ($this->id == '' || $this->id == 0) {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_warranty => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_m_deleted . " = '1'");
					} else {
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_control_panel_t_count_warranty => strtoupper($value['lbl_count']),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			if ($this->id == '' || $this->id == 0) {
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_camera',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_furniture',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_property',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_vehicle',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_warranty'
					FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel

					INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
						ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
							 = tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "

					WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1' " . $var_code . " " . $var_state . "
					LIMIT 1
				");
			} else {
				# Seleccionar los registros de la tabla
				return $this->db->query("
					SELECT
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_camera',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_furniture',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_property',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_vehicle',
						tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_warranty'
					FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel

					INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
						ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
							 = tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "

					WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
						AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1' " . $var_code . " " . $var_state . "
				");
			}
		}

		# Query Sql Select
		final public function sql_tc_ibn_report_gantt() {
			# Query Sql Truncate: Vaciar los registros de la tabla
			$this->db->query("DELETE FROM " . t_azp_ibn_report_gantt);
			# Query Sql Truncate: Vaciar los registros de la tabla
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_gantt . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_azp_ibn_control_panel_t_count_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_azp_ibn_control_panel_t_count_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_azp_ibn_control_panel_t_count_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_azp_ibn_control_panel_t_count_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_azp_ibn_control_panel_t_count_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $_GET['field_since'] . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $_GET['field_until'] . "')
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_date_general = $value['lbl_azp_ibn_control_panel_t_date_general'];
					$var_date_reply = $value['lbl_azp_ibn_control_panel_t_date_reply'];
					#-------------------------------------------------------------------------#
					$var_date_one = new DateTime($var_date_arrival);
					$var_date_two = new DateTime($var_date_reply);
					$var_date_dif = $var_date_one->diff($var_date_two);
					$var_date_day = $var_date_dif->days + 1;
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_gantt_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_date_created => DATE_HOUR,
						d_azp_ibn_report_gantt_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_gantt_m_deleted => '1',
						d_azp_ibn_report_gantt_m_description => '',
						d_azp_ibn_report_gantt_m_level => '2',
						d_azp_ibn_report_gantt_m_status => '1',
						d_azp_ibn_report_gantt_m_temp => '1',

						d_azp_ibn_report_gantt_t_campaign => $value['lbl_azp_ibn_client_t_name'],
						d_azp_ibn_report_gantt_t_request => $value['lbl_azp_ibn_control_panel_t_code_research'],

						d_azp_ibn_report_gantt_t_date_arrival => $value['lbl_azp_ibn_control_panel_t_date_arrival'],
						d_azp_ibn_report_gantt_t_date_general => $value['lbl_azp_ibn_control_panel_t_date_general'],
						d_azp_ibn_report_gantt_t_date_reply => $value['lbl_azp_ibn_control_panel_t_date_reply'],
						d_azp_ibn_report_gantt_t_percentaje => '1',
						d_azp_ibn_report_gantt_t_plan_duration => $value['lbl_azp_ibn_client_t_days'],
						d_azp_ibn_report_gantt_t_plan_start => '',
						d_azp_ibn_report_gantt_t_real_duration => '',
						d_azp_ibn_report_gantt_t_real_start => '',
						d_azp_ibn_report_gantt_t_sum_days => $var_date_day,
						d_azp_ibn_report_gantt_t_day_01 => '',
						d_azp_ibn_report_gantt_t_day_02 => '',
						d_azp_ibn_report_gantt_t_day_03 => '',
						d_azp_ibn_report_gantt_t_day_04 => '',
						d_azp_ibn_report_gantt_t_day_05 => '',
						d_azp_ibn_report_gantt_t_day_06 => '',
						d_azp_ibn_report_gantt_t_day_07 => '',
						d_azp_ibn_report_gantt_t_day_08 => '',
						d_azp_ibn_report_gantt_t_day_09 => '',
						d_azp_ibn_report_gantt_t_day_10 => '',
						d_azp_ibn_report_gantt_t_day_11 => '',
						d_azp_ibn_report_gantt_t_day_12 => '',
						d_azp_ibn_report_gantt_t_day_13 => '',
						d_azp_ibn_report_gantt_t_day_14 => '',
						d_azp_ibn_report_gantt_t_day_15 => '',
						d_azp_ibn_report_gantt_t_day_16 => '',
						d_azp_ibn_report_gantt_t_day_17 => '',
						d_azp_ibn_report_gantt_t_day_18 => '',
						d_azp_ibn_report_gantt_t_day_19 => '',
						d_azp_ibn_report_gantt_t_day_20 => '',
						d_azp_ibn_report_gantt_t_day_21 => '',
						d_azp_ibn_report_gantt_t_day_22 => '',
						d_azp_ibn_report_gantt_t_day_23 => '',
						d_azp_ibn_report_gantt_t_day_24 => '',
						d_azp_ibn_report_gantt_t_day_25 => '',
						d_azp_ibn_report_gantt_t_day_26 => '',
						d_azp_ibn_report_gantt_t_day_27 => '',
						d_azp_ibn_report_gantt_t_day_28 => '',
						d_azp_ibn_report_gantt_t_day_29 => '',
						d_azp_ibn_report_gantt_t_day_30 => '',
						d_azp_ibn_report_gantt_t_day_31 => '',
						d_azp_ibn_report_gantt_t_day_32 => '',
						d_azp_ibn_report_gantt_t_day_33 => '',
						d_azp_ibn_report_gantt_t_day_34 => '',
						d_azp_ibn_report_gantt_t_day_35 => '',
						d_azp_ibn_report_gantt_t_day_36 => '',
						d_azp_ibn_report_gantt_t_day_37 => '',
						d_azp_ibn_report_gantt_t_day_38 => '',
						d_azp_ibn_report_gantt_t_day_39 => '',
						d_azp_ibn_report_gantt_t_day_40 => '',
						d_azp_ibn_report_gantt_t_day_41 => '',
						d_azp_ibn_report_gantt_t_day_42 => '',
						d_azp_ibn_report_gantt_t_day_43 => '',
						d_azp_ibn_report_gantt_t_day_44 => '',
						d_azp_ibn_report_gantt_t_day_45 => '',
						d_azp_ibn_report_gantt_t_day_46 => '',
						d_azp_ibn_report_gantt_t_day_47 => '',
						d_azp_ibn_report_gantt_t_day_48 => '',
						d_azp_ibn_report_gantt_t_day_49 => '',
						d_azp_ibn_report_gantt_t_day_50 => '',
						d_azp_ibn_report_gantt_t_day_51 => '',
						d_azp_ibn_report_gantt_t_day_52 => '',
						d_azp_ibn_report_gantt_t_day_53 => '',
						d_azp_ibn_report_gantt_t_day_54 => '',
						d_azp_ibn_report_gantt_t_day_55 => '',
						d_azp_ibn_report_gantt_t_day_56 => '',
						d_azp_ibn_report_gantt_t_day_57 => '',
						d_azp_ibn_report_gantt_t_day_58 => '',
						d_azp_ibn_report_gantt_t_day_59 => '',
						d_azp_ibn_report_gantt_t_day_60 => '',
						d_azp_ibn_report_gantt_v_id_azp_ibn_control => $value['lbl_azp_ibn_control_panel_id_azp_ibn_control_panel'],
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_gantt, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_azp_ibn_control_panel_t_count_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_azp_ibn_control_panel_t_count_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_azp_ibn_control_panel_t_count_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_azp_ibn_control_panel_t_count_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_azp_ibn_control_panel_t_count_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $_GET['field_since'] . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $_GET['field_until'] . "')
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_date_general = $value['lbl_azp_ibn_control_panel_t_date_general'];
					$var_date_reply = $value['lbl_azp_ibn_control_panel_t_date_reply'];
					#-------------------------------------------------------------------------#
					$var_date_one = new DateTime($var_date_arrival);
					$var_date_two = new DateTime($var_date_reply);
					$var_date_dif = $var_date_one->diff($var_date_two);
					$var_date_day = $var_date_dif->days + 1;
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_gantt_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_date_created => DATE_HOUR,
						d_azp_ibn_report_gantt_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_gantt_m_deleted => '1',
						d_azp_ibn_report_gantt_m_description => '',
						d_azp_ibn_report_gantt_m_level => '2',
						d_azp_ibn_report_gantt_m_status => '1',
						d_azp_ibn_report_gantt_m_temp => '1',

						d_azp_ibn_report_gantt_t_campaign => '',
						d_azp_ibn_report_gantt_t_request => '',

						d_azp_ibn_report_gantt_t_date_arrival => '',
						d_azp_ibn_report_gantt_t_date_general => '',
						d_azp_ibn_report_gantt_t_date_reply => '',
						d_azp_ibn_report_gantt_t_percentaje => '2',
						d_azp_ibn_report_gantt_t_plan_duration => $value['lbl_azp_ibn_client_t_days'],
						d_azp_ibn_report_gantt_t_plan_start => '',
						d_azp_ibn_report_gantt_t_real_duration => '',
						d_azp_ibn_report_gantt_t_real_start => '',
						d_azp_ibn_report_gantt_t_sum_days => $var_date_day,
						d_azp_ibn_report_gantt_t_day_01 => '',
						d_azp_ibn_report_gantt_t_day_02 => '',
						d_azp_ibn_report_gantt_t_day_03 => '',
						d_azp_ibn_report_gantt_t_day_04 => '',
						d_azp_ibn_report_gantt_t_day_05 => '',
						d_azp_ibn_report_gantt_t_day_06 => '',
						d_azp_ibn_report_gantt_t_day_07 => '',
						d_azp_ibn_report_gantt_t_day_08 => '',
						d_azp_ibn_report_gantt_t_day_09 => '',
						d_azp_ibn_report_gantt_t_day_10 => '',
						d_azp_ibn_report_gantt_t_day_11 => '',
						d_azp_ibn_report_gantt_t_day_12 => '',
						d_azp_ibn_report_gantt_t_day_13 => '',
						d_azp_ibn_report_gantt_t_day_14 => '',
						d_azp_ibn_report_gantt_t_day_15 => '',
						d_azp_ibn_report_gantt_t_day_16 => '',
						d_azp_ibn_report_gantt_t_day_17 => '',
						d_azp_ibn_report_gantt_t_day_18 => '',
						d_azp_ibn_report_gantt_t_day_19 => '',
						d_azp_ibn_report_gantt_t_day_20 => '',
						d_azp_ibn_report_gantt_t_day_21 => '',
						d_azp_ibn_report_gantt_t_day_22 => '',
						d_azp_ibn_report_gantt_t_day_23 => '',
						d_azp_ibn_report_gantt_t_day_24 => '',
						d_azp_ibn_report_gantt_t_day_25 => '',
						d_azp_ibn_report_gantt_t_day_26 => '',
						d_azp_ibn_report_gantt_t_day_27 => '',
						d_azp_ibn_report_gantt_t_day_28 => '',
						d_azp_ibn_report_gantt_t_day_29 => '',
						d_azp_ibn_report_gantt_t_day_30 => '',
						d_azp_ibn_report_gantt_t_day_31 => '',
						d_azp_ibn_report_gantt_t_day_32 => '',
						d_azp_ibn_report_gantt_t_day_33 => '',
						d_azp_ibn_report_gantt_t_day_34 => '',
						d_azp_ibn_report_gantt_t_day_35 => '',
						d_azp_ibn_report_gantt_t_day_36 => '',
						d_azp_ibn_report_gantt_t_day_37 => '',
						d_azp_ibn_report_gantt_t_day_38 => '',
						d_azp_ibn_report_gantt_t_day_39 => '',
						d_azp_ibn_report_gantt_t_day_40 => '',
						d_azp_ibn_report_gantt_t_day_41 => '',
						d_azp_ibn_report_gantt_t_day_42 => '',
						d_azp_ibn_report_gantt_t_day_43 => '',
						d_azp_ibn_report_gantt_t_day_44 => '',
						d_azp_ibn_report_gantt_t_day_45 => '',
						d_azp_ibn_report_gantt_t_day_46 => '',
						d_azp_ibn_report_gantt_t_day_47 => '',
						d_azp_ibn_report_gantt_t_day_48 => '',
						d_azp_ibn_report_gantt_t_day_49 => '',
						d_azp_ibn_report_gantt_t_day_50 => '',
						d_azp_ibn_report_gantt_t_day_51 => '',
						d_azp_ibn_report_gantt_t_day_52 => '',
						d_azp_ibn_report_gantt_t_day_53 => '',
						d_azp_ibn_report_gantt_t_day_54 => '',
						d_azp_ibn_report_gantt_t_day_55 => '',
						d_azp_ibn_report_gantt_t_day_56 => '',
						d_azp_ibn_report_gantt_t_day_57 => '',
						d_azp_ibn_report_gantt_t_day_58 => '',
						d_azp_ibn_report_gantt_t_day_59 => '',
						d_azp_ibn_report_gantt_t_day_60 => '',
						d_azp_ibn_report_gantt_v_id_azp_ibn_control => $value['lbl_azp_ibn_control_panel_id_azp_ibn_control_panel'],
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_gantt, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_date_arrival = $value[d_azp_ibn_report_gantt_t_date_arrival];
					$var_date_general = $value[d_azp_ibn_report_gantt_t_date_general];
					$var_date_reply = $value[d_azp_ibn_report_gantt_t_date_reply];
					#-------------------------------------------------------------------------#
					$var_date_one = new DateTime($var_date_arrival);
					$var_date_two = new DateTime($var_date_reply);
					$var_date_dif = $var_date_one->diff($var_date_two);
					$var_date_day = $var_date_dif->days + 1;
					#-------------------------------------------------------------------------#
					# Control para ejecutar dicha cantidad de veces un ciclo
					for ($var_date = 1; $var_date <= $var_date_day; $var_date++) {
						$var_pad = str_pad($var_date, 2, "0", STR_PAD_LEFT);
						# Asignacion de valores a nuevas variables
						$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];

						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_pad => $var_date,);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "' AND " . d_azp_ibn_report_gantt_t_percentaje . " = '1'");

						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_pad => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "' AND " . d_azp_ibn_report_gantt_t_percentaje . " = '2'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt, d_azp_ibn_report_gantt_t_percentaje . " = '1'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_date_arrival = $value[d_azp_ibn_report_gantt_t_date_arrival];
					$var_date_general = $value[d_azp_ibn_report_gantt_t_date_general];
					$var_date_reply = $value[d_azp_ibn_report_gantt_t_date_reply];
					#-------------------------------------------------------------------------#
					if ($var_date_general != '') {
						$var_green_one = new DateTime($var_date_arrival);
						$var_green_two = new DateTime($var_date_general);
						$var_green_dif = $var_green_one->diff($var_green_two);
						$var_green_day = $var_green_dif->days + 1;
					} else { $var_green_day = 0; }
					#-------------------------------------------------------------------------#
					$var_sql_t = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_report_gantt, d_azp_ibn_report_gantt_t_percentaje . " = '1'");
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (true == $var_sql_t) { foreach ($var_sql_t as $key_t => $value_t): $var_cd = $value_t['lbl_count']; endforeach; } else { $var_cd = 0; }
					$var_sd = $var_id + $var_cd;
					#-------------------------------------------------------------------------#
					$var_day_01 = $value[d_azp_ibn_report_gantt_t_day_01];
					$var_day_02 = $value[d_azp_ibn_report_gantt_t_day_02];
					$var_day_03 = $value[d_azp_ibn_report_gantt_t_day_03];
					$var_day_04 = $value[d_azp_ibn_report_gantt_t_day_04];
					$var_day_05 = $value[d_azp_ibn_report_gantt_t_day_05];
					$var_day_06 = $value[d_azp_ibn_report_gantt_t_day_06];
					$var_day_07 = $value[d_azp_ibn_report_gantt_t_day_07];
					$var_day_08 = $value[d_azp_ibn_report_gantt_t_day_08];
					$var_day_09 = $value[d_azp_ibn_report_gantt_t_day_09];
					$var_day_10 = $value[d_azp_ibn_report_gantt_t_day_10];
					$var_day_11 = $value[d_azp_ibn_report_gantt_t_day_11];
					$var_day_12 = $value[d_azp_ibn_report_gantt_t_day_12];
					$var_day_13 = $value[d_azp_ibn_report_gantt_t_day_13];
					$var_day_14 = $value[d_azp_ibn_report_gantt_t_day_14];
					$var_day_15 = $value[d_azp_ibn_report_gantt_t_day_15];
					$var_day_16 = $value[d_azp_ibn_report_gantt_t_day_16];
					$var_day_17 = $value[d_azp_ibn_report_gantt_t_day_17];
					$var_day_18 = $value[d_azp_ibn_report_gantt_t_day_18];
					$var_day_19 = $value[d_azp_ibn_report_gantt_t_day_19];
					$var_day_20 = $value[d_azp_ibn_report_gantt_t_day_20];
					$var_day_21 = $value[d_azp_ibn_report_gantt_t_day_21];
					$var_day_22 = $value[d_azp_ibn_report_gantt_t_day_22];
					$var_day_23 = $value[d_azp_ibn_report_gantt_t_day_23];
					$var_day_24 = $value[d_azp_ibn_report_gantt_t_day_24];
					$var_day_25 = $value[d_azp_ibn_report_gantt_t_day_25];
					$var_day_26 = $value[d_azp_ibn_report_gantt_t_day_26];
					$var_day_27 = $value[d_azp_ibn_report_gantt_t_day_27];
					$var_day_28 = $value[d_azp_ibn_report_gantt_t_day_28];
					$var_day_29 = $value[d_azp_ibn_report_gantt_t_day_29];
					$var_day_30 = $value[d_azp_ibn_report_gantt_t_day_30];
					$var_day_31 = $value[d_azp_ibn_report_gantt_t_day_31];
					$var_day_32 = $value[d_azp_ibn_report_gantt_t_day_32];
					$var_day_33 = $value[d_azp_ibn_report_gantt_t_day_33];
					$var_day_34 = $value[d_azp_ibn_report_gantt_t_day_34];
					$var_day_35 = $value[d_azp_ibn_report_gantt_t_day_35];
					$var_day_36 = $value[d_azp_ibn_report_gantt_t_day_36];
					$var_day_37 = $value[d_azp_ibn_report_gantt_t_day_37];
					$var_day_38 = $value[d_azp_ibn_report_gantt_t_day_38];
					$var_day_39 = $value[d_azp_ibn_report_gantt_t_day_39];
					$var_day_40 = $value[d_azp_ibn_report_gantt_t_day_40];
					$var_day_41 = $value[d_azp_ibn_report_gantt_t_day_41];
					$var_day_42 = $value[d_azp_ibn_report_gantt_t_day_42];
					$var_day_43 = $value[d_azp_ibn_report_gantt_t_day_43];
					$var_day_44 = $value[d_azp_ibn_report_gantt_t_day_44];
					$var_day_45 = $value[d_azp_ibn_report_gantt_t_day_45];
					$var_day_46 = $value[d_azp_ibn_report_gantt_t_day_46];
					$var_day_47 = $value[d_azp_ibn_report_gantt_t_day_47];
					$var_day_48 = $value[d_azp_ibn_report_gantt_t_day_48];
					$var_day_49 = $value[d_azp_ibn_report_gantt_t_day_49];
					$var_day_50 = $value[d_azp_ibn_report_gantt_t_day_50];
					$var_day_51 = $value[d_azp_ibn_report_gantt_t_day_51];
					$var_day_52 = $value[d_azp_ibn_report_gantt_t_day_52];
					$var_day_53 = $value[d_azp_ibn_report_gantt_t_day_53];
					$var_day_54 = $value[d_azp_ibn_report_gantt_t_day_54];
					$var_day_55 = $value[d_azp_ibn_report_gantt_t_day_55];
					$var_day_56 = $value[d_azp_ibn_report_gantt_t_day_56];
					$var_day_57 = $value[d_azp_ibn_report_gantt_t_day_57];
					$var_day_58 = $value[d_azp_ibn_report_gantt_t_day_58];
					$var_day_59 = $value[d_azp_ibn_report_gantt_t_day_59];
					$var_day_60 = $value[d_azp_ibn_report_gantt_t_day_60];
					#-------------------------------------------------------------------------#
					$var_max_day = max(
						$var_day_01, $var_day_02, $var_day_03, $var_day_04, $var_day_05, $var_day_06, $var_day_07, $var_day_08, $var_day_09, $var_day_10,
						$var_day_11, $var_day_12, $var_day_13, $var_day_14, $var_day_15, $var_day_16, $var_day_17, $var_day_18, $var_day_19, $var_day_20,
						$var_day_21, $var_day_22, $var_day_23, $var_day_24, $var_day_25, $var_day_26, $var_day_27, $var_day_28, $var_day_29, $var_day_30,
						$var_day_31, $var_day_32, $var_day_33, $var_day_34, $var_day_35, $var_day_36, $var_day_37, $var_day_38, $var_day_39, $var_day_40,
						$var_day_41, $var_day_42, $var_day_43, $var_day_44, $var_day_45, $var_day_46, $var_day_47, $var_day_48, $var_day_49, $var_day_50,
						$var_day_51, $var_day_52, $var_day_53, $var_day_54, $var_day_55, $var_day_56, $var_day_57, $var_day_58, $var_day_59, $var_day_60,
					);
					$var_max_pad = str_pad($var_max_day, 2, "0", STR_PAD_LEFT);
					#-------------------------------------------------------------------------#
					# Control para ejecutar dicha cantidad de veces un ciclo
					for ($var_date = 1; $var_date <= 60; $var_date++) {
						$var_upd = str_pad($var_date, 2, "0", STR_PAD_LEFT);
						# Asignacion de valores a nuevas variables
						$var_dd = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_upd => '',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_dd . "'");
					}
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_day_01 => '' . date_format(date_create($var_date_arrival), 'd-M'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array('t_day_' . $var_max_pad => '' . date_format(date_create($var_date_reply), 'd-M'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					#-------------------------------------------------------------------------#
					# Control para ejecutar dicha cantidad de veces un ciclo
					for ($var_green_for = 1; $var_green_for <= $var_green_day; $var_green_for++) {
						$var_green_upd = str_pad($var_green_for, 2, "0", STR_PAD_LEFT);
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_green_upd => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
					}
					#-------------------------------------------------------------------------#
					if ($var_date_general > $var_date_reply) {
						$var_red_one = new DateTime($var_date_arrival);
						$var_red_two = new DateTime($var_date_reply);
						$var_red_dif = $var_red_one->diff($var_red_two);
						$var_red_day = $var_red_dif->days + 2;
						#-------------------------------------------------------------------------#
						$var_red_d_one = new DateTime($var_date_arrival);
						$var_red_d_two = new DateTime($var_date_general);
						$var_red_d_dif = $var_red_d_one->diff($var_red_d_two);
						$var_red_d_day = $var_red_d_dif->days + 1;
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . str_pad($var_red_d_day, 2, "0", STR_PAD_LEFT) => '' . date_format(date_create($var_date_general), 'd-M'),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
						#-------------------------------------------------------------------------#
						# Control para ejecutar dicha cantidad de veces un ciclo
						for ($var_red_for = $var_red_day; $var_red_for <= $var_red_d_day; $var_red_for++) {
							$var_red_upd = str_pad($var_red_for, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_red_upd => '2',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
						}
					}
					#-------------------------------------------------------------------------#
					if ($var_date_general < $var_date_reply && $var_date_general != '') {
						$var_red_one = new DateTime($var_date_arrival);
						$var_red_two = new DateTime($var_date_reply);
						$var_red_dif = $var_red_one->diff($var_red_two);
						$var_red_day = $var_red_dif->days + 1;
						#-------------------------------------------------------------------------#
						$var_red_d_one = new DateTime($var_date_arrival);
						$var_red_d_two = new DateTime($var_date_general);
						$var_red_d_dif = $var_red_d_one->diff($var_red_d_two);
						$var_red_d_day = $var_red_d_dif->days + 2;
						$var_red_a_day = $var_red_d_dif->days + 1;
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . str_pad($var_red_a_day, 2, "0", STR_PAD_LEFT) => '' . date_format(date_create($var_date_general), 'd-M'),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
						#-------------------------------------------------------------------------#
						# Control para ejecutar dicha cantidad de veces un ciclo
						for ($var_red_max_for = $var_red_d_day; $var_red_max_for <= $var_red_day; $var_red_max_for++) {
							$var_red_max_upd = str_pad($var_red_max_for, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_red_max_upd => '3',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
						}
					}
					#-------------------------------------------------------------------------#
					if ($var_date_general == '') {
						$var_red_one = new DateTime($var_date_arrival);
						$var_red_two = new DateTime($var_date_reply);
						$var_red_dif = $var_red_one->diff($var_red_two);
						$var_red_day = $var_red_dif->days + 2;
						#-------------------------------------------------------------------------#
						$var_red_d_one = new DateTime($var_date_arrival);
						$var_red_d_two = new DateTime($var_date_general);
						$var_red_d_dif = $var_red_d_one->diff($var_red_d_two);
						$var_red_d_day = $var_red_d_dif->days + 1;
						#-------------------------------------------------------------------------#
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . str_pad($var_red_d_day, 2, "0", STR_PAD_LEFT) => '' . date_format(date_create($var_date_general), 'd-M'),);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
						#-------------------------------------------------------------------------#
						# Control para ejecutar dicha cantidad de veces un ciclo
						for ($var_red_for = 1; $var_red_for <= $var_red_d_day; $var_red_for++) {
							$var_red_upd = str_pad($var_red_for, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_red_upd => '3',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
						}
						#-------------------------------------------------------------------------#
						# Control para ejecutar dicha cantidad de veces un ciclo
						for ($var_red_for = 1; $var_red_for <= $var_red_d_day; $var_red_for++) {
							$var_red_upd = str_pad($var_red_for, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_red_upd => '1',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
						}
						#-------------------------------------------------------------------------#
						# Control para ejecutar dicha cantidad de veces un ciclo
						for ($var_red_for = $var_red_day; $var_red_for <= $var_red_d_day; $var_red_for++) {
							$var_red_upd = str_pad($var_red_for, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_red_upd => '2',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_sd . "'");
						}
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " AS 'lbl_azp_ibn_report_gantt_id_azp_ibn_report_gantt',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_date_created . " AS 'lbl_azp_ibn_report_gantt_m_date_created',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_date_modified . " AS 'lbl_azp_ibn_report_gantt_m_date_modified',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_description . " AS 'lbl_azp_ibn_report_gantt_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',

					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_campaign . " AS 'lbl_azp_ibn_report_gantt_t_campaign',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_request . " AS 'lbl_azp_ibn_report_gantt_t_request',
					
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_arrival . " AS 'lbl_azp_ibn_report_gantt_t_date_arrival',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_general . " AS 'lbl_azp_ibn_report_gantt_t_date_general',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_reply . " AS 'lbl_azp_ibn_report_gantt_t_date_reply',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_percentaje . " AS 'lbl_azp_ibn_report_gantt_t_percentaje',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_plan_duration . " AS 'lbl_azp_ibn_report_gantt_t_plan_duration',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_plan_start . " AS 'lbl_azp_ibn_report_gantt_t_plan_start',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_real_duration . " AS 'lbl_azp_ibn_report_gantt_t_real_duration',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_real_start . " AS 'lbl_azp_ibn_report_gantt_t_real_start',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_sum_days . " AS 'lbl_azp_ibn_report_gantt_t_sum_days',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_01 . " AS 'lbl_azp_ibn_report_gantt_t_day_01',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_02 . " AS 'lbl_azp_ibn_report_gantt_t_day_02',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_03 . " AS 'lbl_azp_ibn_report_gantt_t_day_03',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_04 . " AS 'lbl_azp_ibn_report_gantt_t_day_04',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_05 . " AS 'lbl_azp_ibn_report_gantt_t_day_05',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_06 . " AS 'lbl_azp_ibn_report_gantt_t_day_06',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_07 . " AS 'lbl_azp_ibn_report_gantt_t_day_07',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_08 . " AS 'lbl_azp_ibn_report_gantt_t_day_08',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_09 . " AS 'lbl_azp_ibn_report_gantt_t_day_09',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_10 . " AS 'lbl_azp_ibn_report_gantt_t_day_10',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_11 . " AS 'lbl_azp_ibn_report_gantt_t_day_11',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_12 . " AS 'lbl_azp_ibn_report_gantt_t_day_12',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_13 . " AS 'lbl_azp_ibn_report_gantt_t_day_13',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_14 . " AS 'lbl_azp_ibn_report_gantt_t_day_14',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_15 . " AS 'lbl_azp_ibn_report_gantt_t_day_15',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_16 . " AS 'lbl_azp_ibn_report_gantt_t_day_16',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_17 . " AS 'lbl_azp_ibn_report_gantt_t_day_17',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_18 . " AS 'lbl_azp_ibn_report_gantt_t_day_18',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_19 . " AS 'lbl_azp_ibn_report_gantt_t_day_19',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_20 . " AS 'lbl_azp_ibn_report_gantt_t_day_20',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_21 . " AS 'lbl_azp_ibn_report_gantt_t_day_21',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_22 . " AS 'lbl_azp_ibn_report_gantt_t_day_22',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_23 . " AS 'lbl_azp_ibn_report_gantt_t_day_23',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_24 . " AS 'lbl_azp_ibn_report_gantt_t_day_24',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_25 . " AS 'lbl_azp_ibn_report_gantt_t_day_25',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_26 . " AS 'lbl_azp_ibn_report_gantt_t_day_26',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_27 . " AS 'lbl_azp_ibn_report_gantt_t_day_27',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_28 . " AS 'lbl_azp_ibn_report_gantt_t_day_28',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_29 . " AS 'lbl_azp_ibn_report_gantt_t_day_29',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_30 . " AS 'lbl_azp_ibn_report_gantt_t_day_30',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_31 . " AS 'lbl_azp_ibn_report_gantt_t_day_31',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_32 . " AS 'lbl_azp_ibn_report_gantt_t_day_32',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_33 . " AS 'lbl_azp_ibn_report_gantt_t_day_33',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_34 . " AS 'lbl_azp_ibn_report_gantt_t_day_34',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_35 . " AS 'lbl_azp_ibn_report_gantt_t_day_35',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_36 . " AS 'lbl_azp_ibn_report_gantt_t_day_36',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_37 . " AS 'lbl_azp_ibn_report_gantt_t_day_37',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_38 . " AS 'lbl_azp_ibn_report_gantt_t_day_38',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_39 . " AS 'lbl_azp_ibn_report_gantt_t_day_39',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_40 . " AS 'lbl_azp_ibn_report_gantt_t_day_40',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_41 . " AS 'lbl_azp_ibn_report_gantt_t_day_41',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_42 . " AS 'lbl_azp_ibn_report_gantt_t_day_42',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_43 . " AS 'lbl_azp_ibn_report_gantt_t_day_43',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_44 . " AS 'lbl_azp_ibn_report_gantt_t_day_44',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_45 . " AS 'lbl_azp_ibn_report_gantt_t_day_45',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_46 . " AS 'lbl_azp_ibn_report_gantt_t_day_46',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_47 . " AS 'lbl_azp_ibn_report_gantt_t_day_47',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_48 . " AS 'lbl_azp_ibn_report_gantt_t_day_48',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_49 . " AS 'lbl_azp_ibn_report_gantt_t_day_49',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_50 . " AS 'lbl_azp_ibn_report_gantt_t_day_50',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_51 . " AS 'lbl_azp_ibn_report_gantt_t_day_51',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_52 . " AS 'lbl_azp_ibn_report_gantt_t_day_52',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_53 . " AS 'lbl_azp_ibn_report_gantt_t_day_53',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_54 . " AS 'lbl_azp_ibn_report_gantt_t_day_54',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_55 . " AS 'lbl_azp_ibn_report_gantt_t_day_55',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_56 . " AS 'lbl_azp_ibn_report_gantt_t_day_56',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_57 . " AS 'lbl_azp_ibn_report_gantt_t_day_57',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_58 . " AS 'lbl_azp_ibn_report_gantt_t_day_58',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_59 . " AS 'lbl_azp_ibn_report_gantt_t_day_59',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_60 . " AS 'lbl_azp_ibn_report_gantt_t_day_60',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_v_id_azp_ibn_control . " AS 'lbl_azp_ibn_report_gantt_v_id_azp_ibn_control',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_azp_ibn_control_panel_t_count_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_azp_ibn_control_panel_t_count_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_azp_ibn_control_panel_t_count_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_azp_ibn_control_panel_t_count_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_azp_ibn_control_panel_t_count_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_report_gantt . " tc_azp_ibn_report_gantt
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_v_id_azp_ibn_control . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_deleted . " = '1'
					AND (tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_percentaje . " = '1'
						OR tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_percentaje . " = '2')
			");
			exit();

			# Query Sql Truncate: Vaciar los registros de la tabla
			$this->db->query("DELETE FROM " . t_azp_ibn_report_gantt);
			# Query Sql Truncate: Vaciar los registros de la tabla
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_gantt . " AUTO_INCREMENT = 1");
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_azp_ibn_control_panel_t_count_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_azp_ibn_control_panel_t_count_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_azp_ibn_control_panel_t_count_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_azp_ibn_control_panel_t_count_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_azp_ibn_control_panel_t_count_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE (tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " >= '" . $_GET['field_since'] . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " <= '" . $_GET['field_until'] . "')
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_gantt_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_gantt_m_date_created => DATE_HOUR,
						d_azp_ibn_report_gantt_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_gantt_m_deleted => '1',
						d_azp_ibn_report_gantt_m_description => '',
						d_azp_ibn_report_gantt_m_level => '2',
						d_azp_ibn_report_gantt_m_status => '1',
						d_azp_ibn_report_gantt_m_temp => '1',
						d_azp_ibn_report_gantt_t_date_arrival => $value['lbl_azp_ibn_control_panel_t_date_arrival'],
						d_azp_ibn_report_gantt_t_date_general => $value['lbl_azp_ibn_control_panel_t_date_general'],
						d_azp_ibn_report_gantt_t_date_reply => $value['lbl_azp_ibn_control_panel_t_date_reply'],
						d_azp_ibn_report_gantt_t_percentaje => '100%',
						d_azp_ibn_report_gantt_t_plan_duration => $value['lbl_azp_ibn_client_t_days'],
						d_azp_ibn_report_gantt_t_plan_start => '',
						d_azp_ibn_report_gantt_t_real_duration => '',
						d_azp_ibn_report_gantt_t_real_start => '',
						d_azp_ibn_report_gantt_t_day_01 => '',
						d_azp_ibn_report_gantt_t_day_02 => '',
						d_azp_ibn_report_gantt_t_day_03 => '',
						d_azp_ibn_report_gantt_t_day_04 => '',
						d_azp_ibn_report_gantt_t_day_05 => '',
						d_azp_ibn_report_gantt_t_day_06 => '',
						d_azp_ibn_report_gantt_t_day_07 => '',
						d_azp_ibn_report_gantt_t_day_08 => '',
						d_azp_ibn_report_gantt_t_day_09 => '',
						d_azp_ibn_report_gantt_t_day_10 => '',
						d_azp_ibn_report_gantt_t_day_11 => '',
						d_azp_ibn_report_gantt_t_day_12 => '',
						d_azp_ibn_report_gantt_t_day_13 => '',
						d_azp_ibn_report_gantt_t_day_14 => '',
						d_azp_ibn_report_gantt_t_day_15 => '',
						d_azp_ibn_report_gantt_t_day_16 => '',
						d_azp_ibn_report_gantt_t_day_17 => '',
						d_azp_ibn_report_gantt_t_day_18 => '',
						d_azp_ibn_report_gantt_t_day_19 => '',
						d_azp_ibn_report_gantt_t_day_20 => '',
						d_azp_ibn_report_gantt_t_day_21 => '',
						d_azp_ibn_report_gantt_t_day_22 => '',
						d_azp_ibn_report_gantt_t_day_23 => '',
						d_azp_ibn_report_gantt_t_day_24 => '',
						d_azp_ibn_report_gantt_t_day_25 => '',
						d_azp_ibn_report_gantt_t_day_26 => '',
						d_azp_ibn_report_gantt_t_day_27 => '',
						d_azp_ibn_report_gantt_t_day_28 => '',
						d_azp_ibn_report_gantt_t_day_29 => '',
						d_azp_ibn_report_gantt_t_day_30 => '',
						d_azp_ibn_report_gantt_t_day_31 => '',
						d_azp_ibn_report_gantt_t_day_32 => '',
						d_azp_ibn_report_gantt_t_day_33 => '',
						d_azp_ibn_report_gantt_t_day_34 => '',
						d_azp_ibn_report_gantt_t_day_35 => '',
						d_azp_ibn_report_gantt_t_day_36 => '',
						d_azp_ibn_report_gantt_t_day_37 => '',
						d_azp_ibn_report_gantt_t_day_38 => '',
						d_azp_ibn_report_gantt_t_day_39 => '',
						d_azp_ibn_report_gantt_t_day_40 => '',
						d_azp_ibn_report_gantt_t_day_41 => '',
						d_azp_ibn_report_gantt_t_day_42 => '',
						d_azp_ibn_report_gantt_t_day_43 => '',
						d_azp_ibn_report_gantt_t_day_44 => '',
						d_azp_ibn_report_gantt_t_day_45 => '',
						d_azp_ibn_report_gantt_t_day_46 => '',
						d_azp_ibn_report_gantt_t_day_47 => '',
						d_azp_ibn_report_gantt_t_day_48 => '',
						d_azp_ibn_report_gantt_t_day_49 => '',
						d_azp_ibn_report_gantt_t_day_50 => '',
						d_azp_ibn_report_gantt_t_day_51 => '',
						d_azp_ibn_report_gantt_t_day_52 => '',
						d_azp_ibn_report_gantt_t_day_53 => '',
						d_azp_ibn_report_gantt_t_day_54 => '',
						d_azp_ibn_report_gantt_t_day_55 => '',
						d_azp_ibn_report_gantt_t_day_56 => '',
						d_azp_ibn_report_gantt_t_day_57 => '',
						d_azp_ibn_report_gantt_t_day_58 => '',
						d_azp_ibn_report_gantt_t_day_59 => '',
						d_azp_ibn_report_gantt_t_day_60 => '',
						d_azp_ibn_report_gantt_v_id_azp_ibn_control => $value['lbl_azp_ibn_control_panel_id_azp_ibn_control_panel'],
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_gantt, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt, d_azp_ibn_report_gantt_t_date_general . " = ''");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_percentaje => '0%',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_date = $value[d_azp_ibn_report_gantt_t_date_arrival];
					$var_arrival = date('l', strtotime($var_date));
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_day_weekly => $var_arrival,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_arrival = $value[d_azp_ibn_report_gantt_t_date_arrival];
					$var_weekly = $value[d_azp_ibn_report_gantt_t_day_weekly];
					# Control de validacion para cumpliar la condicion
					if ($var_weekly == 'Friday') { $var_start = '3'; } else if ($var_weekly == 'Saturday') { $var_start = '2'; } else if ($var_weekly == 'Sunday') { $var_start = '1'; } else { $var_start = '1'; }
					# Asignacion de valores a nuevas variables
					$var_substr = substr($var_arrival, -2);
					$var_plan_start = ((int)$var_substr + (int)$var_start);
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_plan_start => $var_plan_start,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_plan = $value[d_azp_ibn_report_gantt_t_plan_start];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_real_start => $var_plan,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_arrival = $value[d_azp_ibn_report_gantt_t_date_arrival];
					$var_general = $value[d_azp_ibn_report_gantt_t_date_general];
					#-------------------------------------------------------------------------#
					$var_date_one = new DateTime($var_arrival);
					$var_date_two = new DateTime($var_general);
					$var_diff = $var_date_one->diff($var_date_two);
					$var_diference = $var_diff->days;
					$var_days = $var_diff->days - 1;
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_real_duration => $var_diference,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					#-------------------------------------------------------------------------#
					$var_finsu = 0;
					for ($i = 0; $i <= $var_days; $i++) {
						$var_sepa = substr($var_arrival, -2) + $i;
						$var_rest = substr($var_arrival, 0, -2);
						$var_suma = date("Y-m-d", strtotime($var_rest . $var_sepa . "+ 1 days"));
						$var_finde = date('l', strtotime($var_suma));
						if ($var_finde == 'Saturday' || $var_finde == 'Sunday') { $var_finsu += $var_finva = 1; } else { $var_finsu += $var_finva = 0; }
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array(d_azp_ibn_report_gantt_t_sum_days => $var_finsu,);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_duration = $value[d_azp_ibn_report_gantt_t_real_duration];
					$var_sum_days = $value[d_azp_ibn_report_gantt_t_sum_days];
					$var_real = $var_duration - $var_sum_days;
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_gantt_t_real_duration => $var_real,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");			
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select("*", t_azp_ibn_report_gantt);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_gantt_id_azp_ibn_report_gantt];
					$var_plan_durat = $value[d_azp_ibn_report_gantt_t_plan_duration];
					$var_plan_start = $value[d_azp_ibn_report_gantt_t_plan_start];
					$var_real_durat = $value[d_azp_ibn_report_gantt_t_real_duration];
					$var_real_start = $value[d_azp_ibn_report_gantt_t_real_start];

					$var_real_end = $var_real_start + $var_real_durat;
					#-------------------------------------------------------------------------#
					for ($i = 0; $i < $var_plan_durat; $i++) { 
						$var_str = str_pad($var_real_start + $i, 2, "0", STR_PAD_LEFT);
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_str => '3',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					}
					#-------------------------------------------------------------------------#
					for ($i = 0; $i < $var_real_durat; $i++) { 
						$var_str = str_pad($var_real_start + $i, 2, "0", STR_PAD_LEFT);
						# Organizacion de los valores capturados y asignados a los campos a insertar
						$var_array = array('t_day_' . $var_str => '1',);
						# Insertar valores en la tabla segun estructura de la tabla
						$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
					}
					#-------------------------------------------------------------------------#
					if ($var_real_durat > $var_plan_durat) {
						for ($i = 0; $i <= $var_plan_durat; $i++) {
							//$var_rest = $var_real_durat - $var_plan_durat;
							$var_str = str_pad($var_real_start + $var_plan_durat + $i, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_str => '2',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
						}
						#-------------------------------------------------------------------------#
						$var_rest = $var_real_durat - $var_plan_durat;
						$var_start = $var_real_start + $var_plan_durat;
						$var_end = $var_start + $var_rest - 1;
						#-------------------------------------------------------------------------#
						for ($i = $var_start; $i <= $var_end; $i++) {
							//$var_rest = $var_real_durat - $var_plan_durat;
							$var_str = str_pad($i, 2, "0", STR_PAD_LEFT);
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_array = array('t_day_' . $var_str => '2',);
							# Insertar valores en la tabla segun estructura de la tabla
							$this->db->update(t_azp_ibn_report_gantt, $var_array, d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " = '" . $var_id . "'");
						}
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_id_azp_ibn_report_gantt . " AS 'lbl_azp_ibn_report_gantt_id_azp_ibn_report_gantt',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_date_created . " AS 'lbl_azp_ibn_report_gantt_m_date_created',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_date_modified . " AS 'lbl_azp_ibn_report_gantt_m_date_modified',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_description . " AS 'lbl_azp_ibn_report_gantt_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',

					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_campaign . " AS 'lbl_azp_ibn_report_gantt_t_campaign',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_request . " AS 'lbl_azp_ibn_report_gantt_t_request',

					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_arrival . " AS 'lbl_azp_ibn_report_gantt_t_date_arrival',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_general . " AS 'lbl_azp_ibn_report_gantt_t_date_general',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_date_reply . " AS 'lbl_azp_ibn_report_gantt_t_date_reply',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_percentaje . " AS 'lbl_azp_ibn_report_gantt_t_percentaje',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_plan_duration . " AS 'lbl_azp_ibn_report_gantt_t_plan_duration',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_plan_start . " AS 'lbl_azp_ibn_report_gantt_t_plan_start',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_real_duration . " AS 'lbl_azp_ibn_report_gantt_t_real_duration',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_real_start . " AS 'lbl_azp_ibn_report_gantt_t_real_start',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_01 . " AS 'lbl_azp_ibn_report_gantt_t_day_01',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_02 . " AS 'lbl_azp_ibn_report_gantt_t_day_02',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_03 . " AS 'lbl_azp_ibn_report_gantt_t_day_03',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_04 . " AS 'lbl_azp_ibn_report_gantt_t_day_04',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_05 . " AS 'lbl_azp_ibn_report_gantt_t_day_05',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_06 . " AS 'lbl_azp_ibn_report_gantt_t_day_06',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_07 . " AS 'lbl_azp_ibn_report_gantt_t_day_07',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_08 . " AS 'lbl_azp_ibn_report_gantt_t_day_08',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_09 . " AS 'lbl_azp_ibn_report_gantt_t_day_09',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_10 . " AS 'lbl_azp_ibn_report_gantt_t_day_10',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_11 . " AS 'lbl_azp_ibn_report_gantt_t_day_11',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_12 . " AS 'lbl_azp_ibn_report_gantt_t_day_12',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_13 . " AS 'lbl_azp_ibn_report_gantt_t_day_13',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_14 . " AS 'lbl_azp_ibn_report_gantt_t_day_14',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_15 . " AS 'lbl_azp_ibn_report_gantt_t_day_15',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_16 . " AS 'lbl_azp_ibn_report_gantt_t_day_16',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_17 . " AS 'lbl_azp_ibn_report_gantt_t_day_17',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_18 . " AS 'lbl_azp_ibn_report_gantt_t_day_18',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_19 . " AS 'lbl_azp_ibn_report_gantt_t_day_19',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_20 . " AS 'lbl_azp_ibn_report_gantt_t_day_20',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_21 . " AS 'lbl_azp_ibn_report_gantt_t_day_21',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_22 . " AS 'lbl_azp_ibn_report_gantt_t_day_22',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_23 . " AS 'lbl_azp_ibn_report_gantt_t_day_23',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_24 . " AS 'lbl_azp_ibn_report_gantt_t_day_24',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_25 . " AS 'lbl_azp_ibn_report_gantt_t_day_25',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_26 . " AS 'lbl_azp_ibn_report_gantt_t_day_26',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_27 . " AS 'lbl_azp_ibn_report_gantt_t_day_27',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_28 . " AS 'lbl_azp_ibn_report_gantt_t_day_28',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_29 . " AS 'lbl_azp_ibn_report_gantt_t_day_29',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_30 . " AS 'lbl_azp_ibn_report_gantt_t_day_30',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_31 . " AS 'lbl_azp_ibn_report_gantt_t_day_31',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_32 . " AS 'lbl_azp_ibn_report_gantt_t_day_32',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_33 . " AS 'lbl_azp_ibn_report_gantt_t_day_33',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_34 . " AS 'lbl_azp_ibn_report_gantt_t_day_34',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_35 . " AS 'lbl_azp_ibn_report_gantt_t_day_35',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_36 . " AS 'lbl_azp_ibn_report_gantt_t_day_36',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_37 . " AS 'lbl_azp_ibn_report_gantt_t_day_37',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_38 . " AS 'lbl_azp_ibn_report_gantt_t_day_38',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_39 . " AS 'lbl_azp_ibn_report_gantt_t_day_39',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_40 . " AS 'lbl_azp_ibn_report_gantt_t_day_40',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_41 . " AS 'lbl_azp_ibn_report_gantt_t_day_41',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_42 . " AS 'lbl_azp_ibn_report_gantt_t_day_42',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_43 . " AS 'lbl_azp_ibn_report_gantt_t_day_43',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_44 . " AS 'lbl_azp_ibn_report_gantt_t_day_44',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_45 . " AS 'lbl_azp_ibn_report_gantt_t_day_45',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_46 . " AS 'lbl_azp_ibn_report_gantt_t_day_46',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_47 . " AS 'lbl_azp_ibn_report_gantt_t_day_47',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_48 . " AS 'lbl_azp_ibn_report_gantt_t_day_48',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_49 . " AS 'lbl_azp_ibn_report_gantt_t_day_49',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_50 . " AS 'lbl_azp_ibn_report_gantt_t_day_50',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_51 . " AS 'lbl_azp_ibn_report_gantt_t_day_51',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_52 . " AS 'lbl_azp_ibn_report_gantt_t_day_52',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_53 . " AS 'lbl_azp_ibn_report_gantt_t_day_53',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_54 . " AS 'lbl_azp_ibn_report_gantt_t_day_54',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_55 . " AS 'lbl_azp_ibn_report_gantt_t_day_55',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_56 . " AS 'lbl_azp_ibn_report_gantt_t_day_56',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_57 . " AS 'lbl_azp_ibn_report_gantt_t_day_57',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_58 . " AS 'lbl_azp_ibn_report_gantt_t_day_58',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_59 . " AS 'lbl_azp_ibn_report_gantt_t_day_59',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_t_day_60 . " AS 'lbl_azp_ibn_report_gantt_t_day_60',
					tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_v_id_azp_ibn_control . " AS 'lbl_azp_ibn_report_gantt_v_id_azp_ibn_control',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_camera . " AS 'lbl_azp_ibn_control_panel_t_count_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_furniture . " AS 'lbl_azp_ibn_control_panel_t_count_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_property . " AS 'lbl_azp_ibn_control_panel_t_count_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_vehicle . " AS 'lbl_azp_ibn_control_panel_t_count_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_count_warranty . " AS 'lbl_azp_ibn_control_panel_t_count_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_general . " AS 'lbl_azp_ibn_control_panel_t_date_general',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_days . " AS 'lbl_azp_ibn_client_t_days',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_report_gantt . " tc_azp_ibn_report_gantt
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_v_id_azp_ibn_control . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_report_gantt." . d_azp_ibn_report_gantt_m_deleted . " = '1'
			");
		}










		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_cell_1() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " AS 'lbl_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_created . " AS 'lbl_azp_ibn_pdf_cell_m_date_created',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_modified . " AS 'lbl_azp_ibn_pdf_cell_m_date_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_description . " AS 'lbl_azp_ibn_pdf_cell_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_align . " AS 'lbl_azp_ibn_pdf_cell_t_align',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_border . " AS 'lbl_azp_ibn_pdf_cell_t_border',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_fill . " AS 'lbl_azp_ibn_pdf_cell_t_fill',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_height . " AS 'lbl_azp_ibn_pdf_cell_t_height',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_line . " AS 'lbl_azp_ibn_pdf_cell_t_line',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_link . " AS 'lbl_azp_ibn_pdf_cell_t_link',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_text . " AS 'lbl_azp_ibn_pdf_cell_t_text',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_width . " AS 'lbl_azp_ibn_pdf_cell_t_width',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_cell . " tc_azp_ibn_pdf_cell
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . " = '1'
				ORDER BY tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_cell_2() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " AS 'lbl_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_created . " AS 'lbl_azp_ibn_pdf_cell_m_date_created',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_modified . " AS 'lbl_azp_ibn_pdf_cell_m_date_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_description . " AS 'lbl_azp_ibn_pdf_cell_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_align . " AS 'lbl_azp_ibn_pdf_cell_t_align',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_border . " AS 'lbl_azp_ibn_pdf_cell_t_border',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_fill . " AS 'lbl_azp_ibn_pdf_cell_t_fill',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_height . " AS 'lbl_azp_ibn_pdf_cell_t_height',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_line . " AS 'lbl_azp_ibn_pdf_cell_t_line',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_link . " AS 'lbl_azp_ibn_pdf_cell_t_link',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_text . " AS 'lbl_azp_ibn_pdf_cell_t_text',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_width . " AS 'lbl_azp_ibn_pdf_cell_t_width',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_cell . " tc_azp_ibn_pdf_cell
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . " = '2'
				ORDER BY tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " ASC
			");
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_cell_3() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " AS 'lbl_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_created . " AS 'lbl_azp_ibn_pdf_cell_m_date_created',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_date_modified . " AS 'lbl_azp_ibn_pdf_cell_m_date_modified',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_description . " AS 'lbl_azp_ibn_pdf_cell_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_align . " AS 'lbl_azp_ibn_pdf_cell_t_align',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_border . " AS 'lbl_azp_ibn_pdf_cell_t_border',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_fill . " AS 'lbl_azp_ibn_pdf_cell_t_fill',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_height . " AS 'lbl_azp_ibn_pdf_cell_t_height',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_line . " AS 'lbl_azp_ibn_pdf_cell_t_line',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_link . " AS 'lbl_azp_ibn_pdf_cell_t_link',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_text . " AS 'lbl_azp_ibn_pdf_cell_t_text',
					tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_t_width . " AS 'lbl_azp_ibn_pdf_cell_t_width',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_cell . " tc_azp_ibn_pdf_cell
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_v_id_azp_ibn_interface_dit . " = '3'
				ORDER BY tc_azp_ibn_pdf_cell." . d_azp_ibn_pdf_cell_id_azp_ibn_pdf_cell . " ASC
			");
		}





		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_fill_color_1() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " AS 'lbl_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_created . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_created',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_description . " AS 'lbl_azp_ibn_pdf_fill_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_blue . " AS 'lbl_azp_ibn_pdf_fill_color_t_blue',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_green . " AS 'lbl_azp_ibn_pdf_fill_color_t_green',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_label . " AS 'lbl_azp_ibn_pdf_fill_color_t_label',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_red . " AS 'lbl_azp_ibn_pdf_fill_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_fill_color . " tc_azp_ibn_pdf_fill_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . " = '1'
				ORDER BY tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_fill_color_2() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " AS 'lbl_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_created . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_created',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_description . " AS 'lbl_azp_ibn_pdf_fill_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_blue . " AS 'lbl_azp_ibn_pdf_fill_color_t_blue',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_green . " AS 'lbl_azp_ibn_pdf_fill_color_t_green',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_label . " AS 'lbl_azp_ibn_pdf_fill_color_t_label',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_red . " AS 'lbl_azp_ibn_pdf_fill_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_fill_color . " tc_azp_ibn_pdf_fill_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . " = '2'
				ORDER BY tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_fill_color_3() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " AS 'lbl_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_created . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_created',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_fill_color_m_date_modified',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_description . " AS 'lbl_azp_ibn_pdf_fill_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_blue . " AS 'lbl_azp_ibn_pdf_fill_color_t_blue',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_green . " AS 'lbl_azp_ibn_pdf_fill_color_t_green',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_label . " AS 'lbl_azp_ibn_pdf_fill_color_t_label',
					tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_t_red . " AS 'lbl_azp_ibn_pdf_fill_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_fill_color . " tc_azp_ibn_pdf_fill_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_v_id_azp_ibn_interface_dit . " = '3'
				ORDER BY tc_azp_ibn_pdf_fill_color." . d_azp_ibn_pdf_fill_color_id_azp_ibn_pdf_fill_color . " ASC
			");
		}





		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_font_1() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " AS 'lbl_azp_ibn_pdf_font_id_azp_ibn_pdf_font',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_created . " AS 'lbl_azp_ibn_pdf_font_m_date_created',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_modified . " AS 'lbl_azp_ibn_pdf_font_m_date_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_description . " AS 'lbl_azp_ibn_pdf_font_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_family . " AS 'lbl_azp_ibn_pdf_font_t_family',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_size . " AS 'lbl_azp_ibn_pdf_font_t_size',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_style . " AS 'lbl_azp_ibn_pdf_font_t_style',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_font . " tc_azp_ibn_pdf_font
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . " = '1'
				ORDER BY tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_font_2() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " AS 'lbl_azp_ibn_pdf_font_id_azp_ibn_pdf_font',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_created . " AS 'lbl_azp_ibn_pdf_font_m_date_created',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_modified . " AS 'lbl_azp_ibn_pdf_font_m_date_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_description . " AS 'lbl_azp_ibn_pdf_font_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_family . " AS 'lbl_azp_ibn_pdf_font_t_family',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_size . " AS 'lbl_azp_ibn_pdf_font_t_size',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_style . " AS 'lbl_azp_ibn_pdf_font_t_style',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_font . " tc_azp_ibn_pdf_font
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . " = '2'
				ORDER BY tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_font_3() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " AS 'lbl_azp_ibn_pdf_font_id_azp_ibn_pdf_font',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_created . " AS 'lbl_azp_ibn_pdf_font_m_date_created',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_date_modified . " AS 'lbl_azp_ibn_pdf_font_m_date_modified',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_description . " AS 'lbl_azp_ibn_pdf_font_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_family . " AS 'lbl_azp_ibn_pdf_font_t_family',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_size . " AS 'lbl_azp_ibn_pdf_font_t_size',
					tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_t_style . " AS 'lbl_azp_ibn_pdf_font_t_style',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_font . " tc_azp_ibn_pdf_font
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_v_id_azp_ibn_interface_dit . " = '3'
				ORDER BY tc_azp_ibn_pdf_font." . d_azp_ibn_pdf_font_id_azp_ibn_pdf_font . " ASC
			");
		}





		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_text_color_1() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " AS 'lbl_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_created . " AS 'lbl_azp_ibn_pdf_text_color_m_date_created',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_text_color_m_date_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_description . " AS 'lbl_azp_ibn_pdf_text_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_blue . " AS 'lbl_azp_ibn_pdf_text_color_t_blue',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_green . " AS 'lbl_azp_ibn_pdf_text_color_t_green',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_label . " AS 'lbl_azp_ibn_pdf_text_color_t_label',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_red . " AS 'lbl_azp_ibn_pdf_text_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_text_color . " tc_azp_ibn_pdf_text_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . " = '1'
				ORDER BY tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_text_color_2() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " AS 'lbl_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_created . " AS 'lbl_azp_ibn_pdf_text_color_m_date_created',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_text_color_m_date_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_description . " AS 'lbl_azp_ibn_pdf_text_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_blue . " AS 'lbl_azp_ibn_pdf_text_color_t_blue',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_green . " AS 'lbl_azp_ibn_pdf_text_color_t_green',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_label . " AS 'lbl_azp_ibn_pdf_text_color_t_label',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_red . " AS 'lbl_azp_ibn_pdf_text_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_text_color . " tc_azp_ibn_pdf_text_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . " = '2'
				ORDER BY tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " ASC
			");
		}

		# Query Sql Select
		final public function sql_select_tc_azp_ibn_pdf_text_color_3() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " AS 'lbl_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_created . " AS 'lbl_azp_ibn_pdf_text_color_m_date_created',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_date_modified . " AS 'lbl_azp_ibn_pdf_text_color_m_date_modified',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_description . " AS 'lbl_azp_ibn_pdf_text_color_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_blue . " AS 'lbl_azp_ibn_pdf_text_color_t_blue',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_green . " AS 'lbl_azp_ibn_pdf_text_color_t_green',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_label . " AS 'lbl_azp_ibn_pdf_text_color_t_label',
					tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_t_red . " AS 'lbl_azp_ibn_pdf_text_color_t_red',
					tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_t_name . " AS 'lbl_azp_ibn_interface_dit_t_name'
				FROM " . t_azp_ibn_pdf_text_color . " tc_azp_ibn_pdf_text_color
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_interface_dit . " tc_azp_ibn_interface_dit
					ON tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . "
						= tc_azp_ibn_interface_dit." . d_azp_ibn_interface_dit_id_azp_ibn_interface_dit . "
				
				WHERE tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_m_deleted . " = '1'
					AND tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_v_id_azp_ibn_interface_dit . " = '3'
				ORDER BY tc_azp_ibn_pdf_text_color." . d_azp_ibn_pdf_text_color_id_azp_ibn_pdf_text_color . " ASC
			");
		}










		# Query Sql Insert
		final public function sql_controller_ibn_report_entity() {
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(d_azp_ibn_control_panel_t_date_general => DATE,);
			# Insertar valores en la tabla segun estructura de la tabla
			$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . " AS 'lbl_azp_ibn_client_id_azp_ibn_client',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_id_azp_ibn_format_file . " AS 'lbl_azp_ibn_format_file_id_azp_ibn_format_file',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_t_folder . " AS 'lbl_azp_ibn_format_file_t_folder',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_t_name . " AS 'lbl_azp_ibn_format_file_t_name',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_w_document . " AS 'lbl_azp_ibn_format_file_w_document',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_w_folder . " AS 'lbl_azp_ibn_format_file_w_folder',
					tc_azp_ibn_format_file." . d_azp_ibn_format_file_w_route . " AS 'lbl_azp_ibn_format_file_w_route'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_format_file . " tc_azp_ibn_format_file
					ON tc_azp_ibn_client." . d_azp_ibn_client_v_id_azp_ibn_format_file . "
						= tc_azp_ibn_format_file." . d_azp_ibn_format_file_id_azp_ibn_format_file . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
		}

		# Control Errores Insert
		final private function error_sql_dsh_azp_ibn_control_panel_union(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_backup'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_backup']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es obligatorio.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Insert
		final public function sql_dsh_azp_ibn_control_panel_union(array $data) : array {
			$var_error = $this->error_sql_dsh_azp_ibn_control_panel_union($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				# Seleccionar los registros de la tabla
				$this->db->query("DELETE FROM " . t_azp_ibn_report_consolidated);
				$this->db->query("ALTER TABLE " . t_azp_ibn_report_consolidated . " AUTO_INCREMENT = 1");
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_backup']);
				$empty_ck = $this->db->scape($data['field_ck']);
				#-------------------------------------------------------------------------#
				# Separar la cadena usando un delimitador
				$var_array = explode(",", $empty_ck);
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_array as $key => $value) {
					# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
					$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $value . "'");
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (false != $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignar valores a nuevas variables
							$var_id_control = $value[d_azp_ibn_control_panel_id_azp_ibn_control_panel];
							#-------------------------------------------------------------------------#
							# Consulta para identificar los nuevos registros en la tabla
							$var_sql_control_panel = $this->db->query("
								SELECT
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
									tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
									tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
								FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
								
								INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
									ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
										= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
								
								WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
							");
							#-------------------------------------------------------------------------#
							# Consulta para identificar los nuevos registros en la tabla
							$var_sql_data_main = $this->db->query("
								SELECT
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
									tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
									tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
								FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
								
								INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
									ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
										= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
								
								INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
									ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
										= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
								
								WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
									AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
							");
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_camera = $this->db->query("
								SELECT
									tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
									tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
									tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
									tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
									tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
								FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
										= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
									ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
										= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
								
								INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
									ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
										= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
								
								WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
									AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
							");
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_furniture = $this->db->query("
								SELECT
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
									tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
									tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
									tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
									tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
									tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
									tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
								FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
								
								INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
										tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
								
								INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
										tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
								
								INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
										tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
										tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
										tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
								
								INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
										tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
								
								INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
										tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
								
								WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
									AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
							");
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_fosyga = $this->db->query("
								SELECT
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
									tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
									tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
									tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
									tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
									tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
									tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
									tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
								FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
								
								INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
										tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
								
								INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
										tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
								
								INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
										tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
										tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
										tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
								
								INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
										tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
								
								INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
									ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
										tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
								
								WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
									AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
							");
							// AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " != '1'
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_property = $this->db->query("
								SELECT
									tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
									tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
									tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
									tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
									tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
									tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
									tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
									tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
									tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
									tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
									tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
									tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
									tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
									tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
									tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
									tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
									tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
									tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
									tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
									tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
									tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
									tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
									tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
									tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
									tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
									tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
									tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
									tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
									tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
									tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
									tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
									tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
									tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
									tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
									tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
									tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
									tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
									tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
									tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
									tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
									tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
								FROM " . t_azp_ibn_property . " tc_azp_ibn_property
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
										= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
									ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
										= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
								
								INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
									ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
										= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
								
								WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
									AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
										OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
							");
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_vehicle = $this->db->query("
								SELECT
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
									tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
								FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
										= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
									ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
										= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
								
								WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
									AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
										OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
							");
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_warranty = $this->db->query("
								SELECT
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
									tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
									tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
								FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
								
								INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
									ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
										= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
								
								WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
									AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $var_id_control . "'
									AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
							");
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_data_main) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_data_main as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_m_by_created => $_SESSION[SESS_APP_ID],
										d_azp_ibn_report_consolidated_m_by_modified => $_SESSION[SESS_APP_ID],
										d_azp_ibn_report_consolidated_m_date_created => DATE_HOUR,
										d_azp_ibn_report_consolidated_m_date_modified => DATE_HOUR,
										d_azp_ibn_report_consolidated_m_deleted => '1',
										d_azp_ibn_report_consolidated_m_description => '',
										d_azp_ibn_report_consolidated_m_level => '2',
										d_azp_ibn_report_consolidated_m_status => '1',
										d_azp_ibn_report_consolidated_m_temp => '1',
										d_azp_ibn_report_consolidated_t_bas_formula => strtoupper('0'),
										d_azp_ibn_report_consolidated_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
										d_azp_ibn_report_consolidated_t_bas_control => strtoupper($var_id_control),
										d_azp_ibn_report_consolidated_t_bas_validate => strtoupper('1'),
										d_azp_ibn_report_consolidated_t_inf_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
										d_azp_ibn_report_consolidated_t_inf_entity => strtoupper(''),
										d_azp_ibn_report_consolidated_t_inf_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
										d_azp_ibn_report_consolidated_t_inf_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
										d_azp_ibn_report_consolidated_t_inf_well_viable => strtoupper(''),
										d_azp_ibn_report_consolidated_t_inf_concept => strtoupper(''),
										d_azp_ibn_report_consolidated_t_inf_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),
										d_azp_ibn_report_consolidated_t_inf_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),

										d_azp_ibn_report_consolidated_t_pro_type_property => '',
										d_azp_ibn_report_consolidated_t_pro_enrollment => '',
										d_azp_ibn_report_consolidated_t_pro_address => '',
										d_azp_ibn_report_consolidated_t_pro_municipality => '',
										d_azp_ibn_report_consolidated_t_pro_department => '',
										d_azp_ibn_report_consolidated_t_pro_area => '',
										d_azp_ibn_report_consolidated_t_pro_purchase => '',
										d_azp_ibn_report_consolidated_t_pro_ownership => '',
										d_azp_ibn_report_consolidated_t_pro_vr_market => '',
										d_azp_ibn_report_consolidated_t_pro_assessment => '',
										d_azp_ibn_report_consolidated_t_pro_viable => '',
										d_azp_ibn_report_consolidated_t_pro_well => '',
										d_azp_ibn_report_consolidated_t_pro_text_one => '',
										d_azp_ibn_report_consolidated_t_pro_text_two => '',
										d_azp_ibn_report_consolidated_t_pro_text_three => '',
										d_azp_ibn_report_consolidated_t_pro_text_four => '',
										d_azp_ibn_report_consolidated_t_pro_text_five => '',
										d_azp_ibn_report_consolidated_t_pro_text_six => '',
										d_azp_ibn_report_consolidated_t_pro_text_seven => '',
										d_azp_ibn_report_consolidated_t_pro_text_eight => '',
										d_azp_ibn_report_consolidated_t_pro_sel_one => '',
										d_azp_ibn_report_consolidated_t_pro_sel_two => '',
										d_azp_ibn_report_consolidated_t_pro_sel_three => '',
										d_azp_ibn_report_consolidated_t_pro_sel_four => '',
										d_azp_ibn_report_consolidated_t_pro_sel_five => '',
										d_azp_ibn_report_consolidated_t_pro_comment => '',
										d_azp_ibn_report_consolidated_t_pro_concept => '',
										d_azp_ibn_report_consolidated_t_pro_unified => '',
										d_azp_ibn_report_consolidated_t_pro_data => 'VACIO',

										d_azp_ibn_report_consolidated_t_veh_plaque => '',
										d_azp_ibn_report_consolidated_t_veh_class => '',
										d_azp_ibn_report_consolidated_t_veh_mark => '',
										d_azp_ibn_report_consolidated_t_veh_model => '',
										d_azp_ibn_report_consolidated_t_veh_city => '',
										d_azp_ibn_report_consolidated_t_veh_service => '',
										d_azp_ibn_report_consolidated_t_veh_color => '',
										d_azp_ibn_report_consolidated_t_veh_line => '',
										d_azp_ibn_report_consolidated_t_veh_make => '',
										d_azp_ibn_report_consolidated_t_veh_value => '',
										d_azp_ibn_report_consolidated_t_veh_assessment => '',
										d_azp_ibn_report_consolidated_t_veh_vehicle => '',
										d_azp_ibn_report_consolidated_t_veh_viable => '',
										d_azp_ibn_report_consolidated_t_veh_well => '',
										d_azp_ibn_report_consolidated_t_veh_text_one => '',
										d_azp_ibn_report_consolidated_t_veh_text_two => '',
										d_azp_ibn_report_consolidated_t_veh_text_three => '',
										d_azp_ibn_report_consolidated_t_veh_text_four => '',
										d_azp_ibn_report_consolidated_t_veh_text_five => '',
										d_azp_ibn_report_consolidated_t_veh_sel_one => '',
										d_azp_ibn_report_consolidated_t_veh_sel_two => '',
										d_azp_ibn_report_consolidated_t_veh_sel_three => '',
										d_azp_ibn_report_consolidated_t_veh_comment => '',
										d_azp_ibn_report_consolidated_t_veh_concept => '',
										d_azp_ibn_report_consolidated_t_veh_unified => '',
										d_azp_ibn_report_consolidated_t_veh_data => 'VACIO',

										d_azp_ibn_report_consolidated_t_cam_certified => '',
										d_azp_ibn_report_consolidated_t_cam_company => '',
										d_azp_ibn_report_consolidated_t_cam_organization => '',
										d_azp_ibn_report_consolidated_t_cam_enrollment => '',
										d_azp_ibn_report_consolidated_t_cam_renewal => '',
										d_azp_ibn_report_consolidated_t_cam_nit => '',
										d_azp_ibn_report_consolidated_t_cam_business => '',
										d_azp_ibn_report_consolidated_t_cam_establishment => '',
										d_azp_ibn_report_consolidated_t_cam_city => '',
										d_azp_ibn_report_consolidated_t_cam_municipality => '',
										d_azp_ibn_report_consolidated_t_cam_department => '',
										d_azp_ibn_report_consolidated_t_cam_address => '',
										d_azp_ibn_report_consolidated_t_cam_phone => '',
										d_azp_ibn_report_consolidated_t_cam_active => '',
										d_azp_ibn_report_consolidated_t_cam_rup => '',
										d_azp_ibn_report_consolidated_t_cam_rp_full_name => '',
										d_azp_ibn_report_consolidated_t_cam_rp_identification => '',
										d_azp_ibn_report_consolidated_t_cam_assessment => '',
										d_azp_ibn_report_consolidated_t_cam_viable => '',
										d_azp_ibn_report_consolidated_t_cam_well => '',
										d_azp_ibn_report_consolidated_t_cam_comment => '',
										d_azp_ibn_report_consolidated_t_cam_concept => '',
										d_azp_ibn_report_consolidated_t_cam_data => 'VACIO',

										d_azp_ibn_report_consolidated_t_fur_nit => '',
										d_azp_ibn_report_consolidated_t_fur_business => '',
										d_azp_ibn_report_consolidated_t_fur_phone => '',
										d_azp_ibn_report_consolidated_t_fur_address => '',
										d_azp_ibn_report_consolidated_t_fur_municipality => '',
										d_azp_ibn_report_consolidated_t_fur_department => '',
										d_azp_ibn_report_consolidated_t_fur_salary => '',
										d_azp_ibn_report_consolidated_t_fur_contributor => '',
										d_azp_ibn_report_consolidated_t_fur_viable => '',
										d_azp_ibn_report_consolidated_t_fur_well => '',
										d_azp_ibn_report_consolidated_t_fur_text_one => '',
										d_azp_ibn_report_consolidated_t_fur_text_two => '',
										d_azp_ibn_report_consolidated_t_fur_comment => '',
										d_azp_ibn_report_consolidated_t_fur_concept => '',
										d_azp_ibn_report_consolidated_t_fur_data => 'VACIO',

										d_azp_ibn_report_consolidated_t_adr_outcome => '',
										d_azp_ibn_report_consolidated_t_adr_state => '',
										d_azp_ibn_report_consolidated_t_adr_municipality => '',
										d_azp_ibn_report_consolidated_t_adr_regime => '',
										d_azp_ibn_report_consolidated_t_adr_entity => '',
										d_azp_ibn_report_consolidated_t_adr_affiliate => '',

										d_azp_ibn_report_consolidated_t_war_state => '',
										d_azp_ibn_report_consolidated_t_war_creditor => '',
										d_azp_ibn_report_consolidated_t_war_well => '',
										d_azp_ibn_report_consolidated_t_war_detail => '',
										d_azp_ibn_report_consolidated_t_war_value => '',
										d_azp_ibn_report_consolidated_t_war_date => '',
										d_azp_ibn_report_consolidated_t_war_comment => '',
										d_azp_ibn_report_consolidated_t_war_concept => '',
										d_azp_ibn_report_consolidated_t_war_data => 'VACIO',
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->insert(t_azp_ibn_report_consolidated, $var_array);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_camera) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_camera as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_cam_certified => strtoupper($value['lbl_azp_ibn_type_certified_t_name']),
										d_azp_ibn_report_consolidated_t_cam_company => strtoupper($value['lbl_azp_ibn_camera_t_type_company']),
										d_azp_ibn_report_consolidated_t_cam_organization => strtoupper($value['lbl_azp_ibn_camera_t_type_organization']),
										d_azp_ibn_report_consolidated_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
										d_azp_ibn_report_consolidated_t_cam_renewal => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
										d_azp_ibn_report_consolidated_t_cam_nit => strtoupper($value['lbl_azp_ibn_camera_t_nit']),
										d_azp_ibn_report_consolidated_t_cam_business => strtoupper($value['lbl_azp_ibn_camera_t_business_name']),
										d_azp_ibn_report_consolidated_t_cam_establishment => strtoupper($value['lbl_azp_ibn_camera_t_establishment']),
										d_azp_ibn_report_consolidated_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_city']),
										d_azp_ibn_report_consolidated_t_cam_municipality => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
										d_azp_ibn_report_consolidated_t_cam_department => strtoupper($value['lbl_azp_ibn_camera_t_department']),
										d_azp_ibn_report_consolidated_t_cam_address => strtoupper($value['lbl_azp_ibn_camera_t_address']),
										d_azp_ibn_report_consolidated_t_cam_phone => strtoupper($value['lbl_azp_ibn_camera_t_phone']),
										d_azp_ibn_report_consolidated_t_cam_active => strtoupper($value['lbl_azp_ibn_camera_t_total_active']),
										d_azp_ibn_report_consolidated_t_cam_rup => strtoupper($value['lbl_azp_ibn_camera_t_rup']),
										d_azp_ibn_report_consolidated_t_cam_rp_full_name => strtoupper($value['lbl_azp_ibn_camera_t_legal_representative']),
										d_azp_ibn_report_consolidated_t_cam_rp_identification => strtoupper($value['lbl_azp_ibn_camera_t_legal_rp_certificate']),
										d_azp_ibn_report_consolidated_t_cam_assessment => strtoupper($value['lbl_azp_ibn_camera_t_assessment']),
										d_azp_ibn_report_consolidated_t_cam_viable => strtoupper($value['lbl_azp_ibn_camera_t_viable']),
										d_azp_ibn_report_consolidated_t_cam_well => strtoupper($value['lbl_azp_ibn_camera_t_well_viable']),
										d_azp_ibn_report_consolidated_t_cam_comment => strtoupper($value['lbl_azp_ibn_camera_t_comment_legal']),
										d_azp_ibn_report_consolidated_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
										d_azp_ibn_report_consolidated_t_cam_data => strtoupper('Encontrado'),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_furniture) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_furniture as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_fur_nit => strtoupper($value['lbl_azp_ibn_furniture_t_nit']),
										d_azp_ibn_report_consolidated_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
										d_azp_ibn_report_consolidated_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
										d_azp_ibn_report_consolidated_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
										d_azp_ibn_report_consolidated_t_fur_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
										d_azp_ibn_report_consolidated_t_fur_department => strtoupper($value['lbl_azp_ibn_furniture_t_department']),
										d_azp_ibn_report_consolidated_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
										d_azp_ibn_report_consolidated_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
										d_azp_ibn_report_consolidated_t_fur_viable => strtoupper($value['lbl_azp_ibn_furniture_t_well_option']),
										d_azp_ibn_report_consolidated_t_fur_well => strtoupper($value['lbl_azp_ibn_furniture_t_well_viable']),
										d_azp_ibn_report_consolidated_t_fur_text_one => strtoupper($value['lbl_azp_ibn_furniture_t_text_one']),
										d_azp_ibn_report_consolidated_t_fur_text_two => strtoupper($value['lbl_azp_ibn_furniture_t_text_two']),
										d_azp_ibn_report_consolidated_t_fur_comment => strtoupper($value['lbl_azp_ibn_furniture_t_comment_legal']),
										d_azp_ibn_report_consolidated_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
										d_azp_ibn_report_consolidated_t_fur_data => strtoupper('Encontrado'),

										//d_azp_ibn_report_consolidated_t_adr_outcome => strtoupper($value['lbl_azp_ibn_outcome_t_name']),
										//d_azp_ibn_report_consolidated_t_adr_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
										//d_azp_ibn_report_consolidated_t_adr_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
										//d_azp_ibn_report_consolidated_t_adr_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
										//d_azp_ibn_report_consolidated_t_adr_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
										//d_azp_ibn_report_consolidated_t_adr_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_fosyga) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_fosyga as $key => $value):
									$ibn_outcome = strtoupper($value['lbl_azp_ibn_outcome_t_name']);
									if (strcasecmp($ibn_outcome, "NINGUNO") === 0) {
										$ibn_outcome = "";
									}
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_adr_outcome => $ibn_outcome,
										d_azp_ibn_report_consolidated_t_adr_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
										d_azp_ibn_report_consolidated_t_adr_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_city']),
										d_azp_ibn_report_consolidated_t_adr_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
										d_azp_ibn_report_consolidated_t_adr_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
										d_azp_ibn_report_consolidated_t_adr_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_property) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_property as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_pro_type_property => strtoupper($value['lbl_azp_ibn_type_property_t_name']),
										d_azp_ibn_report_consolidated_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
										d_azp_ibn_report_consolidated_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
										d_azp_ibn_report_consolidated_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
										d_azp_ibn_report_consolidated_t_pro_department => strtoupper($value['lbl_azp_ibn_property_t_department']),
										d_azp_ibn_report_consolidated_t_pro_area => strtoupper($value['lbl_azp_ibn_property_t_area']),
										d_azp_ibn_report_consolidated_t_pro_purchase => strtoupper($value['lbl_azp_ibn_property_t_purchase_annotation']),
										d_azp_ibn_report_consolidated_t_pro_ownership => strtoupper($value['lbl_azp_ibn_property_t_ownership']),
										d_azp_ibn_report_consolidated_t_pro_vr_market => strtoupper($value['lbl_azp_ibn_property_t_market_value']),
										d_azp_ibn_report_consolidated_t_pro_assessment => strtoupper($value['lbl_azp_ibn_property_t_assessment']),
										d_azp_ibn_report_consolidated_t_pro_viable => strtoupper($value['lbl_azp_ibn_property_t_viable']),
										d_azp_ibn_report_consolidated_t_pro_well => strtoupper($value['lbl_azp_ibn_property_t_well_viable']),
										d_azp_ibn_report_consolidated_t_pro_text_one => strtoupper($value['lbl_azp_ibn_property_t_text_one']),
										d_azp_ibn_report_consolidated_t_pro_text_two => strtoupper($value['lbl_azp_ibn_property_t_text_two']),
										d_azp_ibn_report_consolidated_t_pro_text_three => strtoupper($value['lbl_azp_ibn_property_t_text_three']),
										d_azp_ibn_report_consolidated_t_pro_text_four => strtoupper($value['lbl_azp_ibn_property_t_text_four']),
										d_azp_ibn_report_consolidated_t_pro_text_five => strtoupper($value['lbl_azp_ibn_property_t_text_five']),
										d_azp_ibn_report_consolidated_t_pro_text_six => strtoupper($value['lbl_azp_ibn_property_t_text_six']),
										d_azp_ibn_report_consolidated_t_pro_text_seven => strtoupper($value['lbl_azp_ibn_property_t_text_seven']),
										d_azp_ibn_report_consolidated_t_pro_text_eight => strtoupper($value['lbl_azp_ibn_property_t_text_eight']),
										d_azp_ibn_report_consolidated_t_pro_sel_one => strtoupper($value['lbl_azp_ibn_property_t_sel_one']),
										d_azp_ibn_report_consolidated_t_pro_sel_two => strtoupper($value['lbl_azp_ibn_property_t_sel_two']),
										d_azp_ibn_report_consolidated_t_pro_sel_three => strtoupper($value['lbl_azp_ibn_property_t_sel_three']),
										d_azp_ibn_report_consolidated_t_pro_sel_four => strtoupper($value['lbl_azp_ibn_property_t_sel_four']),
										d_azp_ibn_report_consolidated_t_pro_sel_five => strtoupper($value['lbl_azp_ibn_property_t_sel_five']),
										d_azp_ibn_report_consolidated_t_pro_comment => strtoupper($value['lbl_azp_ibn_property_t_comment_legal']),
										d_azp_ibn_report_consolidated_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
										d_azp_ibn_report_consolidated_t_pro_data => strtoupper('Encontrado'),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_vehicle) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_vehicle as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
										d_azp_ibn_report_consolidated_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
										d_azp_ibn_report_consolidated_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
										d_azp_ibn_report_consolidated_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
										d_azp_ibn_report_consolidated_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
										d_azp_ibn_report_consolidated_t_veh_service => strtoupper($value['lbl_azp_ibn_vehicle_t_service']),
										d_azp_ibn_report_consolidated_t_veh_color => strtoupper($value['lbl_azp_ibn_vehicle_t_color']),
										d_azp_ibn_report_consolidated_t_veh_line => strtoupper($value['lbl_azp_ibn_vehicle_t_line']),
										d_azp_ibn_report_consolidated_t_veh_make => strtoupper($value['lbl_azp_ibn_vehicle_t_make_camera']),
										d_azp_ibn_report_consolidated_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_assessment']),
										d_azp_ibn_report_consolidated_t_veh_assessment => strtoupper($value['lbl_azp_ibn_vehicle_t_assessment']),
										d_azp_ibn_report_consolidated_t_veh_vehicle => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),
										d_azp_ibn_report_consolidated_t_veh_viable => strtoupper($value['lbl_azp_ibn_vehicle_t_viable']),
										d_azp_ibn_report_consolidated_t_veh_well => strtoupper($value['lbl_azp_ibn_vehicle_t_well_viable']),
										d_azp_ibn_report_consolidated_t_veh_text_one => strtoupper($value['lbl_azp_ibn_vehicle_t_text_one']),
										d_azp_ibn_report_consolidated_t_veh_text_two => strtoupper($value['lbl_azp_ibn_vehicle_t_text_two']),
										d_azp_ibn_report_consolidated_t_veh_text_three => strtoupper($value['lbl_azp_ibn_vehicle_t_text_three']),
										d_azp_ibn_report_consolidated_t_veh_text_four => strtoupper($value['lbl_azp_ibn_vehicle_t_text_four']),
										d_azp_ibn_report_consolidated_t_veh_text_five => strtoupper($value['lbl_azp_ibn_vehicle_t_text_five']),
										d_azp_ibn_report_consolidated_t_veh_sel_one => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_one']),
										d_azp_ibn_report_consolidated_t_veh_sel_two => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_two']),
										d_azp_ibn_report_consolidated_t_veh_sel_three => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_three']),
										d_azp_ibn_report_consolidated_t_veh_comment => strtoupper($value['lbl_azp_ibn_vehicle_t_comment_legal']),
										d_azp_ibn_report_consolidated_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
										d_azp_ibn_report_consolidated_t_veh_data => strtoupper('Encontrado'),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql_warranty) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql_warranty as $key => $value):
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_war_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
										d_azp_ibn_report_consolidated_t_war_creditor => strtoupper($value['lbl_azp_ibn_warranty_t_creditor']),
										d_azp_ibn_report_consolidated_t_war_well => strtoupper($value['lbl_azp_ibn_warranty_t_well_name']),
										d_azp_ibn_report_consolidated_t_war_detail => strtoupper($value['lbl_azp_ibn_warranty_t_well_detail']),
										d_azp_ibn_report_consolidated_t_war_value => strtoupper($value['lbl_azp_ibn_warranty_t_value']),
										d_azp_ibn_report_consolidated_t_war_date => strtoupper($value['lbl_azp_ibn_warranty_t_date']),
										d_azp_ibn_report_consolidated_t_war_comment => strtoupper($value['lbl_azp_ibn_warranty_t_comment_legal']),
										d_azp_ibn_report_consolidated_t_war_concept => strtoupper($value['lbl_azp_ibn_warranty_t_concept']),
										d_azp_ibn_report_consolidated_t_war_data => strtoupper('Encontrado'),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'AND " .
										d_azp_ibn_report_consolidated_t_bas_account . " = '" . $value['lbl_azp_ibn_warranty_t_acount'] . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la consulta es verdadera
							if (true == $var_sql_control_panel) {
								# Recorrer las filas de la consulta generada
								foreach ($var_sql_control_panel as $key => $value):
									# Asignacino de valores a nuevas variables
									$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
									$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
									$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
									$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
									$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
									$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
									$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
									$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
									$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
									$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
									$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
									$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
									$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
									$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
									$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
									$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
									$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
									#-------------------------------------------------------------------------#
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_base => strtoupper($value['lbl_azp_ibn_control_panel_t_code_research']),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_m_deleted . " = '1' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
									#-------------------------------------------------------------------------#
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_entity => strtoupper($value['lbl_azp_ibn_client_t_name']),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_m_deleted . " = '1' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
									#-------------------------------------------------------------------------#
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_fecha => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_m_deleted . " = '1' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Validar si la consulta es verdadera
							/*if (true == $var_sql_data_main) {
								# Recorrer las filas de la consulta generada
								foreach ($var_sql_data_main as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_dat_identification = $value['lbl_azp_ibn_data_main_t_identification'];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										d_azp_ibn_report_consolidated_t_bas_validate => strtoupper('1'),
										d_azp_ibn_report_consolidated_t_inf_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
										d_azp_ibn_report_consolidated_t_inf_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
										d_azp_ibn_report_consolidated_t_inf_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),
										d_azp_ibn_report_consolidated_t_inf_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_dat_identification . "' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}*/
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							/*$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_database = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_cam_concept = $value[d_azp_ibn_report_consolidated_t_cam_well];
									$var_fur_concept = $value[d_azp_ibn_report_consolidated_t_fur_well];
									$var_pro_concept = $value[d_azp_ibn_report_consolidated_t_pro_well];
									$var_veh_concept = $value[d_azp_ibn_report_consolidated_t_veh_well];
									$var_war_concept = $value[d_azp_ibn_report_consolidated_t_war_well];
									$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_well_viable => strtoupper($var_observation),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_id_database . "' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}*/
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							/*$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_database = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_cam_concept = $value[d_azp_ibn_report_consolidated_t_cam_concept];
									$var_fur_concept = $value[d_azp_ibn_report_consolidated_t_fur_concept];
									$var_pro_concept = $value[d_azp_ibn_report_consolidated_t_pro_concept];
									$var_veh_concept = $value[d_azp_ibn_report_consolidated_t_veh_concept];
									$var_war_concept = $value[d_azp_ibn_report_consolidated_t_war_concept];
									$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_concept => strtoupper($var_observation),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id_database . "' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}*/
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							/*$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_database = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_pro_concept = $value[d_azp_ibn_report_consolidated_t_pro_concept];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_pro_unified => strtoupper($var_pro_concept),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id_database . "' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}*/
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							/*$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_database = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_veh_concept = $value[d_azp_ibn_report_consolidated_t_veh_concept];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_veh_unified => strtoupper($var_veh_concept),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id_database . "' AND " .
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "'"
									);
								endforeach;
							}*/
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->query("
								SELECT *,
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_cam_well . ") AS 'lbl_cam_well',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_fur_well . ") AS 'lbl_fur_well',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_pro_well . ") AS 'lbl_pro_well',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_veh_well . ") AS 'lbl_veh_well',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_war_well . ") AS 'lbl_war_well'
								FROM " . t_azp_ibn_report_consolidated . "
								GROUP BY " . d_azp_ibn_report_consolidated_t_inf_identification
							);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_document = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_cam_concept = $value['lbl_cam_well'];
									$var_fur_concept = $value['lbl_fur_well'];
									$var_pro_concept = $value['lbl_pro_well'];
									$var_veh_concept = $value['lbl_veh_well'];
									$var_war_concept = $value['lbl_war_well'];
									$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_well_viable => strtoupper($var_observation),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "' AND " .
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_id_document . "'"
									);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							$var_array_pro_concept = array();
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->query("
								SELECT *, GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_pro_concept . ") AS 'lbl_concat'
								FROM " . t_azp_ibn_report_consolidated . "
								GROUP BY " . d_azp_ibn_report_consolidated_t_inf_identification
							);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_document = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_pro_concept = $value[d_azp_ibn_report_consolidated_t_pro_concept];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_pro_unified => strtoupper($value['lbl_concat']),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "' AND " .
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_id_document . "'"
									);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->query("
								SELECT *, GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_pro_concept . ") AS 'lbl_concat'
								FROM " . t_azp_ibn_report_consolidated . "
								GROUP BY " . d_azp_ibn_report_consolidated_t_inf_identification
							);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_document = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_veh_concept = $value[d_azp_ibn_report_consolidated_t_veh_concept];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_veh_unified => strtoupper($value['lbl_concat']),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "' AND " .
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_id_document . "'"
									);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->query("
								SELECT *,
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_cam_concept . ") AS 'lbl_cam_concept',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_fur_concept . ") AS 'lbl_fur_concept',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_pro_concept . ") AS 'lbl_pro_concept',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_veh_concept . ") AS 'lbl_veh_concept',
									GROUP_CONCAT(" . d_azp_ibn_report_consolidated_t_war_concept . ") AS 'lbl_war_concept'
								FROM " . t_azp_ibn_report_consolidated . "
								GROUP BY " . d_azp_ibn_report_consolidated_t_inf_identification
							);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id_document = $value[d_azp_ibn_report_consolidated_t_inf_identification];
									$var_cam_concept = $value['lbl_cam_concept'];
									$var_fur_concept = $value['lbl_fur_concept'];
									$var_pro_concept = $value['lbl_pro_concept'];
									$var_veh_concept = $value['lbl_veh_concept'];
									$var_war_concept = $value['lbl_war_concept'];
									$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_inf_concept => strtoupper($var_observation),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array,
										d_azp_ibn_report_consolidated_t_bas_control . " = '" . $var_id_control . "' AND " .
										d_azp_ibn_report_consolidated_t_inf_identification . " = '" . $var_id_document . "'"
									);
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_t_cam_data . " = 'VACIO'");
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_cam_concept => '',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_t_fur_data . " = 'VACIO'");
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_fur_concept => '',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_t_pro_data . " = 'VACIO'");
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_pro_concept => '', d_azp_ibn_report_consolidated_t_pro_unified => '',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_t_veh_data . " = 'VACIO'");
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_veh_concept => '', d_azp_ibn_report_consolidated_t_veh_unified => '',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_t_war_data . " = 'VACIO'");
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_war_concept => '',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql_formula = $this->db->select("*", t_azp_ibn_report_consolidated, d_azp_ibn_report_consolidated_m_deleted . " = '1'" . " " .
								"GROUP BY" . " " . d_azp_ibn_report_consolidated_t_inf_identification . " " . "ASC" . " " .
								"ORDER BY" . " " . d_azp_ibn_report_consolidated_t_inf_consecutive . " " . "ASC" . "," . " " .
									d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " " . "ASC"
							);
							# Validar si la consulta es verdadera
							if (true == $var_sql_formula) {
								# Recorrer las filas de la consulta generada
								foreach ($var_sql_formula as $key => $value):
									# Asignar valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(d_azp_ibn_report_consolidated_t_bas_formula => strtoupper('1'),);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
							#-------------------------------------------------------------------------#
							# Seleccionar los registros de la tabla
							$var_sql = $this->db->select("*", t_azp_ibn_report_consolidated,
								d_azp_ibn_report_consolidated_t_cam_data . " = 'VACIO' AND " .
								d_azp_ibn_report_consolidated_t_fur_data . " = 'VACIO' AND " .
								d_azp_ibn_report_consolidated_t_pro_data . " = 'VACIO' AND " .
								d_azp_ibn_report_consolidated_t_veh_data . " = 'VACIO' AND " .
								d_azp_ibn_report_consolidated_t_war_data . " = 'VACIO'"
							);
							# Validar si la sentencia query ejecutada es correcta y no falsa
							if (true == $var_sql) {
								# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
								foreach ($var_sql as $key => $value):
									# Asignacion de valores a nuevas variables
									$var_id = $value[d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated];
									# Organizacion de los valores capturados y asignados a los campos a insertar
									//$var_array = array(d_azp_ibn_report_consolidated_m_deleted => '2', d_azp_ibn_report_consolidated_t_inf_concept => '',);
									$var_array = array(d_azp_ibn_report_consolidated_m_deleted => '2',);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_consolidated, $var_array, d_azp_ibn_report_consolidated_t_bas_formula . " = '0' AND " . d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " = '" . $var_id . "'");
								endforeach;
							}
						endforeach;
					}
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Registro completado correctamente.');
			}
		}

		# Query Sql Insert
		final public function sql_controller_ibn_data_union() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " AS 'lbl_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_date_created . " AS 'lbl_azp_ibn_report_consolidated_m_date_created',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_date_modified . " AS 'lbl_azp_ibn_report_consolidated_m_date_modified',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_description . " AS 'lbl_azp_ibn_report_consolidated_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_bas_account . " AS 'lbl_azp_ibn_report_consolidated_t_bas_account',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_bas_control . " AS 'lbl_azp_ibn_report_consolidated_t_bas_control',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_bas_validate . " AS 'lbl_azp_ibn_report_consolidated_t_bas_validate',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_base . " AS 'lbl_azp_ibn_report_consolidated_t_inf_base',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_fecha . " AS 'lbl_azp_ibn_report_consolidated_t_inf_fecha',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_consecutive . " AS 'lbl_azp_ibn_report_consolidated_t_inf_consecutive',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_entity . " AS 'lbl_azp_ibn_report_consolidated_t_inf_entity',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_identification . " AS 'lbl_azp_ibn_report_consolidated_t_inf_identification',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_full_name . " AS 'lbl_azp_ibn_report_consolidated_t_inf_full_name',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_type_property . " AS 'lbl_azp_ibn_report_consolidated_t_pro_type_property',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_enrollment . " AS 'lbl_azp_ibn_report_consolidated_t_pro_enrollment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_address . " AS 'lbl_azp_ibn_report_consolidated_t_pro_address',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_municipality . " AS 'lbl_azp_ibn_report_consolidated_t_pro_municipality',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_department . " AS 'lbl_azp_ibn_report_consolidated_t_pro_department',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_area . " AS 'lbl_azp_ibn_report_consolidated_t_pro_area',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_purchase . " AS 'lbl_azp_ibn_report_consolidated_t_pro_purchase',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_ownership . " AS 'lbl_azp_ibn_report_consolidated_t_pro_ownership',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_vr_market . " AS 'lbl_azp_ibn_report_consolidated_t_pro_vr_market',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_assessment . " AS 'lbl_azp_ibn_report_consolidated_t_pro_assessment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_viable . " AS 'lbl_azp_ibn_report_consolidated_t_pro_viable',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_well . " AS 'lbl_azp_ibn_report_consolidated_t_pro_well',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_one . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_one',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_two . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_two',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_three . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_three',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_four . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_four',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_five . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_five',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_six . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_six',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_seven . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_seven',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_text_eight . " AS 'lbl_azp_ibn_report_consolidated_t_pro_text_eight',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_sel_one . " AS 'lbl_azp_ibn_report_consolidated_t_pro_sel_one',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_sel_two . " AS 'lbl_azp_ibn_report_consolidated_t_pro_sel_two',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_sel_three . " AS 'lbl_azp_ibn_report_consolidated_t_pro_sel_three',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_sel_four . " AS 'lbl_azp_ibn_report_consolidated_t_pro_sel_four',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_sel_five . " AS 'lbl_azp_ibn_report_consolidated_t_pro_sel_five',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_comment . " AS 'lbl_azp_ibn_report_consolidated_t_pro_comment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_concept . " AS 'lbl_azp_ibn_report_consolidated_t_pro_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_pro_unified . " AS 'lbl_azp_ibn_report_consolidated_t_pro_unified',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_plaque . " AS 'lbl_azp_ibn_report_consolidated_t_veh_plaque',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_class . " AS 'lbl_azp_ibn_report_consolidated_t_veh_class',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_mark . " AS 'lbl_azp_ibn_report_consolidated_t_veh_mark',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_model . " AS 'lbl_azp_ibn_report_consolidated_t_veh_model',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_city . " AS 'lbl_azp_ibn_report_consolidated_t_veh_city',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_service . " AS 'lbl_azp_ibn_report_consolidated_t_veh_service',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_color . " AS 'lbl_azp_ibn_report_consolidated_t_veh_color',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_line . " AS 'lbl_azp_ibn_report_consolidated_t_veh_line',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_make . " AS 'lbl_azp_ibn_report_consolidated_t_veh_make',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_value . " AS 'lbl_azp_ibn_report_consolidated_t_veh_value',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_assessment . " AS 'lbl_azp_ibn_report_consolidated_t_veh_assessment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_vehicle . " AS 'lbl_azp_ibn_report_consolidated_t_veh_vehicle',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_viable . " AS 'lbl_azp_ibn_report_consolidated_t_veh_viable',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_well . " AS 'lbl_azp_ibn_report_consolidated_t_veh_well',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_text_one . " AS 'lbl_azp_ibn_report_consolidated_t_veh_text_one',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_text_two . " AS 'lbl_azp_ibn_report_consolidated_t_veh_text_two',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_text_three . " AS 'lbl_azp_ibn_report_consolidated_t_veh_text_three',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_text_four . " AS 'lbl_azp_ibn_report_consolidated_t_veh_text_four',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_text_five . " AS 'lbl_azp_ibn_report_consolidated_t_veh_text_five',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_sel_one . " AS 'lbl_azp_ibn_report_consolidated_t_veh_sel_one',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_sel_two . " AS 'lbl_azp_ibn_report_consolidated_t_veh_sel_two',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_sel_three . " AS 'lbl_azp_ibn_report_consolidated_t_veh_sel_three',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_comment . " AS 'lbl_azp_ibn_report_consolidated_t_veh_comment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_concept . " AS 'lbl_azp_ibn_report_consolidated_t_veh_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_veh_unified . " AS 'lbl_azp_ibn_report_consolidated_t_veh_unified',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_certified . " AS 'lbl_azp_ibn_report_consolidated_t_cam_certified',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_company . " AS 'lbl_azp_ibn_report_consolidated_t_cam_company',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_organization . " AS 'lbl_azp_ibn_report_consolidated_t_cam_organization',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_enrollment . " AS 'lbl_azp_ibn_report_consolidated_t_cam_enrollment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_renewal . " AS 'lbl_azp_ibn_report_consolidated_t_cam_renewal',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_nit . " AS 'lbl_azp_ibn_report_consolidated_t_cam_nit',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_business . " AS 'lbl_azp_ibn_report_consolidated_t_cam_business',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_establishment . " AS 'lbl_azp_ibn_report_consolidated_t_cam_establishment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_city . " AS 'lbl_azp_ibn_report_consolidated_t_cam_city',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_municipality . " AS 'lbl_azp_ibn_report_consolidated_t_cam_municipality',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_department . " AS 'lbl_azp_ibn_report_consolidated_t_cam_department',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_address . " AS 'lbl_azp_ibn_report_consolidated_t_cam_address',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_phone . " AS 'lbl_azp_ibn_report_consolidated_t_cam_phone',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_active . " AS 'lbl_azp_ibn_report_consolidated_t_cam_active',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_rup . " AS 'lbl_azp_ibn_report_consolidated_t_cam_rup',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_rp_full_name . " AS 'lbl_azp_ibn_report_consolidated_t_cam_rp_full_name',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_rp_identification . " AS 'lbl_azp_ibn_report_consolidated_t_cam_rp_identification',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_assessment . " AS 'lbl_azp_ibn_report_consolidated_t_cam_assessment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_viable . " AS 'lbl_azp_ibn_report_consolidated_t_cam_viable',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_well . " AS 'lbl_azp_ibn_report_consolidated_t_cam_well',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_comment . " AS 'lbl_azp_ibn_report_consolidated_t_cam_comment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_cam_concept . " AS 'lbl_azp_ibn_report_consolidated_t_cam_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_nit . " AS 'lbl_azp_ibn_report_consolidated_t_fur_nit',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_business . " AS 'lbl_azp_ibn_report_consolidated_t_fur_business',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_phone . " AS 'lbl_azp_ibn_report_consolidated_t_fur_phone',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_address . " AS 'lbl_azp_ibn_report_consolidated_t_fur_address',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_municipality . " AS 'lbl_azp_ibn_report_consolidated_t_fur_municipality',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_department . " AS 'lbl_azp_ibn_report_consolidated_t_fur_department',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_salary . " AS 'lbl_azp_ibn_report_consolidated_t_fur_salary',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_contributor . " AS 'lbl_azp_ibn_report_consolidated_t_fur_contributor',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_viable . " AS 'lbl_azp_ibn_report_consolidated_t_fur_viable',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_well . " AS 'lbl_azp_ibn_report_consolidated_t_fur_well',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_text_one . " AS 'lbl_azp_ibn_report_consolidated_t_fur_text_one',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_text_two . " AS 'lbl_azp_ibn_report_consolidated_t_fur_text_two',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_comment . " AS 'lbl_azp_ibn_report_consolidated_t_fur_comment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_fur_concept . " AS 'lbl_azp_ibn_report_consolidated_t_fur_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_outcome . " AS 'lbl_azp_ibn_report_consolidated_t_adr_outcome',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_state . " AS 'lbl_azp_ibn_report_consolidated_t_adr_state',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_municipality . " AS 'lbl_azp_ibn_report_consolidated_t_adr_municipality',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_regime . " AS 'lbl_azp_ibn_report_consolidated_t_adr_regime',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_entity . " AS 'lbl_azp_ibn_report_consolidated_t_adr_entity',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_adr_affiliate . " AS 'lbl_azp_ibn_report_consolidated_t_adr_affiliate',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_state . " AS 'lbl_azp_ibn_report_consolidated_t_war_state',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_creditor . " AS 'lbl_azp_ibn_report_consolidated_t_war_creditor',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_well . " AS 'lbl_azp_ibn_report_consolidated_t_war_well',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_detail . " AS 'lbl_azp_ibn_report_consolidated_t_war_detail',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_value . " AS 'lbl_azp_ibn_report_consolidated_t_war_value',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_date . " AS 'lbl_azp_ibn_report_consolidated_t_war_date',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_comment . " AS 'lbl_azp_ibn_report_consolidated_t_war_comment',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_war_concept . " AS 'lbl_azp_ibn_report_consolidated_t_war_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_well_viable . " AS 'lbl_azp_ibn_report_consolidated_t_inf_well_viable',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_concept . " AS 'lbl_azp_ibn_report_consolidated_t_inf_concept',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_viability . " AS 'lbl_azp_ibn_report_consolidated_t_inf_viability',
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_effective . " AS 'lbl_azp_ibn_report_consolidated_t_inf_effective'
				FROM " . t_azp_ibn_report_consolidated . " tc_azp_ibn_report_consolidated
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_m_deleted . " = '1'
					AND tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_bas_validate . " = '1'
				ORDER BY tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_bas_control . " ASC,
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_t_inf_consecutive . " ASC,
					tc_azp_ibn_report_consolidated." . d_azp_ibn_report_consolidated_id_azp_ibn_report_consolidated . " ASC
			");
		}










		# Query Sql Select
		final public function sql_controller_ibn_control_panel_detail() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_created . " AS 'lbl_azp_ibn_control_panel_m_date_created',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_date_modified . " AS 'lbl_azp_ibn_control_panel_m_date_modified',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_description . " AS 'lbl_azp_ibn_control_panel_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
				ORDER BY tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_ibn_data_report() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_id_azp_ibn_report_general . " AS 'lbl_azp_ibn_report_general_id_azp_ibn_report_general',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_date_created . " AS 'lbl_azp_ibn_report_general_m_date_created',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_date_modified . " AS 'lbl_azp_ibn_report_general_m_date_modified',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_description . " AS 'lbl_azp_ibn_report_general_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_bas_account . " AS 'lbl_azp_ibn_report_general_t_bas_account',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_bas_validate . " AS 'lbl_azp_ibn_report_general_t_bas_validate',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_consecutive . " AS 'lbl_azp_ibn_report_general_t_inf_consecutive',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_entity . " AS 'lbl_azp_ibn_report_general_t_inf_entity',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_identification . " AS 'lbl_azp_ibn_report_general_t_inf_identification',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_full_name . " AS 'lbl_azp_ibn_report_general_t_inf_full_name',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_type_property . " AS 'lbl_azp_ibn_report_general_t_pro_type_property',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_enrollment . " AS 'lbl_azp_ibn_report_general_t_pro_enrollment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_address . " AS 'lbl_azp_ibn_report_general_t_pro_address',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_municipality . " AS 'lbl_azp_ibn_report_general_t_pro_municipality',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_department . " AS 'lbl_azp_ibn_report_general_t_pro_department',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_area . " AS 'lbl_azp_ibn_report_general_t_pro_area',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_purchase . " AS 'lbl_azp_ibn_report_general_t_pro_purchase',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_ownership . " AS 'lbl_azp_ibn_report_general_t_pro_ownership',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_vr_market . " AS 'lbl_azp_ibn_report_general_t_pro_vr_market',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_assessment . " AS 'lbl_azp_ibn_report_general_t_pro_assessment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_viable . " AS 'lbl_azp_ibn_report_general_t_pro_viable',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_well . " AS 'lbl_azp_ibn_report_general_t_pro_well',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_one . " AS 'lbl_azp_ibn_report_general_t_pro_text_one',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_two . " AS 'lbl_azp_ibn_report_general_t_pro_text_two',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_three . " AS 'lbl_azp_ibn_report_general_t_pro_text_three',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_four . " AS 'lbl_azp_ibn_report_general_t_pro_text_four',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_five . " AS 'lbl_azp_ibn_report_general_t_pro_text_five',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_six . " AS 'lbl_azp_ibn_report_general_t_pro_text_six',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_seven . " AS 'lbl_azp_ibn_report_general_t_pro_text_seven',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_text_eight . " AS 'lbl_azp_ibn_report_general_t_pro_text_eight',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_sel_one . " AS 'lbl_azp_ibn_report_general_t_pro_sel_one',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_sel_two . " AS 'lbl_azp_ibn_report_general_t_pro_sel_two',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_sel_three . " AS 'lbl_azp_ibn_report_general_t_pro_sel_three',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_sel_four . " AS 'lbl_azp_ibn_report_general_t_pro_sel_four',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_sel_five . " AS 'lbl_azp_ibn_report_general_t_pro_sel_five',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_comment . " AS 'lbl_azp_ibn_report_general_t_pro_comment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_concept . " AS 'lbl_azp_ibn_report_general_t_pro_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_pro_unified . " AS 'lbl_azp_ibn_report_general_t_pro_unified',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_plaque . " AS 'lbl_azp_ibn_report_general_t_veh_plaque',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_class . " AS 'lbl_azp_ibn_report_general_t_veh_class',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_mark . " AS 'lbl_azp_ibn_report_general_t_veh_mark',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_model . " AS 'lbl_azp_ibn_report_general_t_veh_model',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_city . " AS 'lbl_azp_ibn_report_general_t_veh_city',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_service . " AS 'lbl_azp_ibn_report_general_t_veh_service',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_color . " AS 'lbl_azp_ibn_report_general_t_veh_color',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_line . " AS 'lbl_azp_ibn_report_general_t_veh_line',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_make . " AS 'lbl_azp_ibn_report_general_t_veh_make',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_value . " AS 'lbl_azp_ibn_report_general_t_veh_value',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_assessment . " AS 'lbl_azp_ibn_report_general_t_veh_assessment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_vehicle . " AS 'lbl_azp_ibn_report_general_t_veh_vehicle',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_viable . " AS 'lbl_azp_ibn_report_general_t_veh_viable',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_well . " AS 'lbl_azp_ibn_report_general_t_veh_well',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_text_one . " AS 'lbl_azp_ibn_report_general_t_veh_text_one',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_text_two . " AS 'lbl_azp_ibn_report_general_t_veh_text_two',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_text_three . " AS 'lbl_azp_ibn_report_general_t_veh_text_three',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_text_four . " AS 'lbl_azp_ibn_report_general_t_veh_text_four',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_text_five . " AS 'lbl_azp_ibn_report_general_t_veh_text_five',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_sel_one . " AS 'lbl_azp_ibn_report_general_t_veh_sel_one',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_sel_two . " AS 'lbl_azp_ibn_report_general_t_veh_sel_two',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_sel_three . " AS 'lbl_azp_ibn_report_general_t_veh_sel_three',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_comment . " AS 'lbl_azp_ibn_report_general_t_veh_comment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_concept . " AS 'lbl_azp_ibn_report_general_t_veh_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_veh_unified . " AS 'lbl_azp_ibn_report_general_t_veh_unified',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_certified . " AS 'lbl_azp_ibn_report_general_t_cam_certified',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_company . " AS 'lbl_azp_ibn_report_general_t_cam_company',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_organization . " AS 'lbl_azp_ibn_report_general_t_cam_organization',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_enrollment . " AS 'lbl_azp_ibn_report_general_t_cam_enrollment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_renewal . " AS 'lbl_azp_ibn_report_general_t_cam_renewal',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_nit . " AS 'lbl_azp_ibn_report_general_t_cam_nit',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_business . " AS 'lbl_azp_ibn_report_general_t_cam_business',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_establishment . " AS 'lbl_azp_ibn_report_general_t_cam_establishment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_city . " AS 'lbl_azp_ibn_report_general_t_cam_city',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_municipality . " AS 'lbl_azp_ibn_report_general_t_cam_municipality',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_department . " AS 'lbl_azp_ibn_report_general_t_cam_department',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_address . " AS 'lbl_azp_ibn_report_general_t_cam_address',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_phone . " AS 'lbl_azp_ibn_report_general_t_cam_phone',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_active . " AS 'lbl_azp_ibn_report_general_t_cam_active',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_rup . " AS 'lbl_azp_ibn_report_general_t_cam_rup',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_rp_full_name . " AS 'lbl_azp_ibn_report_general_t_cam_rp_full_name',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_rp_identification . " AS 'lbl_azp_ibn_report_general_t_cam_rp_identification',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_assessment . " AS 'lbl_azp_ibn_report_general_t_cam_assessment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_viable . " AS 'lbl_azp_ibn_report_general_t_cam_viable',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_well . " AS 'lbl_azp_ibn_report_general_t_cam_well',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_comment . " AS 'lbl_azp_ibn_report_general_t_cam_comment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_cam_concept . " AS 'lbl_azp_ibn_report_general_t_cam_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_nit . " AS 'lbl_azp_ibn_report_general_t_fur_nit',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_business . " AS 'lbl_azp_ibn_report_general_t_fur_business',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_phone . " AS 'lbl_azp_ibn_report_general_t_fur_phone',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_address . " AS 'lbl_azp_ibn_report_general_t_fur_address',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_municipality . " AS 'lbl_azp_ibn_report_general_t_fur_municipality',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_department . " AS 'lbl_azp_ibn_report_general_t_fur_department',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_salary . " AS 'lbl_azp_ibn_report_general_t_fur_salary',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_contributor . " AS 'lbl_azp_ibn_report_general_t_fur_contributor',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_viable . " AS 'lbl_azp_ibn_report_general_t_fur_viable',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_well . " AS 'lbl_azp_ibn_report_general_t_fur_well',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_text_one . " AS 'lbl_azp_ibn_report_general_t_fur_text_one',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_text_two . " AS 'lbl_azp_ibn_report_general_t_fur_text_two',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_comment . " AS 'lbl_azp_ibn_report_general_t_fur_comment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_fur_concept . " AS 'lbl_azp_ibn_report_general_t_fur_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_outcome . " AS 'lbl_azp_ibn_report_general_t_adr_outcome',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_state . " AS 'lbl_azp_ibn_report_general_t_adr_state',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_municipality . " AS 'lbl_azp_ibn_report_general_t_adr_municipality',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_regime . " AS 'lbl_azp_ibn_report_general_t_adr_regime',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_entity . " AS 'lbl_azp_ibn_report_general_t_adr_entity',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_adr_affiliate . " AS 'lbl_azp_ibn_report_general_t_adr_affiliate',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_state . " AS 'lbl_azp_ibn_report_general_t_war_state',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_creditor . " AS 'lbl_azp_ibn_report_general_t_war_creditor',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_well . " AS 'lbl_azp_ibn_report_general_t_war_well',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_detail . " AS 'lbl_azp_ibn_report_general_t_war_detail',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_value . " AS 'lbl_azp_ibn_report_general_t_war_value',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_date . " AS 'lbl_azp_ibn_report_general_t_war_date',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_comment . " AS 'lbl_azp_ibn_report_general_t_war_comment',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_war_concept . " AS 'lbl_azp_ibn_report_general_t_war_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_well_viable . " AS 'lbl_azp_ibn_report_general_t_inf_well_viable',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_concept . " AS 'lbl_azp_ibn_report_general_t_inf_concept',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_viability . " AS 'lbl_azp_ibn_report_general_t_inf_viability',
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_effective . " AS 'lbl_azp_ibn_report_general_t_inf_effective'
				FROM " . t_azp_ibn_report_general . " tc_azp_ibn_report_general
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				WHERE tc_azp_ibn_report_general." . d_azp_ibn_report_general_m_deleted . " = '1'
					AND tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_bas_validate . " = '1'
				ORDER BY tc_azp_ibn_report_general." . d_azp_ibn_report_general_t_inf_consecutive . " ASC,
					tc_azp_ibn_report_general." . d_azp_ibn_report_general_id_azp_ibn_report_general . " ASC
			");
		}






		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_effective() {
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera,
				d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_camera_m_deleted . " = '1' ORDER BY " . d_azp_ibn_camera_t_policy_effective . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_camera_t_identification];
					$var_pc_ac = $value[d_azp_ibn_camera_t_acount];
					$var_pc_ef = $value[d_azp_ibn_camera_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_e_camera => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_ef_cam => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture,
				d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_furniture_m_deleted . " = '1' ORDER BY " . d_azp_ibn_furniture_t_policy_effective . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_furniture_t_identification];
					$var_pc_ac = $value[d_azp_ibn_furniture_t_acount];
					$var_pc_ef = $value[d_azp_ibn_furniture_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_e_furniture => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_ef_fur => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property,
				d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_property_m_deleted . " = '1' ORDER BY " . d_azp_ibn_property_t_policy_effective . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_property_t_identification];
					$var_pc_ac = $value[d_azp_ibn_property_t_acount];
					$var_pc_ef = $value[d_azp_ibn_property_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_e_property => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_ef_pro => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle,
				d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_vehicle_m_deleted . " = '1' ORDER BY " . d_azp_ibn_vehicle_t_policy_effective . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_vehicle_t_identification];
					$var_pc_ac = $value[d_azp_ibn_vehicle_t_acount];
					$var_pc_ef = $value[d_azp_ibn_vehicle_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_e_vehicle => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_ef_veh => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty,
				d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_warranty_m_deleted . " = '1' ORDER BY " . d_azp_ibn_warranty_t_policy_effective . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_warranty_t_identification];
					$var_pc_ac = $value[d_azp_ibn_warranty_t_acount];
					$var_pc_ef = $value[d_azp_ibn_warranty_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_e_warranty => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_ef_war => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_evaluation, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_identification = $value[d_azp_ibn_evaluation_t_identification];					
					$var_pc_ef_cam = $value[d_azp_ibn_evaluation_t_policy_ef_cam];
					$var_pc_ef_fur = $value[d_azp_ibn_evaluation_t_policy_ef_fur];
					$var_pc_ef_pro = $value[d_azp_ibn_evaluation_t_policy_ef_pro];
					$var_pc_ef_veh = $value[d_azp_ibn_evaluation_t_policy_ef_veh];
					$var_pc_ef_war = $value[d_azp_ibn_evaluation_t_policy_ef_war];
					# Verificar si el resultado de la sql es verdadero o falso
					if ($var_pc_ef_cam == 'POSITIVO' || $var_pc_ef_fur == 'POSITIVO' || $var_pc_ef_pro == 'POSITIVO' || $var_pc_ef_veh == 'POSITIVO' || $var_pc_ef_war == 'POSITIVO') { $var_pc_ef = 'POSITIVO'; } else { $var_pc_ef = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_effective => $var_pc_ef,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_evaluation_t_identification . " = '" . $var_identification . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_evaluation, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_identification = $value[d_azp_ibn_evaluation_t_identification];
					$var_policy_effective = $value[d_azp_ibn_evaluation_t_policy_effective];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_effective => $var_policy_effective,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "'");
				endforeach;
			}
		}

		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_viability() {
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera,
				d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_camera_m_deleted . " = '1' ORDER BY " . d_azp_ibn_camera_t_policy_viability . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_camera_t_identification];
					$var_pc_ac = $value[d_azp_ibn_camera_t_acount];
					$var_pc_vb = $value[d_azp_ibn_camera_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_camera => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_vb_cam => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture,
				d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_furniture_m_deleted . " = '1' ORDER BY " . d_azp_ibn_furniture_t_policy_viability . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_furniture_t_identification];
					$var_pc_ac = $value[d_azp_ibn_furniture_t_acount];
					$var_pc_vb = $value[d_azp_ibn_furniture_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_furniture => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_vb_fur => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property,
				d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_property_m_deleted . " = '1' ORDER BY " . d_azp_ibn_property_t_policy_viability . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_property_t_identification];
					$var_pc_ac = $value[d_azp_ibn_property_t_acount];
					$var_pc_vb = $value[d_azp_ibn_property_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_property => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_vb_pro => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle,
				d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_vehicle_m_deleted . " = '1' ORDER BY " . d_azp_ibn_vehicle_t_policy_viability . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_vehicle_t_identification];
					$var_pc_ac = $value[d_azp_ibn_vehicle_t_acount];
					$var_pc_vb = $value[d_azp_ibn_vehicle_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_vehicle => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_vb_veh => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty,
				d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " .
				d_azp_ibn_warranty_m_deleted . " = '1' ORDER BY " . d_azp_ibn_warranty_t_policy_viability . " ASC");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				foreach ($var_sql as $key => $value):
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					$var_pc_id = $value[d_azp_ibn_warranty_t_identification];
					$var_pc_ac = $value[d_azp_ibn_warranty_t_acount];
					$var_pc_vb = $value[d_azp_ibn_warranty_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_warranty => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_t_identification . " = '" . $var_pc_id . "' AND " . d_azp_ibn_data_main_t_acount . " = '" . $var_pc_ac . "'");
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_vb_war => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_t_identification . " = '" . $var_pc_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_evaluation, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_identification = $value[d_azp_ibn_evaluation_t_identification];
					$var_pc_vb_cam = $value[d_azp_ibn_evaluation_t_policy_vb_cam];
					$var_pc_vb_fur = $value[d_azp_ibn_evaluation_t_policy_vb_fur];
					$var_pc_vb_pro = $value[d_azp_ibn_evaluation_t_policy_vb_pro];
					$var_pc_vb_veh = $value[d_azp_ibn_evaluation_t_policy_vb_veh];
					$var_pc_vb_war = $value[d_azp_ibn_evaluation_t_policy_vb_war];
					# Verificar si el resultado de la sql es verdadero o falso
					if ($var_pc_vb_cam == 'POSITIVO' || $var_pc_vb_fur == 'POSITIVO' || $var_pc_vb_pro == 'POSITIVO' || $var_pc_vb_veh == 'POSITIVO' || $var_pc_vb_war == 'POSITIVO') { $var_pc_vb = 'POSITIVO'; } else { $var_pc_vb = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_evaluation_t_policy_viability => $var_pc_vb,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_evaluation, $var_array, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_evaluation_t_identification . " = '" . $var_identification . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select('*', t_azp_ibn_evaluation, d_azp_ibn_evaluation_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					$var_identification = $value[d_azp_ibn_evaluation_t_identification];
					$var_policy_viability = $value[d_azp_ibn_evaluation_t_policy_viability];
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_viability => $var_policy_viability,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_t_identification . " = '" . $var_identification . "'");
				endforeach;
			}
		}








		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_viability_general() {
			$var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = '';
			$var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = '';
			$var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = '';
			$var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = '';
			$var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = '';
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_id_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; endforeach; } else { $var_id_client = 0; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '5'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '2'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '3'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '4'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					$var_camera_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_camera_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_camera_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_camera_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					$var_furniture_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_furniture_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_furniture_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_furniture_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					$var_property_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_property_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_property_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_property_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					$var_vehicle_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_vehicle_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_vehicle_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_vehicle_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					$var_warranty_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_warranty_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_warranty_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_warranty_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_camera_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_camera_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_camera_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_furniture_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_furniture_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_furniture_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_property_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_property_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_property_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_vehicle_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_vehicle_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_vehicle_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_warranty_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_warranty_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_warranty_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_camera_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_index != '') { $var_camera_key = $value[$var_camera_index]; } else { $var_camera_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_operator == '==') { if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; } } else { $var_cam_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_camera => $var_cam_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_furniture_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_index != '') { $var_furniture_key = $value[$var_furniture_index]; } else { $var_furniture_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_operator == '==') { if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; } } else { $var_fur_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_furniture => $var_fur_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_property_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_index != '') { $var_property_key = $value[$var_property_index]; } else { $var_property_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_operator == '==') { if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; } } else { $var_pro_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_property => $var_pro_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_vehicle_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_index != '') { $var_vehicle_key = $value[$var_vehicle_index]; } else { $var_vehicle_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_operator == '==') { if ($var_vehicle_value == $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'NEGATIVO'; } } else { $var_veh_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_vehicle => $var_veh_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_warranty_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_index != '') { $var_warranty_key = $value[$var_warranty_index]; } else { $var_warranty_key = ''; }
					#-------------------------------------------------------------------------#
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_state, d_azp_ibn_state_v_id_azp_ibn_module . " = '4' AND " . d_azp_ibn_state_t_name . " = '" . $var_warranty_value . "'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_warranty_value = $value[d_azp_ibn_state_id_azp_ibn_state]; endforeach; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_operator == '==') { if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; } } else { $var_war_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_v_warranty => $var_war_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_data_main_t_identification];
					$empty_policy_camera = $value[d_azp_ibn_data_main_t_policy_v_camera];
					$empty_policy_furniture = $value[d_azp_ibn_data_main_t_policy_v_furniture];
					$empty_policy_property = $value[d_azp_ibn_data_main_t_policy_v_property];
					$empty_policy_vehicle = $value[d_azp_ibn_data_main_t_policy_v_vehicle];
					$empty_policy_warranty = $value[d_azp_ibn_data_main_t_policy_v_warranty];
					$empty_pcy_con_cam = $value[d_azp_ibn_data_main_t_policy_e_con_cam];
					$empty_pcy_con_fur = $value[d_azp_ibn_data_main_t_policy_e_con_fur];
					$empty_pcy_con_pro = $value[d_azp_ibn_data_main_t_policy_e_con_pro];
					$empty_pcy_con_veh = $value[d_azp_ibn_data_main_t_policy_e_con_veh];
					$empty_pcy_con_war = $value[d_azp_ibn_data_main_t_policy_e_con_war];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($empty_policy_camera == 'POSITIVO' ||
						$empty_policy_furniture == 'POSITIVO' ||
						$empty_policy_property == 'POSITIVO' ||
						$empty_policy_vehicle == 'POSITIVO' ||
						$empty_policy_warranty == 'POSITIVO'
					) { $var_policy_viability = 'POSITIVO'; } else { $var_policy_viability = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_viability => $var_policy_viability,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
		}

		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_viability_individual() {
			$var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = '';
			$var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = '';
			$var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = '';
			$var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = '';
			$var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = '';
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_id_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; endforeach; } else { $var_id_client = 0; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
				ORDER BY tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " ASC
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '5'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
				ORDER BY tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " ASC
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '2'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
				ORDER BY tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " ASC
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '3'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
				ORDER BY tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " ASC
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '4'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '1'
				ORDER BY tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " ASC
			");
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					$var_camera_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_camera_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_camera_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_camera_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					$var_furniture_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_furniture_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_furniture_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_furniture_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					$var_property_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_property_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_property_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_property_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					$var_vehicle_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_vehicle_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_vehicle_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_vehicle_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					$var_warranty_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_warranty_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_warranty_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_warranty_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_camera_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_camera_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_camera_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_furniture_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_furniture_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_furniture_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_property_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_property_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_property_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_vehicle_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_vehicle_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_vehicle_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_warranty_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_warranty_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_warranty_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_camera_t_acount];
					$empty_identification = $value[d_azp_ibn_camera_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_index != '') { $var_camera_key = $value[$var_camera_index]; } else { $var_camera_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_operator == '==') { if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; } } else { $var_cam_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_camera_t_policy_viability => $var_cam_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_camera, $var_array,
						d_azp_ibn_camera_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_camera_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_furniture_t_acount];
					$empty_identification = $value[d_azp_ibn_furniture_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_index != '') { $var_furniture_key = $value[$var_furniture_index]; } else { $var_furniture_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_operator == '==') { if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; } } else { $var_fur_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_furniture_t_policy_viability => $var_fur_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_furniture, $var_array,
						d_azp_ibn_furniture_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_furniture_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_property_t_acount];
					$empty_identification = $value[d_azp_ibn_property_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_index != '') { $var_property_key = $value[$var_property_index]; } else { $var_property_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_operator == '==') { if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; } } else { $var_pro_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_property_t_policy_viability => $var_pro_policy,);
					# Query Sql Update: Actualizar valoaacoun AND t . segun sus camp de la tabla segun sus campos
					$this->db->update(t_azp_ibn_property, $var_array,
						d_azp_ibn_property_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_property_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_vehicle_t_acount];
					$empty_identification = $value[d_azp_ibn_vehicle_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_index != '') { $var_vehicle_key = $value[$var_vehicle_index]; } else { $var_vehicle_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_operator == '==') { if ($var_vehicle_value == $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'NEGATIVO'; } } else { $var_veh_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_vehicle_t_policy_viability => $var_veh_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_vehicle, $var_array,
						d_azp_ibn_vehicle_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_vehicle_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_warranty_t_acount];
					$empty_identification = $value[d_azp_ibn_warranty_t_identification];
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_index != '') { $var_warranty_key = $value[$var_warranty_index]; } else { $var_warranty_key = ''; }
					#-------------------------------------------------------------------------#
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_state, d_azp_ibn_state_v_id_azp_ibn_module . " = '4' AND " . d_azp_ibn_state_t_name . " = '" . $var_warranty_value . "'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_warranty_value = $value[d_azp_ibn_state_id_azp_ibn_state]; endforeach; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_operator == '==') { if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; } } else { $var_war_policy = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_warranty_t_policy_viability => $var_war_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_warranty, $var_array,
						d_azp_ibn_warranty_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_warranty_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
		}

		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_effective_general() {
			$var_neg = 'NEGATIVO'; $var_pos = 'POSITIVO';
			$var_camera_id = ''; $var_furniture_id = ''; $var_property_id = ''; $var_vehicle_id = ''; $var_warranty_id = '';
			$var_camera_condt = ''; $var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = '';
			$var_furniture_condt = ''; $var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = '';
			$var_property_condt = ''; $var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = '';
			$var_vehicle_condt = ''; $var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = '';
			$var_warranty_condt = ''; $var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = '';
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_id_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; endforeach; } else { $var_id_client = 0; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_m_deleted . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_m_deleted . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '5'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_m_deleted . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '2'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_m_deleted . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '3'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_m_deleted . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '4'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					$var_camera_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_camera_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_camera_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_camera_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_camera_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_camera_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_camera_id = ''; $var_camera_condt = ''; $var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					$var_furniture_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_furniture_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_furniture_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_furniture_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_furniture_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_furniture_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_furniture_id = ''; $var_furniture_condt = ''; $var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					$var_property_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_property_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_property_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_property_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_property_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_property_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_property_id = ''; $var_property_condt = ''; $var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					$var_vehicle_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_vehicle_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_vehicle_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_vehicle_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_vehicle_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_vehicle_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_vehicle_id = ''; $var_vehicle_condt = ''; $var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					$var_warranty_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_warranty_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_warranty_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_warranty_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_warranty_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_warranty_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_warranty_id = ''; $var_warranty_condt = ''; $var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_camera_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_camera_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_camera_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_furniture_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_furniture_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_furniture_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_property_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_property_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_property_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_vehicle_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_vehicle_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_vehicle_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_warranty_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_warranty_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_warranty_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_camera_m_deleted . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_camera_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_index != '') { $var_camera_key = $value[$var_camera_index]; } else { $var_camera_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_camera_operator == '==') { if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; }
					//} else if ($var_camera_key . $var_camera_operator . $var_camera_value) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; }

					if ($var_camera_id == '6') {
						if ($var_camera_value . $var_camera_operator . $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = $var_neg; }
					} else if ($var_camera_id == '11') {
						if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = $var_neg; }
					} else { $var_cam_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_data_main_t_policy_e_camera => $var_cam_policy,
						d_azp_ibn_data_main_t_policy_e_con_cam => $var_camera_condt,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_furniture_m_deleted . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_furniture_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_index != '') { $var_furniture_key = $value[$var_furniture_index]; } else { $var_furniture_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_furniture_operator == '==') { if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; }
					//} else if ($var_furniture_key . $var_furniture_operator . $var_furniture_value) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; }

					if ($var_furniture_id == '10') {
						if ($var_furniture_value . $var_furniture_operator . $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = $var_neg; }
					} else if ($var_furniture_id == '15') {
						if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = $var_neg; }
					} else { $var_fur_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_data_main_t_policy_e_furniture => $var_fur_policy,
						d_azp_ibn_data_main_t_policy_e_con_fur => $var_furniture_condt,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_property_m_deleted . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_property_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_index != '') { $var_property_key = $value[$var_property_index]; } else { $var_property_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_property_operator == '==') { if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; }
					//} else if ($var_property_key . $var_property_operator . $var_property_value) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; }

					if ($var_property_id == '7') {
						if ($var_property_value . $var_property_operator . $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = $var_neg; }
					} else if ($var_property_id == '12') {
						if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = $var_neg; }
					} else { $var_pro_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_data_main_t_policy_e_property => $var_pro_policy,
						d_azp_ibn_data_main_t_policy_e_con_pro => $var_property_condt,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			} else {
				if ($var_property_id == '7' || $var_property_id == '12') {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_property => 'NEGATIVO',
								d_azp_ibn_data_main_t_policy_e_con_pro => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				} else {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_property => 'POSITIVO',
								d_azp_ibn_data_main_t_policy_e_con_pro => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				}
			}
			/* else {
				if ($var_property_operator == '==') {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_property => 'NEGATIVO',
								d_azp_ibn_data_main_t_policy_e_con_pro => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				} else {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_property => 'POSITIVO',
								d_azp_ibn_data_main_t_policy_e_con_pro => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				}
			}*/
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_vehicle_m_deleted . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_vehicle_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_index != '') { $var_vehicle_key = $value[$var_vehicle_index]; } else { $var_vehicle_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					/*if ($var_vehicle_operator == '==' && $var_vehicle_key . $var_vehicle_operator . $var_vehicle_value) {
						$var_sub_veh = substr($var_vehicle_key, 0, 5);
						if ($var_sub_veh == $var_vehicle_value) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'POSITIVO'; }
					} else if ($var_vehicle_key . $var_vehicle_operator . $var_vehicle_value) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'NEGATIVO'; }*/

					if ($var_vehicle_id == '8') {
						if ($var_vehicle_value . $var_vehicle_operator . $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = $var_neg; }
					} else if ($var_vehicle_id == '13') {
						if ($var_vehicle_value == $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = $var_neg; }
					} else { $var_veh_policy = $var_neg; }					
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_data_main_t_policy_e_vehicle => $var_veh_policy,
						d_azp_ibn_data_main_t_policy_e_con_veh => $var_vehicle_condt,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			} else {
				if ($var_vehicle_id == '16') {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_vehicle => 'NEGATIVO',
								d_azp_ibn_data_main_t_policy_e_con_veh => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				} else {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_vehicle => 'NEGATIVO',
								d_azp_ibn_data_main_t_policy_e_con_veh => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				}
			}

			/* else {
				if ($var_vehicle_operator == '==' && $var_vehicle_land != 60) {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_vehicle => 'NEGATIVO',
								d_azp_ibn_data_main_t_policy_e_con_veh => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				} else if ($var_vehicle_operator == '==' && $var_vehicle_land == 60) {
					# Verificar en la base de datos si existen el registro
					$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_data_main_m_deleted . " = '1'");
					# Verificar si el resultado de la sql es verdadero o falso
					if (true == $var_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sql as $key => $value):
							# Asignacion de valores a nuevas variables
							$empty_identification = $value[d_azp_ibn_data_main_t_identification];
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(
								d_azp_ibn_data_main_t_policy_e_vehicle => 'POSITIVO',
								d_azp_ibn_data_main_t_policy_e_con_veh => 'O',
							);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array,
								d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
								d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
							);
						endforeach;
					}
				}
			}*/
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "' AND " . d_azp_ibn_warranty_m_deleted . " = '1'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_warranty_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_index != '') { $var_warranty_key = $value[$var_warranty_index]; } else { $var_warranty_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_warranty_operator == '==') { if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; }
					//} else if ($var_warranty_key . $var_warranty_operator . $var_warranty_value) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; }

					if ($var_warranty_id == '9') {
						if ($var_warranty_value . $var_warranty_operator . $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = $var_neg; }
					} else if ($var_warranty_id == '14') {
						if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = $var_neg; }
					} else { $var_war_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_data_main_t_policy_e_warranty => $var_war_policy,
						d_azp_ibn_data_main_t_policy_e_con_war => $var_warranty_condt,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_identification = $value[d_azp_ibn_data_main_t_identification];
					$empty_pcy_val_cam = $value[d_azp_ibn_data_main_t_policy_e_camera];
					$empty_pcy_val_fur = $value[d_azp_ibn_data_main_t_policy_e_furniture];
					$empty_pcy_val_pro = $value[d_azp_ibn_data_main_t_policy_e_property];
					$empty_pcy_val_veh = $value[d_azp_ibn_data_main_t_policy_e_vehicle];
					$empty_pcy_val_war = $value[d_azp_ibn_data_main_t_policy_e_warranty];
					$empty_pcy_con_cam = $value[d_azp_ibn_data_main_t_policy_e_con_cam];
					$empty_pcy_con_fur = $value[d_azp_ibn_data_main_t_policy_e_con_fur];
					$empty_pcy_con_pro = $value[d_azp_ibn_data_main_t_policy_e_con_pro];
					$empty_pcy_con_veh = $value[d_azp_ibn_data_main_t_policy_e_con_veh];
					$empty_pcy_con_war = $value[d_azp_ibn_data_main_t_policy_e_con_war];

					//echo 'Individual' . ' ' . 'Cameras' . ' ' . $empty_pcy_val_cam . ' ' . $empty_identification . '<br>';
					//echo 'Individual' . ' ' . 'Salarios' . ' ' . $empty_pcy_val_fur . ' ' . $empty_identification . '<br>';
					//echo 'Individual' . ' ' . 'Inmuebles' . ' ' . $empty_pcy_val_pro . ' ' . $empty_identification . '<br>';
					//echo 'Individual' . ' ' . 'Vehiculos' . ' ' . $empty_pcy_val_veh . ' ' . $empty_identification . '<br>';
					//echo 'Individual' . ' ' . 'Garantias' . ' ' . $empty_pcy_val_war . ' ' . $empty_identification . '<br>';

					//echo '<br>';

					//echo $var_vehicle_id . '<br>';

					//echo $var_camera_id . '<br>';
					//echo $var_furniture_id . '<br>';
					//echo $var_property_id . '<br>';
					//echo $var_vehicle_id . '<br>';
					//echo $var_warranty_id . '<br>';
					if ($var_vehicle_id == '16') {
						if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_cam;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_fur;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_pro;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_veh;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = $empty_pcy_val_war;
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//echo "cambiar";
						} else { $var_policy_effective = 'POSITIVO'; }




					} else if ($var_camera_id == '6' || $var_furniture_id == '10' || $var_property_id == '7' || $var_vehicle_id == '8' || $var_warranty_id == '9') {
						if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_cam;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_fur;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_pro;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_veh;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = $empty_pcy_val_war;
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
						} else { $var_policy_effective = 'NEGATIVO'; }
					} else if ($var_camera_id == '11' || $var_furniture_id == '15' || $var_property_id == '12' || $var_vehicle_id == '13' || $var_warranty_id == '14') {
						# Control de validacion para asignacion de valores a nuevas variables
						if ($empty_pcy_val_cam == $var_pos || $empty_pcy_val_fur == $var_pos || $empty_pcy_val_pro == $var_pos || $empty_pcy_val_veh == $var_pos || $empty_pcy_val_war == $var_pos ) {
							$var_policy_effective = $var_pos;
						} else { $var_policy_effective = $var_neg; }
					}

					//echo 'Calificacion' . ' ' . $var_policy_effective . '<br>';

					//echo '<br>';

					#-------------------------------------------------------------------------#
					//if ($var_vehicle_land != 60 && $var_vehicle_operator == '==') {
					/*if ($var_camera_operator == '==' && $var_furniture_operator == '==' && $var_property_operator == '==' && $var_vehicle_operator == '==' && $var_warranty_operator == '==' && $var_vehicle_land != 60) {

						//echo '<br>';
						//echo $empty_pcy_val_cam . ' ' . $empty_identification . '<br>';
						//echo $empty_pcy_val_fur . ' ' . $empty_identification . '<br>';
						//echo $empty_pcy_val_pro . ' ' . $empty_identification . '<br>';
						//echo $empty_pcy_val_veh . ' ' . $empty_identification . '<br>';
						//echo $empty_pcy_val_war . ' ' . $empty_identification . '<br>';

						//echo '<br>';

						# Control de validacion para asignacion de valores a nuevas variables
						if ($empty_pcy_val_cam == 'POSITIVO' ||
							$empty_pcy_val_fur == 'POSITIVO' ||
							$empty_pcy_val_pro == 'POSITIVO' ||
							$empty_pcy_val_veh == 'POSITIVO' ||
							$empty_pcy_val_war == 'POSITIVO'
						) { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }

						//echo $var_policy_effective . ' ' . $empty_identification . '<br>';

						//echo '-----------------';
					} else if ($var_vehicle_land == 60 && $var_vehicle_operator == '==') {
						
						if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = $empty_pcy_val_cam;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = $empty_pcy_val_fur;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = $empty_pcy_val_pro;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = $empty_pcy_val_veh;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = $empty_pcy_val_war;
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=' && $var_vehicle_operator == '==') {
							$var_policy_effective = 'POSITIVO';
						} else { $var_policy_effective = $empty_pcy_val_veh; }
					} else if ($var_camera_operator == '>=' || $var_furniture_operator == '>=' || $var_property_operator == '>=' || $var_vehicle_operator == '>=' || $var_warranty_operator == '>=') {
						if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_cam;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_fur;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_pro;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = $empty_pcy_val_veh;
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = $empty_pcy_val_war;
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_veh == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
							//if ($empty_pcy_val_cam == 'POSITIVO' && $empty_pcy_val_fur == 'POSITIVO' && $empty_pcy_val_pro == 'POSITIVO' && $empty_pcy_val_war == 'POSITIVO') { $var_policy_effective = 'POSITIVO'; } else { $var_policy_effective = 'NEGATIVO'; }
						#-------------------------------------------------------------------------#
						} else if ($var_camera_operator == '>=' && $var_furniture_operator == '>=' && $var_property_operator == '>=' && $var_vehicle_operator == '>=' && $var_warranty_operator == '>=') {
							$var_policy_effective = 'POSITIVO';
						} else { $var_policy_effective = 'NEGATIVO'; }
					#-------------------------------------------------------------------------#
					} else { $var_policy_effective = 'NEGATIVO'; }*/
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_data_main_t_policy_effective => $var_policy_effective,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_data_main, $var_array,
						d_azp_ibn_data_main_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
		}

		# Query Sql Insert
		final public function sql_tc_ibn_report_policy_effective_individual() {
			$var_neg = 'NEGATIVO'; $var_pos = 'POSITIVO';
			$var_camera_id = ''; $var_furniture_id = ''; $var_property_id = ''; $var_vehicle_id = ''; $var_warranty_id = '';
			$var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = '';
			$var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = '';
			$var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = '';
			$var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = '';
			$var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = '';
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_id_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; endforeach; } else { $var_id_client = 0; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '1'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '5'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '2'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '3'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_policy." . d_azp_ibn_policy_id_azp_ibn_policy . " AS 'lbl_azp_ibn_policy_id_azp_ibn_policy',
					tc_azp_user_created." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_created',
					tc_azp_user_modified." . d_azp_user_t_login . " AS 'lbl_azp_user_t_login_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_created . " AS 'lbl_azp_ibn_policy_m_date_created',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_date_modified . " AS 'lbl_azp_ibn_policy_m_date_modified',
					tc_azp_ibn_policy." . d_azp_ibn_policy_m_description . " AS 'lbl_azp_ibn_policy_m_description',
					tc_azp_sys_level." . d_azp_sys_level_t_name . " AS 'lbl_azp_sys_level_t_name',
					tc_azp_sys_state." . d_azp_sys_state_t_name . " AS 'lbl_azp_sys_state_t_name',
					tc_azp_ibn_policy." . d_azp_ibn_policy_t_conditional . " AS 'lbl_azp_ibn_policy_t_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . " AS 'lbl_azp_ibn_conditional_id_azp_ibn_conditional',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . " AS 'lbl_azp_ibn_conditional_t_land',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_operator . " AS 'lbl_azp_ibn_conditional_t_operator',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_result . " AS 'lbl_azp_ibn_conditional_t_result',
					tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_value . " AS 'lbl_azp_ibn_conditional_t_value',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name',
					tc_azp_ibn_module." . d_azp_ibn_module_t_name . " AS 'lbl_azp_ibn_module_t_name'
				FROM " . t_azp_ibn_policy . " tc_azp_ibn_policy
				
				INNER JOIN " . t_azp_user . " tc_azp_user_created
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_created . "
						= tc_azp_user_created." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_user . " tc_azp_user_modified
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_by_modified . "
						= tc_azp_user_modified." . d_azp_user_id_azp_user . "
				INNER JOIN " . t_azp_sys_level . " tc_azp_sys_level
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_level . "
						= tc_azp_sys_level." . d_azp_sys_level_t_value . "
				INNER JOIN " . t_azp_sys_state . " tc_azp_sys_state
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_m_status . "
						= tc_azp_sys_state." . d_azp_sys_state_t_value . "
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_conditional . " tc_azp_ibn_conditional
					ON tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_conditional . "
						= tc_azp_ibn_conditional." . d_azp_ibn_conditional_id_azp_ibn_conditional . "
				
				INNER JOIN " . t_azp_ibn_module . " tc_azp_ibn_module
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . "
						= tc_azp_ibn_module." . d_azp_ibn_module_id_azp_ibn_module . "
				
				INNER JOIN " . t_azp_ibn_table_field . " tc_azp_ibn_table_field
					ON tc_azp_ibn_conditional." . d_azp_ibn_conditional_t_land . "
						= tc_azp_ibn_table_field." . d_azp_ibn_table_field_id_azp_ibn_table_field . "
				
				WHERE tc_azp_ibn_policy." . d_azp_ibn_policy_v_id_azp_ibn_client . " = '" . $var_id_client . "'
					AND tc_azp_ibn_policy." . d_azp_ibn_policy_t_selector . " = 'SI'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_module . " = '4'
					AND tc_azp_ibn_conditional." . d_azp_ibn_conditional_v_id_azp_ibn_type_condition . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					$var_camera_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_camera_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_camera_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_camera_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_camera_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_camera_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_camera_id = ''; $var_camera_condt = ''; $var_camera_land = ''; $var_camera_operator = ''; $var_camera_result = ''; $var_camera_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					$var_furniture_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_furniture_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_furniture_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_furniture_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_furniture_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_furniture_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_furniture_id = ''; $var_furniture_condt = ''; $var_furniture_land = ''; $var_furniture_operator = ''; $var_furniture_result = ''; $var_furniture_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					$var_property_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_property_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_property_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_property_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_property_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_property_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_property_id = ''; $var_property_condt = ''; $var_property_land = ''; $var_property_operator = ''; $var_property_result = ''; $var_property_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					$var_vehicle_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_vehicle_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_vehicle_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_vehicle_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_vehicle_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_vehicle_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_vehicle_id = ''; $var_vehicle_condt = ''; $var_vehicle_land = ''; $var_vehicle_operator = ''; $var_vehicle_result = ''; $var_vehicle_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					$var_warranty_id = $value['lbl_azp_ibn_conditional_id_azp_ibn_conditional'];
					$var_warranty_condt = $value['lbl_azp_ibn_policy_t_conditional'];
					$var_warranty_land = $value['lbl_azp_ibn_conditional_t_land'];
					$var_warranty_operator = $value['lbl_azp_ibn_conditional_t_operator'];
					$var_warranty_result = $value['lbl_azp_ibn_conditional_t_result'];
					$var_warranty_value = $value['lbl_azp_ibn_conditional_t_value'];
				endforeach;
			} else { $var_warranty_id = ''; $var_warranty_condt = ''; $var_warranty_land = ''; $var_warranty_operator = ''; $var_warranty_result = ''; $var_warranty_value = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_camera_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_camera_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_camera_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_furniture_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_furniture_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_furniture_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_property_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_property_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_property_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_vehicle_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_vehicle_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_vehicle_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_table_field, d_azp_ibn_table_field_id_azp_ibn_table_field . " = '" . $var_warranty_land . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) { foreach ($var_sql as $key): $var_warranty_index = $key[d_azp_ibn_table_field_t_index]; endforeach; } else { $var_warranty_index = ''; }
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_camera, d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_camera_t_acount];
					$empty_identification = $value[d_azp_ibn_camera_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_camera_index != '') { $var_camera_key = $value[$var_camera_index]; } else { $var_camera_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_camera_key . $var_camera_operator . $var_camera_value) { $var_cam_policy = 'POSITIVO'; } else { $var_cam_policy = 'NEGATIVO'; }
					
					//if ($var_camera_operator == '==') { if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; }
					//} else if ($var_camera_key . $var_camera_operator . $var_camera_value) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = 'NEGATIVO'; }

					if ($var_camera_id == '6') {
						if ($var_camera_value . $var_camera_operator . $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = $var_neg; }
					} else if ($var_camera_id == '11') {
						if ($var_camera_value == $var_camera_key) { $var_cam_policy = $var_camera_result; } else { $var_cam_policy = $var_neg; }
					} else { $var_cam_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_camera_t_policy_effective => $var_cam_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_camera, $var_array,
						d_azp_ibn_camera_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_camera_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_furniture, d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_furniture_t_acount];
					$empty_identification = $value[d_azp_ibn_furniture_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_furniture_index != '') { $var_furniture_key = $value[$var_furniture_index]; } else { $var_furniture_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_furniture_key . $var_furniture_operator . $var_furniture_value) { $var_fur_policy = 'POSITIVO'; } else { $var_fur_policy = 'NEGATIVO'; }
					
					//if ($var_furniture_operator == '==') { if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; }
					//} else if ($var_furniture_key . $var_furniture_operator . $var_furniture_value) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = 'NEGATIVO'; }

					if ($var_furniture_id == '10') {
						if ($var_furniture_value . $var_furniture_operator . $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = $var_neg; }
					} else if ($var_furniture_id == '15') {
						if ($var_furniture_value == $var_furniture_key) { $var_fur_policy = $var_furniture_result; } else { $var_fur_policy = $var_neg; }
					} else { $var_fur_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_furniture_t_policy_effective => $var_fur_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_furniture, $var_array,
						d_azp_ibn_furniture_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_furniture_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_property, d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_property_t_acount];
					$empty_identification = $value[d_azp_ibn_property_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_property_index != '') { $var_property_key = $value[$var_property_index]; } else { $var_property_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_property_key . $var_property_operator . $var_property_value) { $var_pro_policy = 'POSITIVO'; } else { $var_pro_policy = 'NEGATIVO'; }

					//if ($var_property_operator == '==') { if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; }
					//} else if ($var_property_key . $var_property_operator . $var_property_value) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = 'NEGATIVO'; }

					if ($var_property_id == '7') {
						if ($var_property_value . $var_property_operator . $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = $var_neg; }
					} else if ($var_property_id == '12') {
						if ($var_property_value == $var_property_key) { $var_pro_policy = $var_property_result; } else { $var_pro_policy = $var_neg; }
					} else { $var_pro_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_property_t_policy_effective => $var_pro_policy,);
					# Query Sql Update: Actualizar valoaacoun AND t . segun sus camp de la tabla segun sus campos
					$this->db->update(t_azp_ibn_property, $var_array,
						d_azp_ibn_property_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_property_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_vehicle, d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_vehicle_t_acount];
					$empty_identification = $value[d_azp_ibn_vehicle_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_vehicle_index != '') { $var_vehicle_key = $value[$var_vehicle_index]; } else { $var_vehicle_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_vehicle_key . $var_vehicle_operator . $var_vehicle_value) { $var_veh_policy = 'POSITIVO'; } else { $var_veh_policy = 'NEGATIVO'; }
					
					//if ($var_vehicle_operator == '==') { if ($var_vehicle_value == $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'NEGATIVO'; }
					//} else if ($var_vehicle_key . $var_vehicle_operator . $var_vehicle_value) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = 'NEGATIVO'; }

					if ($var_vehicle_id == '8') {
						if ($var_vehicle_value . $var_vehicle_operator . $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = $var_neg; }
					} else if ($var_vehicle_id == '13') {
						if ($var_vehicle_value == $var_vehicle_key) { $var_veh_policy = $var_vehicle_result; } else { $var_veh_policy = $var_neg; }
					} else { $var_veh_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_vehicle_t_policy_effective => $var_veh_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_vehicle, $var_array,
						d_azp_ibn_vehicle_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_vehicle_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Verificar en la base de datos si existen el registro
			$var_sql = $this->db->select('*', t_azp_ibn_warranty, d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Verificar si el resultado de la sql es verdadero o falso
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$empty_acount = $value[d_azp_ibn_warranty_t_acount];
					$empty_identification = $value[d_azp_ibn_warranty_t_identification];
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					if ($var_warranty_index != '') { $var_warranty_key = $value[$var_warranty_index]; } else { $var_warranty_key = ''; }
					#-------------------------------------------------------------------------#
					# Control de validacion para asignacion de valores a nuevas variables
					//if ($var_warranty_key . $var_warranty_operator . $var_warranty_value) { $var_war_policy = 'POSITIVO'; } else { $var_war_policy = 'NEGATIVO'; }
					
					//if ($var_warranty_operator == '==') { if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; }
					//} else if ($var_warranty_key . $var_warranty_operator . $var_warranty_value) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = 'NEGATIVO'; }

					if ($var_warranty_id == '9') {
						if ($var_warranty_value . $var_warranty_operator . $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = $var_neg; }
					} else if ($var_warranty_id == '14') {
						if ($var_warranty_value == $var_warranty_key) { $var_war_policy = $var_warranty_result; } else { $var_war_policy = $var_neg; }
					} else { $var_war_policy = $var_neg; }
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_warranty_t_policy_effective => $var_war_policy,);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_warranty, $var_array,
						d_azp_ibn_warranty_t_acount . " = '" . $empty_acount . "' AND " .
						d_azp_ibn_warranty_t_identification . " = '" . $empty_identification . "' AND " .
						d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
				endforeach;
			}
		}










		# Query Sql Insert
		final public function sql_dsh_azp_ibn_control_panel_report_general() {
			# Organizacion de los valores capturados y asignados a los campos a insertar
			//$var_array = array(d_azp_ibn_control_panel_t_date_general => DATE,);
			# Insertar valores en la tabla segun estructura de la tabla
			//$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			#-------------------------------------------------------------------------#
			$this->db->query("DELETE FROM " . t_azp_ibn_report_general);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_general . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " != '1'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_fosyga = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_general_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_general_m_date_created => DATE_HOUR,
						d_azp_ibn_report_general_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_general_m_deleted => '1',
						d_azp_ibn_report_general_m_description => '',
						d_azp_ibn_report_general_m_level => '2',
						d_azp_ibn_report_general_m_status => '1',
						d_azp_ibn_report_general_m_temp => '1',
						d_azp_ibn_report_general_t_bas_formula => strtoupper('0'),
						d_azp_ibn_report_general_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_general_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_general_t_inf_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_general_t_inf_entity => strtoupper(''),
						d_azp_ibn_report_general_t_inf_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_general_t_inf_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_general_t_inf_well_viable => strtoupper(''),
						d_azp_ibn_report_general_t_inf_concept => strtoupper(''),
						d_azp_ibn_report_general_t_inf_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),
						d_azp_ibn_report_general_t_inf_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),

						d_azp_ibn_report_general_t_pro_type_property => '',
						d_azp_ibn_report_general_t_pro_enrollment => '',
						d_azp_ibn_report_general_t_pro_address => '',
						d_azp_ibn_report_general_t_pro_municipality => '',
						d_azp_ibn_report_general_t_pro_department => '',
						d_azp_ibn_report_general_t_pro_area => '',
						d_azp_ibn_report_general_t_pro_purchase => '',
						d_azp_ibn_report_general_t_pro_ownership => '',
						d_azp_ibn_report_general_t_pro_vr_market => '',
						d_azp_ibn_report_general_t_pro_assessment => '',
						d_azp_ibn_report_general_t_pro_viable => '',
						d_azp_ibn_report_general_t_pro_well => '',
						d_azp_ibn_report_general_t_pro_text_one => '',
						d_azp_ibn_report_general_t_pro_text_two => '',
						d_azp_ibn_report_general_t_pro_text_three => '',
						d_azp_ibn_report_general_t_pro_text_four => '',
						d_azp_ibn_report_general_t_pro_text_five => '',
						d_azp_ibn_report_general_t_pro_text_six => '',
						d_azp_ibn_report_general_t_pro_text_seven => '',
						d_azp_ibn_report_general_t_pro_text_eight => '',
						d_azp_ibn_report_general_t_pro_sel_one => '',
						d_azp_ibn_report_general_t_pro_sel_two => '',
						d_azp_ibn_report_general_t_pro_sel_three => '',
						d_azp_ibn_report_general_t_pro_sel_four => '',
						d_azp_ibn_report_general_t_pro_sel_five => '',
						d_azp_ibn_report_general_t_pro_comment => '',
						d_azp_ibn_report_general_t_pro_concept => '',
						d_azp_ibn_report_general_t_pro_unified => '',
						d_azp_ibn_report_general_t_pro_data => 'VACIO',

						d_azp_ibn_report_general_t_veh_plaque => '',
						d_azp_ibn_report_general_t_veh_class => '',
						d_azp_ibn_report_general_t_veh_mark => '',
						d_azp_ibn_report_general_t_veh_model => '',
						d_azp_ibn_report_general_t_veh_city => '',
						d_azp_ibn_report_general_t_veh_service => '',
						d_azp_ibn_report_general_t_veh_color => '',
						d_azp_ibn_report_general_t_veh_line => '',
						d_azp_ibn_report_general_t_veh_make => '',
						d_azp_ibn_report_general_t_veh_value => '',
						d_azp_ibn_report_general_t_veh_assessment => '',
						d_azp_ibn_report_general_t_veh_vehicle => '',
						d_azp_ibn_report_general_t_veh_viable => '',
						d_azp_ibn_report_general_t_veh_well => '',
						d_azp_ibn_report_general_t_veh_text_one => '',
						d_azp_ibn_report_general_t_veh_text_two => '',
						d_azp_ibn_report_general_t_veh_text_three => '',
						d_azp_ibn_report_general_t_veh_text_four => '',
						d_azp_ibn_report_general_t_veh_text_five => '',
						d_azp_ibn_report_general_t_veh_sel_one => '',
						d_azp_ibn_report_general_t_veh_sel_two => '',
						d_azp_ibn_report_general_t_veh_sel_three => '',
						d_azp_ibn_report_general_t_veh_comment => '',
						d_azp_ibn_report_general_t_veh_concept => '',
						d_azp_ibn_report_general_t_veh_unified => '',
						d_azp_ibn_report_general_t_veh_data => 'VACIO',

						d_azp_ibn_report_general_t_cam_certified => '',
						d_azp_ibn_report_general_t_cam_company => '',
						d_azp_ibn_report_general_t_cam_organization => '',
						d_azp_ibn_report_general_t_cam_enrollment => '',
						d_azp_ibn_report_general_t_cam_renewal => '',
						d_azp_ibn_report_general_t_cam_nit => '',
						d_azp_ibn_report_general_t_cam_business => '',
						d_azp_ibn_report_general_t_cam_establishment => '',
						d_azp_ibn_report_general_t_cam_city => '',
						d_azp_ibn_report_general_t_cam_municipality => '',
						d_azp_ibn_report_general_t_cam_department => '',
						d_azp_ibn_report_general_t_cam_address => '',
						d_azp_ibn_report_general_t_cam_phone => '',
						d_azp_ibn_report_general_t_cam_active => '',
						d_azp_ibn_report_general_t_cam_rup => '',
						d_azp_ibn_report_general_t_cam_rp_full_name => '',
						d_azp_ibn_report_general_t_cam_rp_identification => '',
						d_azp_ibn_report_general_t_cam_assessment => '',
						d_azp_ibn_report_general_t_cam_viable => '',
						d_azp_ibn_report_general_t_cam_well => '',
						d_azp_ibn_report_general_t_cam_comment => '',
						d_azp_ibn_report_general_t_cam_concept => '',
						d_azp_ibn_report_general_t_cam_data => 'VACIO',

						d_azp_ibn_report_general_t_fur_nit => '',
						d_azp_ibn_report_general_t_fur_business => '',
						d_azp_ibn_report_general_t_fur_phone => '',
						d_azp_ibn_report_general_t_fur_address => '',
						d_azp_ibn_report_general_t_fur_municipality => '',
						d_azp_ibn_report_general_t_fur_department => '',
						d_azp_ibn_report_general_t_fur_salary => '',
						d_azp_ibn_report_general_t_fur_contributor => '',
						d_azp_ibn_report_general_t_fur_viable => '',
						d_azp_ibn_report_general_t_fur_well => '',
						d_azp_ibn_report_general_t_fur_text_one => '',
						d_azp_ibn_report_general_t_fur_text_two => '',
						d_azp_ibn_report_general_t_fur_comment => '',
						d_azp_ibn_report_general_t_fur_concept => '',
						d_azp_ibn_report_general_t_fur_data => 'VACIO',

						d_azp_ibn_report_general_t_adr_outcome => '',
						d_azp_ibn_report_general_t_adr_state => '',
						d_azp_ibn_report_general_t_adr_municipality => '',
						d_azp_ibn_report_general_t_adr_regime => '',
						d_azp_ibn_report_general_t_adr_entity => '',
						d_azp_ibn_report_general_t_adr_affiliate => '',

						d_azp_ibn_report_general_t_war_state => '',
						d_azp_ibn_report_general_t_war_creditor => '',
						d_azp_ibn_report_general_t_war_well => '',
						d_azp_ibn_report_general_t_war_detail => '',
						d_azp_ibn_report_general_t_war_value => '',
						d_azp_ibn_report_general_t_war_date => '',
						d_azp_ibn_report_general_t_war_comment => '',
						d_azp_ibn_report_general_t_war_concept => '',
						d_azp_ibn_report_general_t_war_data => 'VACIO',
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_general, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_cam_certified => strtoupper($value['lbl_azp_ibn_type_certified_t_name']),
						d_azp_ibn_report_general_t_cam_company => strtoupper($value['lbl_azp_ibn_camera_t_type_company']),
						d_azp_ibn_report_general_t_cam_organization => strtoupper($value['lbl_azp_ibn_camera_t_type_organization']),
						d_azp_ibn_report_general_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_general_t_cam_renewal => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_general_t_cam_nit => strtoupper($value['lbl_azp_ibn_camera_t_nit']),
						d_azp_ibn_report_general_t_cam_business => strtoupper($value['lbl_azp_ibn_camera_t_business_name']),
						d_azp_ibn_report_general_t_cam_establishment => strtoupper($value['lbl_azp_ibn_camera_t_establishment']),
						d_azp_ibn_report_general_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_city']),
						d_azp_ibn_report_general_t_cam_municipality => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_general_t_cam_department => strtoupper($value['lbl_azp_ibn_camera_t_department']),
						d_azp_ibn_report_general_t_cam_address => strtoupper($value['lbl_azp_ibn_camera_t_address']),
						d_azp_ibn_report_general_t_cam_phone => strtoupper($value['lbl_azp_ibn_camera_t_phone']),
						d_azp_ibn_report_general_t_cam_active => strtoupper($value['lbl_azp_ibn_camera_t_total_active']),
						d_azp_ibn_report_general_t_cam_rup => strtoupper($value['lbl_azp_ibn_camera_t_rup']),
						d_azp_ibn_report_general_t_cam_rp_full_name => strtoupper($value['lbl_azp_ibn_camera_t_legal_representative']),
						d_azp_ibn_report_general_t_cam_rp_identification => strtoupper($value['lbl_azp_ibn_camera_t_legal_rp_certificate']),
						d_azp_ibn_report_general_t_cam_assessment => strtoupper($value['lbl_azp_ibn_camera_t_assessment']),
						d_azp_ibn_report_general_t_cam_viable => strtoupper($value['lbl_azp_ibn_camera_t_viable']),
						d_azp_ibn_report_general_t_cam_well => strtoupper($value['lbl_azp_ibn_camera_t_well_viable']),
						d_azp_ibn_report_general_t_cam_comment => strtoupper($value['lbl_azp_ibn_camera_t_comment_legal']),
						d_azp_ibn_report_general_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
						d_azp_ibn_report_general_t_cam_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_fur_nit => strtoupper($value['lbl_azp_ibn_furniture_t_nit']),
						d_azp_ibn_report_general_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_general_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
						d_azp_ibn_report_general_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_general_t_fur_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
						d_azp_ibn_report_general_t_fur_department => strtoupper($value['lbl_azp_ibn_furniture_t_department']),
						d_azp_ibn_report_general_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_general_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_general_t_fur_viable => strtoupper($value['lbl_azp_ibn_furniture_t_well_option']),
						d_azp_ibn_report_general_t_fur_well => strtoupper($value['lbl_azp_ibn_furniture_t_well_viable']),
						d_azp_ibn_report_general_t_fur_text_one => strtoupper($value['lbl_azp_ibn_furniture_t_text_one']),
						d_azp_ibn_report_general_t_fur_text_two => strtoupper($value['lbl_azp_ibn_furniture_t_text_two']),
						d_azp_ibn_report_general_t_fur_comment => strtoupper($value['lbl_azp_ibn_furniture_t_comment_legal']),
						d_azp_ibn_report_general_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_general_t_fur_data => strtoupper('Encontrado'),

						//d_azp_ibn_report_general_t_adr_outcome => strtoupper($value['lbl_azp_ibn_outcome_t_name']),
						//d_azp_ibn_report_general_t_adr_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
						//d_azp_ibn_report_general_t_adr_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
						//d_azp_ibn_report_general_t_adr_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						//d_azp_ibn_report_general_t_adr_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						//d_azp_ibn_report_general_t_adr_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_fosyga) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_fosyga as $key => $value):
					$ibn_outcome = strtoupper($value['lbl_azp_ibn_outcome_t_name']);
					if (strcasecmp($ibn_outcome, "NINGUNO") === 0) {
						$ibn_outcome = "";
					}
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_adr_outcome => $ibn_outcome,
						d_azp_ibn_report_general_t_adr_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
						d_azp_ibn_report_general_t_adr_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_city']),
						d_azp_ibn_report_general_t_adr_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_general_t_adr_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						d_azp_ibn_report_general_t_adr_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_pro_type_property => strtoupper($value['lbl_azp_ibn_type_property_t_name']),
						d_azp_ibn_report_general_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_general_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_general_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_general_t_pro_department => strtoupper($value['lbl_azp_ibn_property_t_department']),
						d_azp_ibn_report_general_t_pro_area => strtoupper($value['lbl_azp_ibn_property_t_area']),
						d_azp_ibn_report_general_t_pro_purchase => strtoupper($value['lbl_azp_ibn_property_t_purchase_annotation']),
						d_azp_ibn_report_general_t_pro_ownership => strtoupper($value['lbl_azp_ibn_property_t_ownership']),
						d_azp_ibn_report_general_t_pro_vr_market => strtoupper($value['lbl_azp_ibn_property_t_market_value']),
						d_azp_ibn_report_general_t_pro_assessment => strtoupper($value['lbl_azp_ibn_property_t_assessment']),
						d_azp_ibn_report_general_t_pro_viable => strtoupper($value['lbl_azp_ibn_property_t_viable']),
						d_azp_ibn_report_general_t_pro_well => strtoupper($value['lbl_azp_ibn_property_t_well_viable']),
						d_azp_ibn_report_general_t_pro_text_one => strtoupper($value['lbl_azp_ibn_property_t_text_one']),
						d_azp_ibn_report_general_t_pro_text_two => strtoupper($value['lbl_azp_ibn_property_t_text_two']),
						d_azp_ibn_report_general_t_pro_text_three => strtoupper($value['lbl_azp_ibn_property_t_text_three']),
						d_azp_ibn_report_general_t_pro_text_four => strtoupper($value['lbl_azp_ibn_property_t_text_four']),
						d_azp_ibn_report_general_t_pro_text_five => strtoupper($value['lbl_azp_ibn_property_t_text_five']),
						d_azp_ibn_report_general_t_pro_text_six => strtoupper($value['lbl_azp_ibn_property_t_text_six']),
						d_azp_ibn_report_general_t_pro_text_seven => strtoupper($value['lbl_azp_ibn_property_t_text_seven']),
						d_azp_ibn_report_general_t_pro_text_eight => strtoupper($value['lbl_azp_ibn_property_t_text_eight']),
						d_azp_ibn_report_general_t_pro_sel_one => strtoupper($value['lbl_azp_ibn_property_t_sel_one']),
						d_azp_ibn_report_general_t_pro_sel_two => strtoupper($value['lbl_azp_ibn_property_t_sel_two']),
						d_azp_ibn_report_general_t_pro_sel_three => strtoupper($value['lbl_azp_ibn_property_t_sel_three']),
						d_azp_ibn_report_general_t_pro_sel_four => strtoupper($value['lbl_azp_ibn_property_t_sel_four']),
						d_azp_ibn_report_general_t_pro_sel_five => strtoupper($value['lbl_azp_ibn_property_t_sel_five']),
						d_azp_ibn_report_general_t_pro_comment => strtoupper($value['lbl_azp_ibn_property_t_comment_legal']),
						d_azp_ibn_report_general_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
						d_azp_ibn_report_general_t_pro_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_general_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_general_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_general_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_general_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_general_t_veh_service => strtoupper($value['lbl_azp_ibn_vehicle_t_service']),
						d_azp_ibn_report_general_t_veh_color => strtoupper($value['lbl_azp_ibn_vehicle_t_color']),
						d_azp_ibn_report_general_t_veh_line => strtoupper($value['lbl_azp_ibn_vehicle_t_line']),
						d_azp_ibn_report_general_t_veh_make => strtoupper($value['lbl_azp_ibn_vehicle_t_make_camera']),
						d_azp_ibn_report_general_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_assessment']),
						d_azp_ibn_report_general_t_veh_assessment => strtoupper($value['lbl_azp_ibn_vehicle_t_assessment']),
						d_azp_ibn_report_general_t_veh_vehicle => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),
						d_azp_ibn_report_general_t_veh_viable => strtoupper($value['lbl_azp_ibn_vehicle_t_viable']),
						d_azp_ibn_report_general_t_veh_well => strtoupper($value['lbl_azp_ibn_vehicle_t_well_viable']),
						d_azp_ibn_report_general_t_veh_text_one => strtoupper($value['lbl_azp_ibn_vehicle_t_text_one']),
						d_azp_ibn_report_general_t_veh_text_two => strtoupper($value['lbl_azp_ibn_vehicle_t_text_two']),
						d_azp_ibn_report_general_t_veh_text_three => strtoupper($value['lbl_azp_ibn_vehicle_t_text_three']),
						d_azp_ibn_report_general_t_veh_text_four => strtoupper($value['lbl_azp_ibn_vehicle_t_text_four']),
						d_azp_ibn_report_general_t_veh_text_five => strtoupper($value['lbl_azp_ibn_vehicle_t_text_five']),
						d_azp_ibn_report_general_t_veh_sel_one => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_one']),
						d_azp_ibn_report_general_t_veh_sel_two => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_two']),
						d_azp_ibn_report_general_t_veh_sel_three => strtoupper($value['lbl_azp_ibn_vehicle_t_sel_three']),
						d_azp_ibn_report_general_t_veh_comment => strtoupper($value['lbl_azp_ibn_vehicle_t_comment_legal']),
						d_azp_ibn_report_general_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_general_t_veh_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_war_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
						d_azp_ibn_report_general_t_war_creditor => strtoupper($value['lbl_azp_ibn_warranty_t_creditor']),
						d_azp_ibn_report_general_t_war_well => strtoupper($value['lbl_azp_ibn_warranty_t_well_name']),
						d_azp_ibn_report_general_t_war_detail => strtoupper($value['lbl_azp_ibn_warranty_t_well_detail']),
						d_azp_ibn_report_general_t_war_value => strtoupper($value['lbl_azp_ibn_warranty_t_value']),
						d_azp_ibn_report_general_t_war_date => strtoupper($value['lbl_azp_ibn_warranty_t_date']),
						d_azp_ibn_report_general_t_war_comment => strtoupper($value['lbl_azp_ibn_warranty_t_comment_legal']),
						d_azp_ibn_report_general_t_war_concept => strtoupper($value['lbl_azp_ibn_warranty_t_concept']),
						d_azp_ibn_report_general_t_war_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_account . " = '" . $value['lbl_azp_ibn_warranty_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Asignacino de valores a nuevas variables
					$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
					$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
					$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
					$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
					$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
					$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
					$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
					$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
					$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
					$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
					$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
					$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
					$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
					$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
					$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
					$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_inf_entity => strtoupper($value['lbl_azp_ibn_client_t_name']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			/*if (true == $var_sql_data_main) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_data_main as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_dat_identification = $value['lbl_azp_ibn_data_main_t_identification'];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_general_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_general_t_inf_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_general_t_inf_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_general_t_inf_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),
						d_azp_ibn_report_general_t_inf_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_inf_identification . " = '" . $var_dat_identification . "'");
				endforeach;
			}*/
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("
				SELECT *,
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_cam_well . ") AS 'lbl_cam_well',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_fur_well . ") AS 'lbl_fur_well',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_pro_well . ") AS 'lbl_pro_well',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_veh_well . ") AS 'lbl_veh_well',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_war_well . ") AS 'lbl_war_well'
				FROM " . t_azp_ibn_report_general . "
				GROUP BY " . d_azp_ibn_report_general_t_inf_identification
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id_document = $value[d_azp_ibn_report_general_t_inf_identification];
					$var_cam_concept = $value['lbl_cam_well'];
					$var_fur_concept = $value['lbl_fur_well'];
					$var_pro_concept = $value['lbl_pro_well'];
					$var_veh_concept = $value['lbl_veh_well'];
					$var_war_concept = $value['lbl_war_well'];
					$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_inf_well_viable => strtoupper($var_observation),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_inf_identification . " = '" . $var_id_document . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("
				SELECT *, GROUP_CONCAT(" . d_azp_ibn_report_general_t_pro_concept . ") AS 'lbl_concat'
				FROM " . t_azp_ibn_report_general . "
				GROUP BY " . d_azp_ibn_report_general_t_inf_identification
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id_document = $value[d_azp_ibn_report_general_t_inf_identification];
					$var_pro_concept = $value[d_azp_ibn_report_general_t_pro_concept];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_pro_unified => strtoupper($value['lbl_concat']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_inf_identification . " = '" . $var_id_document . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("
				SELECT *, GROUP_CONCAT(" . d_azp_ibn_report_general_t_veh_concept . ") AS 'lbl_concat'
				FROM " . t_azp_ibn_report_general . "
				GROUP BY " . d_azp_ibn_report_general_t_inf_identification
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id_document = $value[d_azp_ibn_report_general_t_inf_identification];
					$var_veh_concept = $value[d_azp_ibn_report_general_t_veh_concept];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_veh_unified => strtoupper($value['lbl_concat']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_inf_identification . " = '" . $var_id_document . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->query("
				SELECT *,
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_cam_concept . ") AS 'lbl_cam_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_fur_concept . ") AS 'lbl_fur_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_pro_concept . ") AS 'lbl_pro_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_veh_concept . ") AS 'lbl_veh_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_general_t_war_concept . ") AS 'lbl_war_concept'
				FROM " . t_azp_ibn_report_general . "
				GROUP BY " . d_azp_ibn_report_general_t_inf_identification
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id_document = $value[d_azp_ibn_report_general_t_inf_identification];
					$var_cam_concept = $value['lbl_cam_concept'];
					$var_fur_concept = $value['lbl_fur_concept'];
					$var_pro_concept = $value['lbl_pro_concept'];
					$var_veh_concept = $value['lbl_veh_concept'];
					$var_war_concept = $value['lbl_war_concept'];
					$var_observation = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept . ' ' . $var_war_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_inf_concept => strtoupper($var_observation),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_inf_identification . " = '" . $var_id_document . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_t_cam_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_cam_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_t_fur_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_fur_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_t_pro_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_pro_concept => '', d_azp_ibn_report_general_t_pro_unified => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_t_veh_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_veh_concept => '', d_azp_ibn_report_general_t_veh_unified => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_t_war_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_war_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_general, d_azp_ibn_report_general_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_general_t_inf_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_general_t_inf_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_general_id_azp_ibn_report_general . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_general_t_bas_formula => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_general,
				d_azp_ibn_report_general_t_cam_data . " = 'VACIO' AND " .
				d_azp_ibn_report_general_t_fur_data . " = 'VACIO' AND " .
				d_azp_ibn_report_general_t_pro_data . " = 'VACIO' AND " .
				d_azp_ibn_report_general_t_veh_data . " = 'VACIO' AND " .
				d_azp_ibn_report_general_t_war_data . " = 'VACIO'"
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_general_id_azp_ibn_report_general];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					//$var_array = array(d_azp_ibn_report_general_m_deleted => '2', d_azp_ibn_report_general_t_inf_concept => '',);
					$var_array = array(d_azp_ibn_report_general_m_deleted => '2',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_general, $var_array, d_azp_ibn_report_general_t_bas_formula . " = '0' AND " .d_azp_ibn_report_general_id_azp_ibn_report_general . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			/*$var_sql = $this->db->select("*", t_azp_ibn_data_main,
				d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_ibn_control_panel . "' AND " .
				d_azp_ibn_data_main_m_deleted . " = '1' GROUP BY " . d_azp_ibn_data_main_t_identification
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_cedula = $value[d_azp_ibn_data_main_t_identification]; $var_suma = 1; $var_buma = 1;
					$var_number = $this->db->select("*", t_azp_ibn_data_main,
						d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $empty_ibn_control_panel . "' AND " .
						d_azp_ibn_data_main_t_identification . " = '" . $var_cedula . "'"
					);
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (true == $var_number) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_number as $key2 => $value2):
							# Organizacion de los valores capturados y asignados a los campos a insertar
							$var_id2 = $value2[d_azp_ibn_data_main_id_azp_ibn_data_main];
							$var_cedula2 = $value2[d_azp_ibn_data_main_t_identification];
							$var_union = $var_cedula2 . '_' . $var_suma++;
							$var_bcount = $var_buma++;
							# Array para asignar argumentos o valores a los elementos
							$var_array = array(d_azp_ibn_data_main_t_acount => $var_union, d_azp_ibn_data_main_t_bcount => $var_bcount);
							# Query Sql Update: Actualizar valores de la tabla segun sus campos
							$this->db->update(t_azp_ibn_data_main, $var_array, d_azp_ibn_data_main_id_azp_ibn_data_main . " = '" . $var_id2 . "'");
						endforeach;
					}

				endforeach;
			}*/
		}

		# Query Sql Insert
		final public function sql_controller_ibn_format_client() {
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; endforeach; } else { $var_client = 0; }
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_client, d_azp_ibn_client_id_azp_ibn_client . " = '" . $var_client . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value): $var_format = $value[d_azp_ibn_client_v_id_azp_ibn_format_file]; endforeach; } else { $var_format = 0; }
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_format_file, d_azp_ibn_format_file_id_azp_ibn_format_file . " = '" . $var_format . "'");
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_agrario() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_agrario);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_agrario . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_fosyga = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_data_main) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_agrario_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_agrario_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_agrario_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_agrario_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_agrario_m_deleted => '1',
						d_azp_ibn_report_structure_agrario_m_description => '',
						d_azp_ibn_report_structure_agrario_m_level => '2',
						d_azp_ibn_report_structure_agrario_m_status => '1',
						d_azp_ibn_report_structure_agrario_m_temp => '1',
						d_azp_ibn_report_structure_agrario_t_bas_account => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_agrario_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_agrario_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_agrario_t_dat_outcome => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_agrario_t_dat_value_net => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_dat_value_vat => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_dat_value_query => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_property_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_address_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_enrollment_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_municipality_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_property_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_address_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_enrollment_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_municipality_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_property_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_address_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_enrollment_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_municipality_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_property_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_address_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_enrollment_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_municipality_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_property_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_address_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_enrollment_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_pro_municipality_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_plaque_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_mark_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_model_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_class_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_line_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_city_1 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_plaque_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_mark_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_model_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_class_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_line_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_city_2 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_plaque_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_mark_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_model_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_class_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_line_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_city_3 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_plaque_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_mark_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_model_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_class_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_line_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_city_4 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_plaque_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_mark_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_model_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_class_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_line_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_veh_city_5 => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_war_creditor => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_war_type => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_war_detail => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_war_value => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_nit => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_business => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_enrollment => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_municipality => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_year_renew => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_address => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_cam_phone => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_nit => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_business => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_phone => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_address => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_municipality => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_salary => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_contributor => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_entity => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_regime => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_affiliate => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_fur_state => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_dat_observation => strtoupper(''),
						d_azp_ibn_report_structure_agrario_t_dat_source => strtoupper(''),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_agrario, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_agrario_t_cam_nit => strtoupper($value['lbl_azp_ibn_camera_t_nit']),
						d_azp_ibn_report_structure_agrario_t_cam_business => strtoupper($value['lbl_azp_ibn_camera_t_business_name']),
						d_azp_ibn_report_structure_agrario_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_agrario_t_cam_municipality => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_structure_agrario_t_cam_year_renew => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_agrario_t_cam_address => strtoupper($value['lbl_azp_ibn_camera_t_address']),
						d_azp_ibn_report_structure_agrario_t_cam_phone => strtoupper($value['lbl_azp_ibn_camera_t_phone']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_agrario, $var_array,
						d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $value['lbl_azp_ibn_camera_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_agrario_t_fur_nit => strtoupper($value['lbl_azp_ibn_furniture_t_nit']),
						d_azp_ibn_report_structure_agrario_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_agrario_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
						d_azp_ibn_report_structure_agrario_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_agrario_t_fur_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
						d_azp_ibn_report_structure_agrario_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_agrario_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						//d_azp_ibn_report_structure_agrario_t_fur_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						//d_azp_ibn_report_structure_agrario_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						//d_azp_ibn_report_structure_agrario_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						//d_azp_ibn_report_structure_agrario_t_fur_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_agrario, $var_array,
						d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $value['lbl_azp_ibn_furniture_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_fosyga) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_fosyga as $key => $value):
					$ibn_outcome = strtoupper($value['lbl_azp_ibn_outcome_t_name']);
					if (strcasecmp($ibn_outcome, "NINGUNO") === 0) {
						$ibn_outcome = "";
					}
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_agrario_t_fur_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						d_azp_ibn_report_structure_agrario_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_agrario_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_agrario_t_fur_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_agrario, $var_array, d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $value['lbl_azp_ibn_furniture_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value['lbl_azp_ibn_property_t_identification'];
					# Asignacion de valores a nuevas variables
					$var_acount = $value['lbl_azp_ibn_property_t_acount'];
					# Consulta para identificar los nuevos registros en la tabla
					/*$var_sub_sql = $this->db->select("*", t_azp_ibn_property,
						d_azp_ibn_property_t_acount . " = '" . $var_acount . "' AND " .
						d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);*/
					$var_sub_sql = $this->db->query("
						SELECT
							tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
							tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
							tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
							tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
							tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
							tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
							tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
							tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
							tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
							tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
							tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
							tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
							tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
							tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
							tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
							tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
							tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
							tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
							tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
							tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
							tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
							tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
							tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
							tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
							tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
							tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
							tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
							tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
							tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
							tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
							tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
							tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
							tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
							tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
							tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
							tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
							tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
							tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
							tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
							tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
							tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
							tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
						FROM " . t_azp_ibn_property . " tc_azp_ibn_property
						
						INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
							ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
								= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
						
						INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
							ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
								= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
						
						INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
							ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
								= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
						
						WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
							AND tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " = '" . $var_acount . "'
							AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					");
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (true == $var_sub_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sub_sql as $sub => $fresh):
							# Asignacion de valores a nuevas variables
							$fresh_acount = $fresh['lbl_azp_ibn_property_t_acount'];
							$fresh_identification = $fresh['lbl_azp_ibn_property_t_identification'];
							$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
							$var_substr = substr($fresh_acount, -2);
							# Control para ejecutar dicha cantidad de veces un ciclo
							if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4' || $var_substr == '_5') {
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									't_pro_property_' . $fresh_replace => strtoupper($fresh['lbl_azp_ibn_type_property_t_name']),
									't_pro_address_' . $fresh_replace => strtoupper($fresh['lbl_azp_ibn_property_t_address']),
									't_pro_enrollment_' . $fresh_replace => strtoupper($fresh['lbl_azp_ibn_property_t_nro_registration']),
									't_pro_municipality_' . $fresh_replace => strtoupper($fresh['lbl_azp_ibn_property_t_municipality']),
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->update(t_azp_ibn_report_structure_agrario, $var_array,
									d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $fresh['lbl_azp_ibn_property_t_identification'] . "'");
							}
						endforeach;
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value['lbl_azp_ibn_vehicle_t_identification'];
					# Asignacion de valores a nuevas variables
					$var_acount = $value['lbl_azp_ibn_vehicle_t_acount'];
					# Consulta para identificar los nuevos registros en la tabla
					$var_sub_sql = $this->db->select("*", t_azp_ibn_vehicle,
						d_azp_ibn_vehicle_m_deleted . " = '1' AND " .
						d_azp_ibn_vehicle_t_acount . " = '" . $var_acount . "' AND " .
						d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
					);
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (true == $var_sub_sql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_sub_sql as $sub => $fresh):
							# Asignacion de valores a nuevas variables
							$fresh_acount = $fresh[d_azp_ibn_vehicle_t_acount];
							$fresh_identification = $fresh[d_azp_ibn_vehicle_t_identification];
							$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
							$var_substr = substr($fresh_acount, -2);
							# Control para ejecutar dicha cantidad de veces un ciclo
							if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4' || $var_substr == '_5') {
								# Organizacion de los valores capturados y asignados a los campos a insertar
								$var_array = array(
									't_veh_plaque_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_plaque]),
									't_veh_mark_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_mark]),
									't_veh_model_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_model]),
									't_veh_class_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_class]),
									't_veh_line_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_line]),
									't_veh_city_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_city]),
								);
								# Insertar valores en la tabla segun estructura de la tabla
								$this->db->update(t_azp_ibn_report_structure_agrario, $var_array,
									d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $fresh[d_azp_ibn_vehicle_t_identification] . "'");
							}
						endforeach;
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_agrario_t_war_creditor => strtoupper($value['lbl_azp_ibn_warranty_t_creditor']),
						d_azp_ibn_report_structure_agrario_t_war_type => strtoupper($value['lbl_azp_ibn_warranty_t_well_name']),
						d_azp_ibn_report_structure_agrario_t_war_detail => strtoupper($value['lbl_azp_ibn_warranty_t_well_detail']),
						d_azp_ibn_report_structure_agrario_t_war_value => strtoupper($value['lbl_azp_ibn_warranty_t_value']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_agrario, $var_array,
						d_azp_ibn_report_structure_agrario_t_dat_identification . " = '" . $value['lbl_azp_ibn_warranty_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Asignacino de valores a nuevas variables
					$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
					$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
					$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
					$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
					$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
					$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
					$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
					$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
					$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
					$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
					$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
					$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
					$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
					$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
					$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
					$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_propia_t_dat_date_arrival => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_agrario, d_azp_ibn_report_structure_agrario_t_bas_validate . " = '1'");
			/*return $this->db->select("*", t_azp_ibn_report_structure_agrario,
				d_azp_ibn_report_structure_agrario_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_agrario_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_agrario_id_azp_ibn_report_structure_agrario . " " . "ASC"
			);*/
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_agrario_pro() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_property." . d_azp_ibn_property_t_bcount . " >= 6
			");
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_agrario_veh() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_bcount . " >= 6
			");
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_banco_bbva() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_banco_bbva);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_banco_bbva . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_bbva_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_bbva_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_banco_bbva_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_banco_bbva_m_deleted => '1',
						d_azp_ibn_report_structure_banco_bbva_m_description => '',
						d_azp_ibn_report_structure_banco_bbva_m_level => '2',
						d_azp_ibn_report_structure_banco_bbva_m_status => '1',
						d_azp_ibn_report_structure_banco_bbva_m_temp => '1',

						d_azp_ibn_report_structure_banco_bbva_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_banco_bbva_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_banco_bbva_t_dat_date_deliver => strtoupper(DATE),
						d_azp_ibn_report_structure_banco_bbva_t_dat_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_banco_bbva_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_banco_bbva_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_banco_bbva_t_dat_attorney => strtoupper(''),
						d_azp_ibn_report_structure_banco_bbva_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_banco_bbva_t_dat_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),

						d_azp_ibn_report_structure_banco_bbva_t_pro_enrollment => '',
						d_azp_ibn_report_structure_banco_bbva_t_pro_address => '',
						d_azp_ibn_report_structure_banco_bbva_t_pro_municipality => '',
						d_azp_ibn_report_structure_banco_bbva_t_pro_concept => '',
						d_azp_ibn_report_structure_banco_bbva_t_pro_viability => '',
						d_azp_ibn_report_structure_banco_bbva_t_pro_effective => '',

						d_azp_ibn_report_structure_banco_bbva_t_veh_class => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_model => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_plaque => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_mark => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_city => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_value => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_concept => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_viability => '',
						d_azp_ibn_report_structure_banco_bbva_t_veh_effective => '',

						d_azp_ibn_report_structure_banco_bbva_t_war_type => '',
						d_azp_ibn_report_structure_banco_bbva_t_war_concept => '',
						d_azp_ibn_report_structure_banco_bbva_t_war_viability => '',
						d_azp_ibn_report_structure_banco_bbva_t_war_effective => '',

						d_azp_ibn_report_structure_banco_bbva_t_fur_business => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_address => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_salary => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_regime => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_affiliate => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_concept => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_viability => '',
						d_azp_ibn_report_structure_banco_bbva_t_fur_effective => '',

						d_azp_ibn_report_structure_banco_bbva_t_cam_enrollment => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_date_renovation => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_type_society => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_rp_identification => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_rp_full_name => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_data_rup => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_viable => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_concept => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_viability => '',
						d_azp_ibn_report_structure_banco_bbva_t_cam_effective => '',

						d_azp_ibn_report_structure_banco_bbva_t_dat_company => strtoupper('GSC OUTSOURCING'),
						d_azp_ibn_report_structure_banco_bbva_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_banco_bbva_t_dat_formula => strtoupper('0'),
						d_azp_ibn_report_structure_banco_bbva_t_dat_obligation => strtoupper($value['lbl_azp_ibn_data_main_t_nro_obligation']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_banco_bbva, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_date_renovation => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_type_society => strtoupper($value['lbl_azp_ibn_camera_t_type_organization']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_rp_identification => strtoupper($value['lbl_azp_ibn_camera_t_legal_rp_certificate']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_rp_full_name => strtoupper($value['lbl_azp_ibn_camera_t_legal_representative']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_data_rup => strtoupper($value['lbl_azp_ibn_camera_t_rup']),

						d_azp_ibn_report_structure_banco_bbva_t_cam_viable => strtoupper($value['lbl_azp_ibn_camera_t_well_viable']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_viability => strtoupper($value['lbl_azp_ibn_camera_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bbva_t_cam_effective => strtoupper($value['lbl_azp_ibn_camera_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_viability => strtoupper($value['lbl_azp_ibn_furniture_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bbva_t_fur_effective => strtoupper($value['lbl_azp_ibn_furniture_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_structure_banco_bbva_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_structure_banco_bbva_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_structure_banco_bbva_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
						d_azp_ibn_report_structure_banco_bbva_t_pro_viability => strtoupper($value['lbl_azp_ibn_property_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bbva_t_pro_effective => strtoupper($value['lbl_azp_ibn_property_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_viability => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bbva_t_veh_effective => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bbva_t_war_type => strtoupper($value['lbl_azp_ibn_warranty_t_well_name']),
						d_azp_ibn_report_structure_banco_bbva_t_war_concept => strtoupper($value['lbl_azp_ibn_warranty_t_concept']),
						d_azp_ibn_report_structure_banco_bbva_t_war_viability => strtoupper($value['lbl_azp_ibn_warranty_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bbva_t_war_effective => strtoupper($value['lbl_azp_ibn_warranty_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_t_bas_account . " = '" . $value['lbl_azp_ibn_warranty_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Asignacino de valores a nuevas variables
					$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
					$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
					$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
					$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
					$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
					$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
					$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
					$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
					$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
					$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
					$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
					$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
					$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
					$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
					$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
					$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bbva_t_dat_date_arrival => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array, d_azp_ibn_report_structure_banco_bbva_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_structure_banco_bbva,
				d_azp_ibn_report_structure_banco_bbva_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_structure_banco_bbva_t_dat_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_bbva_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_bbva_id_azp_ibn_report_structure_banco_bbva . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bbva_id_azp_ibn_report_structure_banco_bbva];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bbva_t_dat_formula => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bbva, $var_array,
						d_azp_ibn_report_structure_banco_bbva_id_azp_ibn_report_structure_banco_bbva . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_banco_bbva,
				d_azp_ibn_report_structure_banco_bbva_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_bbva_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_bbva_id_azp_ibn_report_structure_banco_bbva . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_banco_bogota() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_banco_bogota);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_banco_bogota . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_banco_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_banco_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_banco_bogota_m_description => '',
						d_azp_ibn_report_structure_banco_bogota_m_level => '2',
						d_azp_ibn_report_structure_banco_bogota_m_status => '1',
						d_azp_ibn_report_structure_banco_bogota_m_temp => '1',

						d_azp_ibn_report_structure_banco_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_banco_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_banco_bogota_t_dat_code_research => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_red => strtoupper('BB'),
						d_azp_ibn_report_structure_banco_bogota_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_code_base => strtoupper($value['lbl_azp_ibn_data_main_t_code']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_city => strtoupper($value['lbl_azp_ibn_data_main_t_city']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_department => strtoupper($value['lbl_azp_ibn_data_main_t_department']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_attorney => '',

						d_azp_ibn_report_structure_banco_bogota_t_pro_enrollment => '',
						d_azp_ibn_report_structure_banco_bogota_t_pro_address => '',
						d_azp_ibn_report_structure_banco_bogota_t_pro_municipality => '',
						d_azp_ibn_report_structure_banco_bogota_t_pro_concept => '',
						d_azp_ibn_report_structure_banco_bogota_t_pro_data => 'VACIO',

						d_azp_ibn_report_structure_banco_bogota_t_veh_class => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_model => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_plaque => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_mark => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_city => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_concept => '',
						d_azp_ibn_report_structure_banco_bogota_t_veh_data => 'VACIO',

						d_azp_ibn_report_structure_banco_bogota_t_fur_business => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_address => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_salary => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_affiliate => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_contributor => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_concept => '',
						d_azp_ibn_report_structure_banco_bogota_t_fur_data => 'VACIO',
						d_azp_ibn_report_structure_banco_bogota_t_cam_concept => '',
						d_azp_ibn_report_structure_banco_bogota_t_cam_data => 'VACIO',

						d_azp_ibn_report_structure_banco_bogota_t_dat_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_concept => '',
						d_azp_ibn_report_structure_banco_bogota_t_dat_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_banco_bogota_t_dat_veh_value => '',
						d_azp_ibn_report_structure_banco_bogota_t_dat_veh_assessment => '',
						d_azp_ibn_report_structure_banco_bogota_t_dat_veh_total => '',
						d_azp_ibn_report_structure_banco_bogota_t_dat_pro_value => '',
						d_azp_ibn_report_structure_banco_bogota_t_dat_pro_assessment => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_pro_total => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_value_total => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_formula => strtoupper('0'),
						d_azp_ibn_report_structure_banco_bogota_t_dat_effective => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_banco_bogota_t_dat_honorary_well => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_honorary_study => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_camera => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_property => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_total => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_receipt_fmi => strtoupper(''),
						d_azp_ibn_report_structure_banco_bogota_t_dat_receipt_rma => strtoupper(''),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_banco_bogota, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']), d_azp_ibn_report_structure_banco_bogota_t_cam_data => strtoupper('Encontrado'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bogota_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_structure_banco_bogota_t_fur_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bogota_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_structure_banco_bogota_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_structure_banco_bogota_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_structure_banco_bogota_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
						d_azp_ibn_report_structure_banco_bogota_t_pro_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_bogota_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_structure_banco_bogota_t_veh_data => strtoupper('Encontrado'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Asignacino de valores a nuevas variables
					$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
					$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
					$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
					$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
					$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
					$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
					$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
					$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
					$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
					$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
					$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
					$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
					$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
					$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
					$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
					$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_dat_code_research => strtoupper($value['lbl_azp_ibn_control_panel_t_code_research']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_m_deleted . " = '1'");
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_dat_date_arrival => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_concept = $this->db->query("
				SELECT *,
					GROUP_CONCAT(" . d_azp_ibn_report_structure_banco_bogota_t_cam_concept . ") AS 'lbl_cam_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_structure_banco_bogota_t_fur_concept . ") AS 'lbl_fur_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_structure_banco_bogota_t_pro_concept . ") AS 'lbl_pro_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_structure_banco_bogota_t_veh_concept . ") AS 'lbl_veh_concept'
				FROM " . t_azp_ibn_report_structure_banco_bogota . "
				GROUP BY " . d_azp_ibn_report_structure_banco_bogota_t_dat_identification
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_concept) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_concept as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_t_dat_identification];
					$var_cam_concept = $value['lbl_cam_concept'];
					$var_fur_concept = $value['lbl_fur_concept'];
					$var_pro_concept = $value['lbl_pro_concept'];
					$var_veh_concept = $value['lbl_veh_concept'];
					//$var_war_concept = $value[d_azp_ibn_report_structure_banco_bogota_t_war_concept];
					$var_dat_concept = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_dat_concept => strtoupper($var_dat_concept),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_dat_identification . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota,
				d_azp_ibn_report_structure_banco_bogota_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_structure_banco_bogota_t_dat_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_bogota_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_dat_formula => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array,
						d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota, d_azp_ibn_report_structure_banco_bogota_t_cam_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_cam_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota, d_azp_ibn_report_structure_banco_bogota_t_fur_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_fur_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota, d_azp_ibn_report_structure_banco_bogota_t_pro_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_pro_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota, d_azp_ibn_report_structure_banco_bogota_t_veh_data . " = 'VACIO'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_veh_concept => '',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota,
				d_azp_ibn_report_structure_banco_bogota_t_cam_data . " = 'VACIO' AND " .
				d_azp_ibn_report_structure_banco_bogota_t_fur_data . " = 'VACIO' AND " .
				d_azp_ibn_report_structure_banco_bogota_t_pro_data . " = 'VACIO' AND " .
				d_azp_ibn_report_structure_banco_bogota_t_veh_data . " = 'VACIO'"
			);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					//$var_array = array(d_azp_ibn_report_structure_banco_bogota_m_deleted => '2', d_azp_ibn_report_structure_banco_bogota_t_dat_concept => '',);
					//$var_array = array(d_azp_ibn_report_structure_banco_bogota_t_dat_concept => '',);
					$var_array = array(d_azp_ibn_report_structure_banco_bogota_m_deleted => '2',);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_bogota, $var_array, d_azp_ibn_report_structure_banco_bogota_t_dat_formula . " = '0' AND " .
						d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_banco_bogota,
				d_azp_ibn_report_structure_banco_bogota_m_deleted . " = '1' AND " .
				d_azp_ibn_report_structure_banco_bogota_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_bogota_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_bogota_id_azp_ibn_report_structure_banco_bogota . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_fincomercio() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_fincomercio);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_fincomercio . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
					tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
					tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_data_main) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_fincomercio_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_fincomercio_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_fincomercio_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_fincomercio_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_fincomercio_m_deleted => '1',
						d_azp_ibn_report_structure_fincomercio_m_description => '',
						d_azp_ibn_report_structure_fincomercio_m_level => '2',
						d_azp_ibn_report_structure_fincomercio_m_status => '1',
						d_azp_ibn_report_structure_fincomercio_m_temp => '1',
						d_azp_ibn_report_structure_fincomercio_t_bas_account => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_fincomercio_t_dat_id_client => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_head_identification => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_head_full_name => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_fincomercio_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_fincomercio_t_dat_quality => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_city => strtoupper($value['lbl_azp_ibn_data_main_t_city']),
						d_azp_ibn_report_structure_fincomercio_t_dat_date_deliver => strtoupper(DATE),
						d_azp_ibn_report_structure_fincomercio_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_fincomercio_t_pro_enrollment_1 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_municipality_1 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_enrollment_2 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_municipality_2 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_enrollment_3 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_municipality_3 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_enrollment_4 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_pro_municipality_4 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_cam_municipality => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_cam_enrollment => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_plaque_1 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_city_1 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_plaque_2 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_city_2 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_plaque_3 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_city_3 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_plaque_4 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_veh_city_4 => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_nit => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_business => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_phone => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_address => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_deparment => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_municipality => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_salary => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_regime => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_entity => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_fur_contributor => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_concept => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_rate => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_through => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_certified => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_vat => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_total => strtoupper(''),
						d_azp_ibn_report_structure_fincomercio_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_fincomercio, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_fincomercio_t_cam_municipality => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_structure_fincomercio_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_fincomercio_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_fincomercio, $var_array,
						d_azp_ibn_report_structure_fincomercio_t_dat_identification . " = '" . $value['lbl_azp_ibn_camera_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_fincomercio_t_fur_nit => strtoupper($value['lbl_azp_ibn_furniture_t_nit']),
						d_azp_ibn_report_structure_fincomercio_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_fincomercio_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
						d_azp_ibn_report_structure_fincomercio_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_fincomercio_t_fur_deparment => strtoupper($value['lbl_azp_ibn_furniture_t_department']),
						d_azp_ibn_report_structure_fincomercio_t_fur_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
						d_azp_ibn_report_structure_fincomercio_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_fincomercio_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_fincomercio_t_fur_entity => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						d_azp_ibn_report_structure_fincomercio_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_fincomercio_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_fincomercio, $var_array,
						d_azp_ibn_report_structure_fincomercio_t_dat_identification . " = '" . $value['lbl_azp_ibn_furniture_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			//for ($var_nro = 1; $var_nro <= 4; $var_nro++) {
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (true == $var_sql_property) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql_property as $key => $value):
						# Asignacion de valores a nuevas variables
						$var_identification = $value['lbl_azp_ibn_property_t_identification'];
						# Asignacion de valores a nuevas variables
						$var_acount = $value['lbl_azp_ibn_property_t_acount'];
						# Consulta para identificar los nuevos registros en la tabla
						$var_sub_sql = $this->db->select("*", t_azp_ibn_property,
							d_azp_ibn_property_t_acount . " = '" . $var_acount . "' AND " .
							d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'", "LIMIT 4"
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sub_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sub_sql as $sub => $fresh):
								# Asignacion de valores a nuevas variables
								$fresh_acount = $fresh[d_azp_ibn_property_t_acount];
								$fresh_identification = $fresh[d_azp_ibn_property_t_identification];
								$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
								$var_substr = substr($fresh_acount, -2);
								# Control para ejecutar dicha cantidad de veces un ciclo
								if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4') {
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										't_pro_enrollment_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_nro_registration]),
										't_pro_municipality_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_municipality]),
										't_pro_concept_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_concept]),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_structure_fincomercio, $var_array,
										d_azp_ibn_report_structure_fincomercio_t_dat_identification . " = '" . $fresh[d_azp_ibn_property_t_identification] . "'");
								}
							endforeach;
						}
					endforeach;
				}
			//}
			#-------------------------------------------------------------------------#
			# Control para ejecutar dicha cantidad de veces un ciclo
			//for ($var_nro = 1; $var_nro <= 4; $var_nro++) {
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (true == $var_sql_vehicle) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql_vehicle as $key => $value):
						# Asignacion de valores a nuevas variables
						$var_identification = $value['lbl_azp_ibn_vehicle_t_identification'];
						# Asignacion de valores a nuevas variables
						$var_acount = $value['lbl_azp_ibn_vehicle_t_acount'];
						# Consulta para identificar los nuevos registros en la tabla
						$var_sub_sql = $this->db->select("*", t_azp_ibn_vehicle,
							d_azp_ibn_vehicle_t_acount . " = '" . $var_acount . "' AND " .
							d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sub_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sub_sql as $sub => $fresh):
								# Asignacion de valores a nuevas variables
								$fresh_acount = $fresh[d_azp_ibn_vehicle_t_acount];
								$fresh_identification = $fresh[d_azp_ibn_vehicle_t_identification];
								$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
								$var_substr = substr($fresh_acount, -2);
								# Control para ejecutar dicha cantidad de veces un ciclo
								if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4') {
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										't_veh_plaque_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_plaque]),
										't_veh_city_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_city]),
										't_veh_concept_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_vehicle_t_concept]),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_structure_fincomercio, $var_array,
										d_azp_ibn_report_structure_fincomercio_t_dat_identification . " = '" . $fresh[d_azp_ibn_vehicle_t_identification] . "'");
								}
							endforeach;
						}
					endforeach;
				}
			//}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_concept = $this->db->select("*", t_azp_ibn_report_structure_fincomercio);
			# Validar si la consulta es verdadera
			if (true == $var_sql_concept) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_concept as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_fincomercio_id_azp_ibn_report_structure_fincomercio];
					$var_cam_concept = $value[d_azp_ibn_report_structure_fincomercio_t_cam_concept];
					$var_fur_concept = $value[d_azp_ibn_report_structure_fincomercio_t_fur_concept];
					$var_pro_concept_1 = $value[d_azp_ibn_report_structure_fincomercio_t_pro_concept_1];
					$var_pro_concept_2 = $value[d_azp_ibn_report_structure_fincomercio_t_pro_concept_2];
					$var_pro_concept_3 = $value[d_azp_ibn_report_structure_fincomercio_t_pro_concept_3];
					$var_pro_concept_4 = $value[d_azp_ibn_report_structure_fincomercio_t_pro_concept_4];
					$var_veh_concept_1 = $value[d_azp_ibn_report_structure_fincomercio_t_veh_concept_1];
					$var_veh_concept_2 = $value[d_azp_ibn_report_structure_fincomercio_t_veh_concept_2];
					$var_veh_concept_3 = $value[d_azp_ibn_report_structure_fincomercio_t_veh_concept_3];
					$var_veh_concept_4 = $value[d_azp_ibn_report_structure_fincomercio_t_veh_concept_4];
					//$var_war_concept = $value[d_azp_ibn_report_structure_fincomercio_t_war_concept];

					$var_pro_concept = $var_pro_concept_1 . ', ' . $var_pro_concept_2 . ', ' . $var_pro_concept_3 . ', ' . $var_pro_concept_4;
					$var_veh_concept = $var_veh_concept_1 . ', ' . $var_veh_concept_2 . ', ' . $var_veh_concept_3 . ', ' . $var_veh_concept_4;
					$var_dat_concept = $var_pro_concept . ', ' . $var_veh_concept . ', ' . $var_fur_concept . ', ' . $var_cam_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_fincomercio_t_dat_concept => strtoupper($var_dat_concept),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_fincomercio, $var_array,
						d_azp_ibn_report_structure_fincomercio_id_azp_ibn_report_structure_fincomercio . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_fincomercio,
				d_azp_ibn_report_structure_fincomercio_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_fincomercio_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_fincomercio_id_azp_ibn_report_structure_fincomercio . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_protecsa() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_protecsa);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_protecsa . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_data_main) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_protecsa_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_protecsa_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_protecsa_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_protecsa_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_protecsa_m_deleted => '1',
						d_azp_ibn_report_structure_protecsa_m_description => '',
						d_azp_ibn_report_structure_protecsa_m_level => '2',
						d_azp_ibn_report_structure_protecsa_m_status => '1',
						d_azp_ibn_report_structure_protecsa_m_temp => '1',
						d_azp_ibn_report_structure_protecsa_t_bas_account => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_protecsa_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_protecsa_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_protecsa_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_protecsa_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_protecsa_t_pro_enrollment_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_address_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_municipality_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_enrollment_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_address_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_municipality_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_enrollment_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_address_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_municipality_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_enrollment_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_address_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_municipality_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_enrollment_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_address_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_pro_municipality_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_cam_enrollment => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_cam_municipality => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_class_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_model_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_mark_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_plaque_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_city_1 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_class_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_model_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_mark_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_plaque_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_city_2 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_class_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_model_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_mark_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_plaque_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_city_3 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_class_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_model_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_mark_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_plaque_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_city_4 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_class_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_model_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_mark_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_plaque_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_veh_city_5 => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_nit => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_business => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_phone => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_address => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_deparment => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_municipality => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_salary => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_regime => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_affiliate => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_fur_contributor => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_dat_concept => strtoupper(''),
						d_azp_ibn_report_structure_protecsa_t_dat_supplier => strtoupper('GSC'),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_protecsa, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_protecsa_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_protecsa_t_cam_municipality => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_structure_protecsa_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_protecsa, $var_array,
						d_azp_ibn_report_structure_protecsa_t_dat_identification . " = '" . $value['lbl_azp_ibn_camera_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_protecsa_t_fur_nit => strtoupper($value['lbl_azp_ibn_furniture_t_nit']),
						d_azp_ibn_report_structure_protecsa_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_protecsa_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
						d_azp_ibn_report_structure_protecsa_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_protecsa_t_fur_deparment => strtoupper($value['lbl_azp_ibn_furniture_t_department']),
						d_azp_ibn_report_structure_protecsa_t_fur_municipality => strtoupper($value['lbl_azp_ibn_furniture_t_municipality']),
						d_azp_ibn_report_structure_protecsa_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_protecsa_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_protecsa_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_protecsa_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_protecsa_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_protecsa, $var_array,
						d_azp_ibn_report_structure_protecsa_t_dat_identification . " = '" . $value['lbl_azp_ibn_furniture_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			for ($var_nro = 1; $var_nro <= 5; $var_nro++) {
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (true == $var_sql_property) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql_property as $key => $value):
						# Asignacion de valores a nuevas variables
						$var_identification = $value['lbl_azp_ibn_property_t_identification'];
						# Asignacion de valores a nuevas variables
						$var_acount = $value['lbl_azp_ibn_property_t_acount'];
						# Consulta para identificar los nuevos registros en la tabla
						$var_sub_sql = $this->db->select("*", t_azp_ibn_property,
							d_azp_ibn_property_t_acount . " = '" . $var_acount . "' AND " .
							d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sub_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sub_sql as $sub => $fresh):
								# Asignacion de valores a nuevas variables
								$fresh_acount = $fresh[d_azp_ibn_property_t_acount];
								$fresh_identification = $fresh[d_azp_ibn_property_t_identification];
								$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
								$var_substr = substr($fresh_acount, -2);
								# Control para ejecutar dicha cantidad de veces un ciclo
								if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4' || $var_substr == '_5') {
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										't_pro_enrollment_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_nro_registration]),
										't_pro_address_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_address]),
										't_pro_municipality_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_municipality]),
										't_pro_concept_' . $fresh_replace => strtoupper($fresh[d_azp_ibn_property_t_concept]),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_structure_protecsa, $var_array,
										d_azp_ibn_report_structure_protecsa_t_dat_identification . " = '" . $fresh[d_azp_ibn_property_t_identification] . "'");
								}
							endforeach;
						}
					endforeach;
				}
			}
			#-------------------------------------------------------------------------#
			# Control para ejecutar dicha cantidad de veces un ciclo
			for ($var_nro = 1; $var_nro <= 5; $var_nro++) {
				# Validar si la sentencia query ejecutada es correcta y no falsa
				if (true == $var_sql_vehicle) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql_vehicle as $key => $value):
						# Asignacion de valores a nuevas variables
						$var_identification = $value['lbl_azp_ibn_vehicle_t_identification'];
						# Asignacion de valores a nuevas variables
						$var_acount = $value['lbl_azp_ibn_vehicle_t_acount'];
						# Consulta para identificar los nuevos registros en la tabla
						$var_sub_sql = $this->db->select("*", t_azp_ibn_vehicle,
							d_azp_ibn_vehicle_t_acount . " = '" . $var_acount . "' AND " .
							d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'"
						);
						# Validar si la sentencia query ejecutada es correcta y no falsa
						if (true == $var_sub_sql) {
							# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
							foreach ($var_sub_sql as $sub => $fresh):
								# Asignacion de valores a nuevas variables
								$fresh_acount = $fresh[d_azp_ibn_vehicle_t_acount];
								$fresh_identification = $fresh[d_azp_ibn_vehicle_t_identification];
								$fresh_replace = str_replace($fresh_identification . '_', '', $fresh_acount);
								$var_substr = substr($fresh_acount, -2);
								# Control para ejecutar dicha cantidad de veces un ciclo
								if ($var_substr == '_1' || $var_substr == '_2' || $var_substr == '_3' || $var_substr == '_4' || $var_substr == '_5') {
									# Organizacion de los valores capturados y asignados a los campos a insertar
									$var_array = array(
										't_veh_class_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_class]),
										't_veh_model_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_model]),
										't_veh_mark_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_mark]),
										't_veh_plaque_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_plaque]),
										't_veh_city_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_city]),
										't_veh_concept_' . $var_nro => strtoupper($fresh[d_azp_ibn_vehicle_t_concept]),
									);
									# Insertar valores en la tabla segun estructura de la tabla
									$this->db->update(t_azp_ibn_report_structure_protecsa, $var_array,
										d_azp_ibn_report_structure_protecsa_t_dat_identification . " = '" . $fresh[d_azp_ibn_vehicle_t_identification] . "'");
								}
							endforeach;
						}
					endforeach;
				}
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_concept = $this->db->select("*", t_azp_ibn_report_structure_protecsa);
			# Validar si la consulta es verdadera
			if (true == $var_sql_concept) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_concept as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_protecsa_id_azp_ibn_report_structure_protecsa];
					$var_cam_concept = $value[d_azp_ibn_report_structure_protecsa_t_cam_concept];
					$var_fur_concept = $value[d_azp_ibn_report_structure_protecsa_t_fur_concept];
					$var_pro_concept_1 = $value[d_azp_ibn_report_structure_protecsa_t_pro_concept_1];
					$var_pro_concept_2 = $value[d_azp_ibn_report_structure_protecsa_t_pro_concept_2];
					$var_pro_concept_3 = $value[d_azp_ibn_report_structure_protecsa_t_pro_concept_3];
					$var_pro_concept_4 = $value[d_azp_ibn_report_structure_protecsa_t_pro_concept_4];
					$var_veh_concept_1 = $value[d_azp_ibn_report_structure_protecsa_t_veh_concept_1];
					$var_veh_concept_2 = $value[d_azp_ibn_report_structure_protecsa_t_veh_concept_2];
					$var_veh_concept_3 = $value[d_azp_ibn_report_structure_protecsa_t_veh_concept_3];
					$var_veh_concept_4 = $value[d_azp_ibn_report_structure_protecsa_t_veh_concept_4];
					//$var_war_concept = $value[d_azp_ibn_report_structure_protecsa_t_war_concept];

					$var_pro_concept = $var_pro_concept_1 . ', ' . $var_pro_concept_2 . ', ' . $var_pro_concept_3 . ', ' . $var_pro_concept_4;
					$var_veh_concept = $var_veh_concept_1 . ', ' . $var_veh_concept_2 . ', ' . $var_veh_concept_3 . ', ' . $var_veh_concept_4;
					$var_dat_concept = $var_pro_concept . ', ' . $var_veh_concept . ', ' . $var_fur_concept . ', ' . $var_cam_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_protecsa_t_dat_concept => strtoupper($var_dat_concept),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_protecsa, $var_array,
						d_azp_ibn_report_structure_protecsa_id_azp_ibn_report_structure_protecsa . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_protecsa,
				d_azp_ibn_report_structure_protecsa_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_protecsa_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_protecsa_id_azp_ibn_report_structure_protecsa . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_protecsa_pro() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_property." . d_azp_ibn_property_t_bcount . " >= 6
			");
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_protecsa_veh() {
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_bcount . " >= 6
			");
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_banco_popular() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_banco_popular);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_banco_popular . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_popular_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_banco_popular_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_banco_popular_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_banco_popular_m_deleted => '1',
						d_azp_ibn_report_structure_banco_popular_m_description => '',
						d_azp_ibn_report_structure_banco_popular_m_level => '2',
						d_azp_ibn_report_structure_banco_popular_m_status => '1',
						d_azp_ibn_report_structure_banco_popular_m_temp => '1',

						d_azp_ibn_report_structure_banco_popular_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_banco_popular_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_banco_popular_t_dat_date_deliver => strtoupper(DATE),
						d_azp_ibn_report_structure_banco_popular_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_banco_popular_t_dat_obligation => strtoupper($value['lbl_azp_ibn_data_main_t_nro_obligation']),
						d_azp_ibn_report_structure_banco_popular_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_banco_popular_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_banco_popular_t_dat_city => strtoupper($value['lbl_azp_ibn_data_main_t_city']),
						d_azp_ibn_report_structure_banco_popular_t_dat_unique => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_attorney => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_segment => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_product => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_capital => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_mortgage => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),

						d_azp_ibn_report_structure_banco_popular_t_pro_enrollment => '',
						d_azp_ibn_report_structure_banco_popular_t_pro_address => '',
						d_azp_ibn_report_structure_banco_popular_t_pro_city => '',
						d_azp_ibn_report_structure_banco_popular_t_pro_assessment => '',
						d_azp_ibn_report_structure_banco_popular_t_pro_viability => '',

						d_azp_ibn_report_structure_banco_popular_t_veh_class => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_model => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_plaque => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_mark => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_city => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_value => '',

						d_azp_ibn_report_structure_banco_popular_t_war_garanty => '',
						d_azp_ibn_report_structure_banco_popular_t_war_liens => '',

						d_azp_ibn_report_structure_banco_popular_t_veh_concept => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_effective => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_limitation => '',
						d_azp_ibn_report_structure_banco_popular_t_veh_viability => '',

						d_azp_ibn_report_structure_banco_popular_t_fur_business => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_address => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_city => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_salary => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_type_affiliate => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_concept => '',
						d_azp_ibn_report_structure_banco_popular_t_fur_viability => '',

						d_azp_ibn_report_structure_banco_popular_t_cam_enrollment => '',
						d_azp_ibn_report_structure_banco_popular_t_cam_year_renew => '',
						d_azp_ibn_report_structure_banco_popular_t_cam_city => '',
						d_azp_ibn_report_structure_banco_popular_t_cam_concept => '',
						d_azp_ibn_report_structure_banco_popular_t_cam_viability => '',

						d_azp_ibn_report_structure_banco_popular_t_dat_company => strtoupper('GSC OUTSOURCING'),
						d_azp_ibn_report_structure_banco_popular_t_dat_client => strtoupper('0'),
						d_azp_ibn_report_structure_banco_popular_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_banco_popular_t_dat_observation => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_value_investigation => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_value_certificate => strtoupper(''),
						d_azp_ibn_report_structure_banco_popular_t_dat_total_client => strtoupper(''),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_banco_popular, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_banco_popular_t_cam_year_renew => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_banco_popular_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_structure_banco_popular_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
						d_azp_ibn_report_structure_banco_popular_t_cam_viability => strtoupper($value['lbl_azp_ibn_camera_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array, d_azp_ibn_report_structure_banco_popular_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_banco_popular_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_banco_popular_t_fur_city => strtoupper($value['lbl_azp_ibn_furniture_t_city']),
						d_azp_ibn_report_structure_banco_popular_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_banco_popular_t_fur_type_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_banco_popular_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_structure_banco_popular_t_fur_viability => strtoupper($value['lbl_azp_ibn_furniture_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array, d_azp_ibn_report_structure_banco_popular_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_structure_banco_popular_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_structure_banco_popular_t_pro_city => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_structure_banco_popular_t_pro_assessment => strtoupper($value['lbl_azp_ibn_property_t_assessment']),
						d_azp_ibn_report_structure_banco_popular_t_pro_viability => strtoupper($value['lbl_azp_ibn_property_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array, d_azp_ibn_report_structure_banco_popular_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_structure_banco_popular_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_structure_banco_popular_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_structure_banco_popular_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_structure_banco_popular_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_structure_banco_popular_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),

						d_azp_ibn_report_structure_banco_popular_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_structure_banco_popular_t_veh_effective => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_effective']),
						d_azp_ibn_report_structure_banco_popular_t_veh_limitation => strtoupper($value['lbl_azp_ibn_vehicle_t_assessment']),
						d_azp_ibn_report_structure_banco_popular_t_veh_viability => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array, d_azp_ibn_report_structure_banco_popular_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_banco_popular_t_war_garanty => '',
						d_azp_ibn_report_structure_banco_popular_t_war_liens => '',
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array, d_azp_ibn_report_structure_banco_popular_t_bas_account . " = '" . $value['lbl_azp_ibn_warranty_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_structure_banco_popular,
				d_azp_ibn_report_structure_banco_popular_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_structure_banco_popular_t_dat_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_popular_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_popular_id_azp_ibn_report_structure_banco_popular . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_banco_popular_id_azp_ibn_report_structure_banco_popular];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_banco_popular_t_dat_client => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_banco_popular, $var_array,
						d_azp_ibn_report_structure_banco_popular_id_azp_ibn_report_structure_banco_popular . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_banco_popular,
				d_azp_ibn_report_structure_banco_popular_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_banco_popular_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_banco_popular_id_azp_ibn_report_structure_banco_popular . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_coface() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_coface);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_coface . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
				GROUP BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " ASC
				ORDER BY tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					GROUP_CONCAT(tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . ") AS 'lbm_azp_ibn_property_t_nro_registration',
					GROUP_CONCAT(tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . ") AS 'lbm_azp_ibn_property_t_municipality',
					GROUP_CONCAT(tc_azp_ibn_property." . d_azp_ibn_property_t_concept . ") AS 'lbm_azp_ibn_property_t_concept',
					GROUP_CONCAT(tc_azp_ibn_property." . d_azp_ibn_property_t_address . ") AS 'lbm_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
				GROUP BY tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . ") AS 'lbm_azp_ibn_vehicle_t_plaque',
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . ") AS 'lbm_azp_ibn_vehicle_t_city',
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . ") AS 'lbm_azp_ibn_vehicle_t_class',
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . ") AS 'lbm_azp_ibn_vehicle_t_mark',
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . ") AS 'lbm_azp_ibn_vehicle_t_model',
					GROUP_CONCAT(tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . ") AS 'lbm_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
				GROUP BY tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " ASC
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_data_main) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_coface_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_coface_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_coface_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_coface_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_coface_m_deleted => '1',
						d_azp_ibn_report_structure_coface_m_description => '',
						d_azp_ibn_report_structure_coface_m_level => '2',
						d_azp_ibn_report_structure_coface_m_status => '1',
						d_azp_ibn_report_structure_coface_m_temp => '1',
						d_azp_ibn_report_structure_coface_t_bas_account => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_coface_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_coface_t_dat_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_number => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_client => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_coface_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_coface_t_dat_city => strtoupper($value['lbl_azp_ibn_data_main_t_city']),
						d_azp_ibn_report_structure_coface_t_pro_enrollment => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_pro_municipality => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_pro_concept => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_pro_address => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_plaque => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_city => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_class => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_mark => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_model => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_veh_concept => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_cam_enrollment => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_cam_year_renew => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_cam_city => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_cam_business => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_cam_concept => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_fur_business => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_fur_address => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_fur_rank => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_fur_contributor => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_fur_concept => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_concept => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_date_send => strtoupper(''),
						d_azp_ibn_report_structure_coface_t_dat_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_coface_t_dat_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_coface, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_coface_t_dat_date_arrival => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array, d_azp_ibn_report_structure_coface_m_deleted . " = '1'");
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_coface_t_dat_date_send => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array, d_azp_ibn_report_structure_coface_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_coface_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_coface_t_cam_year_renew => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_coface_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_city']),
						d_azp_ibn_report_structure_coface_t_cam_business => strtoupper($value['lbl_azp_ibn_camera_t_business_name']),
						d_azp_ibn_report_structure_coface_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array,
						d_azp_ibn_report_structure_coface_t_dat_identification . " = '" . $value['lbl_azp_ibn_camera_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_coface_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_coface_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_coface_t_fur_rank => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_coface_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_coface_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array,
						d_azp_ibn_report_structure_coface_t_dat_identification . " = '" . $value['lbl_azp_ibn_furniture_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					$var_nro_registration = str_replace(',', '_', $value['lbm_azp_ibn_property_t_nro_registration']);
					$var_municipality = str_replace(',', '_', $value['lbm_azp_ibn_property_t_municipality']);
					$var_address = str_replace(',', '_', $value['lbm_azp_ibn_property_t_address']);
					$var_concept = $value['lbm_azp_ibn_property_t_concept'] . ',';
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_coface_t_pro_enrollment => strtoupper($var_nro_registration),
						d_azp_ibn_report_structure_coface_t_pro_municipality => strtoupper($var_municipality),
						d_azp_ibn_report_structure_coface_t_pro_address => strtoupper($var_address),
						d_azp_ibn_report_structure_coface_t_pro_concept => strtoupper($var_concept),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array,
						d_azp_ibn_report_structure_coface_t_dat_identification . " = '" . $value['lbl_azp_ibn_property_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					$var_plaque = str_replace(',', '_', $value['lbm_azp_ibn_vehicle_t_plaque']);
					$var_city = str_replace(',', '_', $value['lbm_azp_ibn_vehicle_t_city']);
					$var_class = str_replace(',', '_', $value['lbm_azp_ibn_vehicle_t_class']);
					$var_mark = str_replace(',', '_', $value['lbm_azp_ibn_vehicle_t_mark']);
					$var_model = str_replace(',', '_', $value['lbm_azp_ibn_vehicle_t_model']);
					$var_concept = $value['lbm_azp_ibn_vehicle_t_concept'] . ',';
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_coface_t_veh_plaque => strtoupper($var_plaque),
						d_azp_ibn_report_structure_coface_t_veh_city => strtoupper($var_city),
						d_azp_ibn_report_structure_coface_t_veh_class => strtoupper($var_class),
						d_azp_ibn_report_structure_coface_t_veh_mark => strtoupper($var_mark),
						d_azp_ibn_report_structure_coface_t_veh_model => strtoupper($var_model),
						d_azp_ibn_report_structure_coface_t_veh_concept => strtoupper($var_concept),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array,
						d_azp_ibn_report_structure_coface_t_dat_identification . " = '" . $value['lbl_azp_ibn_vehicle_t_identification'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_coface);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id_rp = $value[d_azp_ibn_report_structure_coface_id_azp_ibn_report_structure_coface];
					$var_cam_concept = $value[d_azp_ibn_report_structure_coface_t_cam_concept];
					$var_fur_concept = $value[d_azp_ibn_report_structure_coface_t_fur_concept];
					$var_pro_concept = $value[d_azp_ibn_report_structure_coface_t_pro_concept];
					$var_veh_concept = $value[d_azp_ibn_report_structure_coface_t_veh_concept];
					$var_dat_concept = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept . ' ' . $var_cam_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_coface_t_dat_concept => $var_dat_concept,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_coface, $var_array, d_azp_ibn_report_structure_coface_id_azp_ibn_report_structure_coface . " = '" . $var_id_rp . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_coface,
				d_azp_ibn_report_structure_coface_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_coface_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_coface_id_azp_ibn_report_structure_coface . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_comercial() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_comercial);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_comercial . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_comercial_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_comercial_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_comercial_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_comercial_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_comercial_m_deleted => '1',
						d_azp_ibn_report_structure_comercial_m_description => '',
						d_azp_ibn_report_structure_comercial_m_level => '2',
						d_azp_ibn_report_structure_comercial_m_status => '1',
						d_azp_ibn_report_structure_comercial_m_temp => '1',

						d_azp_ibn_report_structure_comercial_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_comercial_t_bas_validate => '1',
						d_azp_ibn_report_structure_comercial_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_comercial_t_dat_formula => '0',
						d_azp_ibn_report_structure_comercial_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_comercial_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_comercial_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_comercial_t_dat_union_well => '',

						d_azp_ibn_report_structure_comercial_t_pro_enrollment => '',
						d_azp_ibn_report_structure_comercial_t_pro_municipality => '',
						d_azp_ibn_report_structure_comercial_t_pro_address => '',
						d_azp_ibn_report_structure_comercial_t_pro_ownership => '',
						d_azp_ibn_report_structure_comercial_t_pro_comercial => '',
						d_azp_ibn_report_structure_comercial_t_pro_assessment => '',
						d_azp_ibn_report_structure_comercial_t_pro_indebtedness => '',
						d_azp_ibn_report_structure_comercial_t_pro_affectation => '',
						d_azp_ibn_report_structure_comercial_t_pro_sequestered => '',
						d_azp_ibn_report_structure_comercial_t_pro_encumbrance => '',
						d_azp_ibn_report_structure_comercial_t_pro_concept => '',

						d_azp_ibn_report_structure_comercial_t_veh_viability => '',
						d_azp_ibn_report_structure_comercial_t_veh_plaque => '',
						d_azp_ibn_report_structure_comercial_t_veh_class => '',
						d_azp_ibn_report_structure_comercial_t_veh_mark => '',
						d_azp_ibn_report_structure_comercial_t_veh_model => '',
						d_azp_ibn_report_structure_comercial_t_veh_city => '',
						d_azp_ibn_report_structure_comercial_t_veh_value => '',
						d_azp_ibn_report_structure_comercial_t_veh_sequestered => '',
						d_azp_ibn_report_structure_comercial_t_veh_val_register => '',
						d_azp_ibn_report_structure_comercial_t_veh_entity => '',
						d_azp_ibn_report_structure_comercial_t_veh_concept => '',

						d_azp_ibn_report_structure_comercial_t_fur_rank => '',
						d_azp_ibn_report_structure_comercial_t_fur_entity_one => '',
						d_azp_ibn_report_structure_comercial_t_fur_city => '',
						d_azp_ibn_report_structure_comercial_t_fur_contributor => '',
						d_azp_ibn_report_structure_comercial_t_fur_concept => '',

						d_azp_ibn_report_structure_comercial_t_cam_enrollment => '',
						d_azp_ibn_report_structure_comercial_t_cam_city => '',
						d_azp_ibn_report_structure_comercial_t_cam_year_renew => '',
						d_azp_ibn_report_structure_comercial_t_cam_concept => '',

						d_azp_ibn_report_structure_comercial_t_fur_regime => '',
						d_azp_ibn_report_structure_comercial_t_fur_entity_two => '',
						d_azp_ibn_report_structure_comercial_t_fur_affiliate => '',
						d_azp_ibn_report_structure_comercial_t_fur_state => '',
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_comercial, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_comercial_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_comercial_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_municipality']),
						d_azp_ibn_report_structure_comercial_t_cam_year_renew => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_comercial_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_comercial, $var_array, d_azp_ibn_report_structure_comercial_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_comercial_t_fur_rank => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_comercial_t_fur_entity_one => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						d_azp_ibn_report_structure_comercial_t_fur_city => strtoupper($value['lbl_azp_ibn_furniture_t_city']),
						d_azp_ibn_report_structure_comercial_t_fur_contributor => strtoupper($value['lbl_azp_ibn_type_contributor_t_name']),
						d_azp_ibn_report_structure_comercial_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						
						d_azp_ibn_report_structure_comercial_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_comercial_t_fur_entity_two => strtoupper($value['lbl_azp_ibn_furniture_t_entity']),
						d_azp_ibn_report_structure_comercial_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_comercial_t_fur_state => strtoupper($value['lbl_azp_ibn_state_t_name']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_comercial, $var_array, d_azp_ibn_report_structure_comercial_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_comercial_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_structure_comercial_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_structure_comercial_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_structure_comercial_t_pro_ownership => strtoupper($value['lbl_azp_ibn_property_t_ownership']),
						d_azp_ibn_report_structure_comercial_t_pro_comercial => strtoupper($value['lbl_azp_ibn_property_t_market_value']),
						d_azp_ibn_report_structure_comercial_t_pro_assessment => strtoupper($value['lbl_azp_ibn_property_t_assessment']),
						d_azp_ibn_report_structure_comercial_t_pro_indebtedness => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_pro_affectation => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_pro_sequestered => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_pro_encumbrance => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_comercial, $var_array, d_azp_ibn_report_structure_comercial_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_comercial_t_veh_viability => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_viability']),
						d_azp_ibn_report_structure_comercial_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_structure_comercial_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_structure_comercial_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_structure_comercial_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_structure_comercial_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_structure_comercial_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),
						d_azp_ibn_report_structure_comercial_t_veh_sequestered => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_veh_val_register => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_veh_entity => strtoupper(''),
						d_azp_ibn_report_structure_comercial_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_comercial, $var_array, d_azp_ibn_report_structure_comercial_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_structure_comercial,
				d_azp_ibn_report_structure_comercial_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_structure_comercial_t_dat_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_comercial_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_comercial_id_azp_ibn_report_structure_comercial . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_comercial_id_azp_ibn_report_structure_comercial];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_comercial_t_dat_formula => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_comercial, $var_array,
						d_azp_ibn_report_structure_comercial_id_azp_ibn_report_structure_comercial . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_comercial,
				d_azp_ibn_report_structure_comercial_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_comercial_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_comercial_id_azp_ibn_report_structure_comercial . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_propia() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_propia);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_propia . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . " = '6'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " = '2'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '9'
						OR tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . " = '12')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND (tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '13'
						OR tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . " = '15')
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . " = '16'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_propia_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_propia_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_propia_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_propia_m_deleted => '1',
						d_azp_ibn_report_structure_propia_m_description => '',
						d_azp_ibn_report_structure_propia_m_level => '2',
						d_azp_ibn_report_structure_propia_m_status => '1',
						d_azp_ibn_report_structure_propia_m_temp => '1',

						d_azp_ibn_report_structure_propia_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_propia_t_bas_validate => '1',
						d_azp_ibn_report_structure_propia_t_dat_date_deliver => DATE,
						d_azp_ibn_report_structure_propia_t_dat_date_arrival => '',
						d_azp_ibn_report_structure_propia_t_dat_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_propia_t_dat_full_name => strtoupper($value['lbl_azp_ibn_data_main_t_full_name']),
						d_azp_ibn_report_structure_propia_t_dat_effective => strtoupper($value['lbl_azp_ibn_data_main_t_policy_effective']),
						d_azp_ibn_report_structure_propia_t_dat_viability => strtoupper($value['lbl_azp_ibn_data_main_t_policy_viability']),

						d_azp_ibn_report_structure_propia_t_pro_enrollment => '',
						d_azp_ibn_report_structure_propia_t_pro_address => '',
						d_azp_ibn_report_structure_propia_t_pro_municipality => '',
						d_azp_ibn_report_structure_propia_t_pro_ownership => '',
						d_azp_ibn_report_structure_propia_t_pro_encumbrance => '',
						d_azp_ibn_report_structure_propia_t_pro_assessment => '',
						d_azp_ibn_report_structure_propia_t_pro_concept => '',
						d_azp_ibn_report_structure_propia_t_pro_viability => '',

						d_azp_ibn_report_structure_propia_t_veh_class => '',
						d_azp_ibn_report_structure_propia_t_veh_model => '',
						d_azp_ibn_report_structure_propia_t_veh_plaque => '',
						d_azp_ibn_report_structure_propia_t_veh_mark => '',
						d_azp_ibn_report_structure_propia_t_veh_city => '',
						d_azp_ibn_report_structure_propia_t_veh_value => '',
						d_azp_ibn_report_structure_propia_t_veh_assessment => '',
						d_azp_ibn_report_structure_propia_t_veh_concept => '',
						d_azp_ibn_report_structure_propia_t_veh_viability => '',

						d_azp_ibn_report_structure_propia_t_fur_business => '',
						d_azp_ibn_report_structure_propia_t_fur_address => '',
						d_azp_ibn_report_structure_propia_t_fur_phone => '',
						d_azp_ibn_report_structure_propia_t_fur_city => '',
						d_azp_ibn_report_structure_propia_t_fur_salary => '',
						d_azp_ibn_report_structure_propia_t_fur_regime => '',
						d_azp_ibn_report_structure_propia_t_fur_affiliate => '',
						d_azp_ibn_report_structure_propia_t_fur_concept => '',
						d_azp_ibn_report_structure_propia_t_fur_viability => '',

						d_azp_ibn_report_structure_propia_t_cam_enrollment => '',
						d_azp_ibn_report_structure_propia_t_cam_city => '',
						d_azp_ibn_report_structure_propia_t_cam_establishment => '',
						d_azp_ibn_report_structure_propia_t_cam_year_renew => '',
						d_azp_ibn_report_structure_propia_t_cam_assessment => '',
						d_azp_ibn_report_structure_propia_t_cam_legal_identification => '',
						d_azp_ibn_report_structure_propia_t_cam_legal_full_name => '',
						d_azp_ibn_report_structure_propia_t_cam_concept => '',
						d_azp_ibn_report_structure_propia_t_cam_viability => '',

						d_azp_ibn_report_structure_propia_t_war_garanty => '',
						d_azp_ibn_report_structure_propia_t_war_concept => '',

						d_azp_ibn_report_structure_propia_t_dat_company => '',
						d_azp_ibn_report_structure_propia_t_dat_consecutive => strtoupper($value['lbl_azp_ibn_data_main_t_consecutive']),
						d_azp_ibn_report_structure_propia_t_dat_formula => '0',
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->insert(t_azp_ibn_report_structure_propia, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_t_cam_enrollment => strtoupper($value['lbl_azp_ibn_camera_t_nro_registration']),
						d_azp_ibn_report_structure_propia_t_cam_city => strtoupper($value['lbl_azp_ibn_camera_t_city']),
						d_azp_ibn_report_structure_propia_t_cam_establishment => strtoupper($value['lbl_azp_ibn_camera_t_establishment']),
						d_azp_ibn_report_structure_propia_t_cam_year_renew => strtoupper($value['lbl_azp_ibn_camera_t_renewal_date']),
						d_azp_ibn_report_structure_propia_t_cam_assessment => strtoupper($value['lbl_azp_ibn_camera_t_assessment']),
						d_azp_ibn_report_structure_propia_t_cam_legal_identification => strtoupper($value['lbl_azp_ibn_camera_t_legal_rp_certificate']),
						d_azp_ibn_report_structure_propia_t_cam_legal_full_name => strtoupper($value['lbl_azp_ibn_camera_t_legal_representative']),
						d_azp_ibn_report_structure_propia_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
						d_azp_ibn_report_structure_propia_t_cam_viability => strtoupper($value['lbl_azp_ibn_camera_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_t_bas_account . " = '" . $value['lbl_azp_ibn_camera_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_t_fur_business => strtoupper($value['lbl_azp_ibn_furniture_t_business_name']),
						d_azp_ibn_report_structure_propia_t_fur_address => strtoupper($value['lbl_azp_ibn_furniture_t_address']),
						d_azp_ibn_report_structure_propia_t_fur_phone => strtoupper($value['lbl_azp_ibn_furniture_t_phone']),
						d_azp_ibn_report_structure_propia_t_fur_city => strtoupper($value['lbl_azp_ibn_furniture_t_city']),
						d_azp_ibn_report_structure_propia_t_fur_salary => strtoupper($value['lbl_azp_ibn_rank_t_name']),
						d_azp_ibn_report_structure_propia_t_fur_regime => strtoupper($value['lbl_azp_ibn_regime_t_name']),
						d_azp_ibn_report_structure_propia_t_fur_affiliate => strtoupper($value['lbl_azp_ibn_type_affiliate_t_name']),
						d_azp_ibn_report_structure_propia_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_structure_propia_t_fur_viability => strtoupper($value['lbl_azp_ibn_furniture_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_t_bas_account . " = '" . $value['lbl_azp_ibn_furniture_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_t_pro_enrollment => strtoupper($value['lbl_azp_ibn_property_t_nro_registration']),
						d_azp_ibn_report_structure_propia_t_pro_address => strtoupper($value['lbl_azp_ibn_property_t_address']),
						d_azp_ibn_report_structure_propia_t_pro_municipality => strtoupper($value['lbl_azp_ibn_property_t_municipality']),
						d_azp_ibn_report_structure_propia_t_pro_ownership => strtoupper($value['lbl_azp_ibn_property_t_ownership']),
						d_azp_ibn_report_structure_propia_t_pro_encumbrance => strtoupper($value['lbl_azp_ibn_property_t_market_value']),
						d_azp_ibn_report_structure_propia_t_pro_assessment => strtoupper($value['lbl_azp_ibn_property_t_assessment']),
						d_azp_ibn_report_structure_propia_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
						d_azp_ibn_report_structure_propia_t_pro_viability => strtoupper($value['lbl_azp_ibn_property_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_t_bas_account . " = '" . $value['lbl_azp_ibn_property_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_t_veh_class => strtoupper($value['lbl_azp_ibn_vehicle_t_class']),
						d_azp_ibn_report_structure_propia_t_veh_model => strtoupper($value['lbl_azp_ibn_vehicle_t_model']),
						d_azp_ibn_report_structure_propia_t_veh_plaque => strtoupper($value['lbl_azp_ibn_vehicle_t_plaque']),
						d_azp_ibn_report_structure_propia_t_veh_mark => strtoupper($value['lbl_azp_ibn_vehicle_t_mark']),
						d_azp_ibn_report_structure_propia_t_veh_city => strtoupper($value['lbl_azp_ibn_vehicle_t_city']),
						d_azp_ibn_report_structure_propia_t_veh_value => strtoupper($value['lbl_azp_ibn_vehicle_t_value_vehicle']),
						d_azp_ibn_report_structure_propia_t_veh_assessment => strtoupper($value['lbl_azp_ibn_vehicle_t_assessment']),
						d_azp_ibn_report_structure_propia_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_structure_propia_t_veh_viability => strtoupper($value['lbl_azp_ibn_vehicle_t_policy_viability']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_t_bas_account . " = '" . $value['lbl_azp_ibn_vehicle_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_warranty) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_warranty as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_propia_t_war_garanty => strtoupper($value['lbl_azp_ibn_warranty_t_well_name']),
						d_azp_ibn_report_structure_propia_t_war_concept => strtoupper($value['lbl_azp_ibn_warranty_t_well_detail']),
					);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_t_bas_account . " = '" . $value['lbl_azp_ibn_warranty_t_acount'] . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la consulta es verdadera
			if (true == $var_sql_control_panel) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_control_panel as $key => $value):
					# Asignacino de valores a nuevas variables
					$var_cpn_code_research = $value['lbl_azp_ibn_control_panel_t_code_research'];
					$var_cpn_date_arrival = $value['lbl_azp_ibn_control_panel_t_date_arrival'];
					$var_cpn_date_final = $value['lbl_azp_ibn_control_panel_t_date_final'];
					$var_cpn_date_load = $value['lbl_azp_ibn_control_panel_t_date_load'];
					$var_cpn_document = $value['lbl_azp_ibn_control_panel_t_document'];
					$var_cpn_encode = $value['lbl_azp_ibn_control_panel_t_encode'];
					$var_cpn_entity = $value['lbl_azp_ibn_control_panel_t_entity'];
					$var_cpn_finished = $value['lbl_azp_ibn_control_panel_t_finished'];
					$var_cpn_mod_camera = $value['lbl_azp_ibn_control_panel_t_mod_camera'];
					$var_cpn_mod_furniture = $value['lbl_azp_ibn_control_panel_t_mod_furniture'];
					$var_cpn_mod_property = $value['lbl_azp_ibn_control_panel_t_mod_property'];
					$var_cpn_mod_vehicle = $value['lbl_azp_ibn_control_panel_t_mod_vehicle'];
					$var_cpn_mod_warranty = $value['lbl_azp_ibn_control_panel_t_mod_warranty'];
					$var_cpn_register = $value['lbl_azp_ibn_control_panel_t_register'];
					$var_cpn_route = $value['lbl_azp_ibn_control_panel_t_route'];
					$var_cpn_state = $value['lbl_azp_ibn_control_panel_t_state'];
					$var_cpn_client = $value['lbl_azp_ibn_client_t_name'];
					#-------------------------------------------------------------------------#
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_propia_t_dat_date_arrival => strtoupper($value['lbl_azp_ibn_control_panel_t_date_arrival']),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array, d_azp_ibn_report_structure_propia_m_deleted . " = '1'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_formula = $this->db->select("*", t_azp_ibn_report_structure_propia,
				d_azp_ibn_report_structure_propia_m_deleted . " = '1'" . " " .
				"GROUP BY" . " " . d_azp_ibn_report_structure_propia_t_dat_identification . " " . "ASC" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_propia_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_propia_id_azp_ibn_report_structure_propia . " " . "ASC"
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_formula) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_formula as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_propia_id_azp_ibn_report_structure_propia];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_propia_t_dat_formula => strtoupper('1'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_propia, $var_array,
						d_azp_ibn_report_structure_propia_id_azp_ibn_report_structure_propia . " = '" . $var_id . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_propia,
				d_azp_ibn_report_structure_propia_t_bas_validate . " = '1'" . " " .
				"ORDER BY" . " " . d_azp_ibn_report_structure_propia_t_dat_consecutive . " " . "ASC" . "," . " " .
					d_azp_ibn_report_structure_propia_id_azp_ibn_report_structure_propia . " " . "ASC"
			);
		}

		# Query Sql Insert
		final public function sql_controller_ibn_report_structure_ics_bogota() {
			$this->db->query("DELETE FROM " . t_azp_ibn_report_structure_ics_bogota);
			$this->db->query("ALTER TABLE " . t_azp_ibn_report_structure_ics_bogota . " AUTO_INCREMENT = 1");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_control_panel = $this->db->query("
				SELECT
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " AS 'lbl_azp_ibn_control_panel_id_azp_ibn_control_panel',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_code_research . " AS 'lbl_azp_ibn_control_panel_t_code_research',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_arrival . " AS 'lbl_azp_ibn_control_panel_t_date_arrival',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_final . " AS 'lbl_azp_ibn_control_panel_t_date_final',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_load . " AS 'lbl_azp_ibn_control_panel_t_date_load',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_date_reply . " AS 'lbl_azp_ibn_control_panel_t_date_reply',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_document . " AS 'lbl_azp_ibn_control_panel_t_document',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_encode . " AS 'lbl_azp_ibn_control_panel_t_encode',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_entity . " AS 'lbl_azp_ibn_control_panel_t_entity',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_finished . " AS 'lbl_azp_ibn_control_panel_t_finished',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_camera . " AS 'lbl_azp_ibn_control_panel_t_mod_camera',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_furniture . " AS 'lbl_azp_ibn_control_panel_t_mod_furniture',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_property . " AS 'lbl_azp_ibn_control_panel_t_mod_property',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_vehicle . " AS 'lbl_azp_ibn_control_panel_t_mod_vehicle',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_mod_warranty . " AS 'lbl_azp_ibn_control_panel_t_mod_warranty',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_register . " AS 'lbl_azp_ibn_control_panel_t_register',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_route . " AS 'lbl_azp_ibn_control_panel_t_route',
					tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_t_state . " AS 'lbl_azp_ibn_control_panel_t_state',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				WHERE tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $this->id . "'
					AND tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_m_deleted . " = '1'
			");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql_data_main = $this->db->query("
				SELECT
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_id_azp_ibn_data_main . " AS 'lbl_azp_ibn_data_main_id_azp_ibn_data_main',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_acount . " AS 'lbl_azp_ibn_data_main_t_acount',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_city . " AS 'lbl_azp_ibn_data_main_t_city',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_code . " AS 'lbl_azp_ibn_data_main_t_code',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_base . " AS 'lbl_azp_ibn_data_main_t_coincidence_base',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_coincidence_date . " AS 'lbl_azp_ibn_data_main_t_coincidence_date',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_consecutive . " AS 'lbl_azp_ibn_data_main_t_consecutive',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_data . " AS 'lbl_azp_ibn_data_main_t_data',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_department . " AS 'lbl_azp_ibn_data_main_t_department',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_full_name . " AS 'lbl_azp_ibn_data_main_t_full_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_identification . " AS 'lbl_azp_ibn_data_main_t_identification',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_nro_obligation . " AS 'lbl_azp_ibn_data_main_t_nro_obligation',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_final . " AS 'lbl_azp_ibn_data_main_t_policy_final',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_effective . " AS 'lbl_azp_ibn_data_main_t_policy_effective',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_viability . " AS 'lbl_azp_ibn_data_main_t_policy_viability',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_camera . " AS 'lbl_azp_ibn_data_main_t_policy_e_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_e_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_property . " AS 'lbl_azp_ibn_data_main_t_policy_e_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_e_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_e_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_e_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_camera . " AS 'lbl_azp_ibn_data_main_t_policy_v_camera',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_furniture . " AS 'lbl_azp_ibn_data_main_t_policy_v_furniture',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_property . " AS 'lbl_azp_ibn_data_main_t_policy_v_property',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_vehicle . " AS 'lbl_azp_ibn_data_main_t_policy_v_vehicle',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_t_policy_v_warranty . " AS 'lbl_azp_ibn_data_main_t_policy_v_warranty',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_document . " AS 'lbl_azp_ibn_data_main_w_document',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_error . " AS 'lbl_azp_ibn_data_main_w_error',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_folder . " AS 'lbl_azp_ibn_data_main_w_folder',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_name . " AS 'lbl_azp_ibn_data_main_w_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_route . " AS 'lbl_azp_ibn_data_main_w_route',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_size . " AS 'lbl_azp_ibn_data_main_w_size',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_tmp_name . " AS 'lbl_azp_ibn_data_main_w_tmp_name',
					tc_azp_ibn_data_main." . d_azp_ibn_data_main_w_type . " AS 'lbl_azp_ibn_data_main_w_type',
					tc_azp_ibn_client." . d_azp_ibn_client_t_name . " AS 'lbl_azp_ibn_client_t_name'
				FROM " . t_azp_ibn_data_main . " tc_azp_ibn_data_main
				
				INNER JOIN " . t_azp_ibn_client . " tc_azp_ibn_client
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_client . "
						= tc_azp_ibn_client." . d_azp_ibn_client_id_azp_ibn_client . "
				
				INNER JOIN " . t_azp_ibn_control_panel . " tc_azp_ibn_control_panel
					ON tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . "
						= tc_azp_ibn_control_panel." . d_azp_ibn_control_panel_id_azp_ibn_control_panel . "
				
				WHERE tc_azp_ibn_data_main." . d_azp_ibn_data_main_m_deleted . " = '1'
					AND tc_azp_ibn_data_main." . d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_camera = $this->db->query("
				SELECT
					tc_azp_ibn_camera." . d_azp_ibn_camera_id_azp_ibn_camera . " AS 'lbl_azp_ibn_camera_id_azp_ibn_camera',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_created . " AS 'lbl_azp_ibn_camera_m_by_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_by_modified . " AS 'lbl_azp_ibn_camera_m_by_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_created . " AS 'lbl_azp_ibn_camera_m_date_created',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_date_modified . " AS 'lbl_azp_ibn_camera_m_date_modified',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " AS 'lbl_azp_ibn_camera_m_deleted',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_description . " AS 'lbl_azp_ibn_camera_m_description',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_level . " AS 'lbl_azp_ibn_camera_m_level',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_status . " AS 'lbl_azp_ibn_camera_m_status',
					tc_azp_ibn_camera." . d_azp_ibn_camera_m_temp . " AS 'lbl_azp_ibn_camera_m_temp',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_acount . " AS 'lbl_azp_ibn_camera_t_acount',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_act_economic . " AS 'lbl_azp_ibn_camera_t_act_economic',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_address . " AS 'lbl_azp_ibn_camera_t_address',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_assessment . " AS 'lbl_azp_ibn_camera_t_assessment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_business_name . " AS 'lbl_azp_ibn_camera_t_business_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_causal_feasibility . " AS 'lbl_azp_ibn_camera_t_causal_feasibility',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_city . " AS 'lbl_azp_ibn_camera_t_city',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_comment_legal . " AS 'lbl_azp_ibn_camera_t_comment_legal',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_concept . " AS 'lbl_azp_ibn_camera_t_concept',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_consecutive . " AS 'lbl_azp_ibn_camera_t_consecutive',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_department . " AS 'lbl_azp_ibn_camera_t_department',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_establishment . " AS 'lbl_azp_ibn_camera_t_establishment',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_full_name . " AS 'lbl_azp_ibn_camera_t_full_name',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_identification . " AS 'lbl_azp_ibn_camera_t_identification',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_representative . " AS 'lbl_azp_ibn_camera_t_legal_representative',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_legal_rp_certificate . " AS 'lbl_azp_ibn_camera_t_legal_rp_certificate',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_limitation . " AS 'lbl_azp_ibn_camera_t_limitation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_municipality . " AS 'lbl_azp_ibn_camera_t_municipality',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nit . " AS 'lbl_azp_ibn_camera_t_nit',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_nro_registration . " AS 'lbl_azp_ibn_camera_t_nro_registration',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_observation . " AS 'lbl_azp_ibn_camera_t_observation',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_phone . " AS 'lbl_azp_ibn_camera_t_phone',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_effective . " AS 'lbl_azp_ibn_camera_t_policy_effective',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_final . " AS 'lbl_azp_ibn_camera_t_policy_final',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_policy_viability . " AS 'lbl_azp_ibn_camera_t_policy_viability',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_renewal_date . " AS 'lbl_azp_ibn_camera_t_renewal_date',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_rup . " AS 'lbl_azp_ibn_camera_t_rup',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_total_active . " AS 'lbl_azp_ibn_camera_t_total_active',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_company . " AS 'lbl_azp_ibn_camera_t_type_company',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_type_organization . " AS 'lbl_azp_ibn_camera_t_type_organization',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_viable . " AS 'lbl_azp_ibn_camera_t_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_well_viable . " AS 'lbl_azp_ibn_camera_t_well_viable',
					tc_azp_ibn_camera." . d_azp_ibn_camera_t_year . " AS 'lbl_azp_ibn_camera_t_year',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_t_name . " AS 'lbl_azp_ibn_type_certified_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name'
				FROM " . t_azp_ibn_camera . " tc_azp_ibn_camera
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_certified . " tc_azp_ibn_type_certified
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_certified . "
						= tc_azp_ibn_type_certified." . d_azp_ibn_type_certified_id_azp_ibn_type_certified . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_camera." . d_azp_ibn_camera_m_deleted . " = '1'
					AND tc_azp_ibn_camera." . d_azp_ibn_camera_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_furniture = $this->db->query("
				SELECT
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_id_azp_ibn_furniture . " AS 'lbl_azp_ibn_furniture_id_azp_ibn_furniture',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_created . " AS 'lbl_azp_ibn_furniture_m_by_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_by_modified . " AS 'lbl_azp_ibn_furniture_m_by_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_created . " AS 'lbl_azp_ibn_furniture_m_date_created',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_date_modified . " AS 'lbl_azp_ibn_furniture_m_date_modified',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " AS 'lbl_azp_ibn_furniture_m_deleted',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_description . " AS 'lbl_azp_ibn_furniture_m_description',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_level . " AS 'lbl_azp_ibn_furniture_m_level',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_status . " AS 'lbl_azp_ibn_furniture_m_status',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_temp . " AS 'lbl_azp_ibn_furniture_m_temp',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_acount . " AS 'lbl_azp_ibn_furniture_t_acount',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_address . " AS 'lbl_azp_ibn_furniture_t_address',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_business_name . " AS 'lbl_azp_ibn_furniture_t_business_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_city . " AS 'lbl_azp_ibn_furniture_t_city',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_comment_legal . " AS 'lbl_azp_ibn_furniture_t_comment_legal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_concept . " AS 'lbl_azp_ibn_furniture_t_concept',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_consecutive . " AS 'lbl_azp_ibn_furniture_t_consecutive',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_department . " AS 'lbl_azp_ibn_furniture_t_department',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_entity . " AS 'lbl_azp_ibn_furniture_t_entity',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_full_name . " AS 'lbl_azp_ibn_furniture_t_full_name',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_identification . " AS 'lbl_azp_ibn_furniture_t_identification',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_limitation . " AS 'lbl_azp_ibn_furniture_t_limitation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_municipality . " AS 'lbl_azp_ibn_furniture_t_municipality',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_nit . " AS 'lbl_azp_ibn_furniture_t_nit',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_observation . " AS 'lbl_azp_ibn_furniture_t_observation',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_phone . " AS 'lbl_azp_ibn_furniture_t_phone',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_effective . " AS 'lbl_azp_ibn_furniture_t_policy_effective',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_final . " AS 'lbl_azp_ibn_furniture_t_policy_final',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_policy_viability . " AS 'lbl_azp_ibn_furniture_t_policy_viability',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_salary . " AS 'lbl_azp_ibn_furniture_t_salary',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_viable_causal . " AS 'lbl_azp_ibn_furniture_t_viable_causal',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_option . " AS 'lbl_azp_ibn_furniture_t_well_option',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_well_viable . " AS 'lbl_azp_ibn_furniture_t_well_viable',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_one . " AS 'lbl_azp_ibn_furniture_t_text_one',
					tc_azp_ibn_furniture." . d_azp_ibn_furniture_t_text_two . " AS 'lbl_azp_ibn_furniture_t_text_two',
					tc_azp_ibn_outcome." . d_azp_ibn_outcome_t_name . " AS 'lbl_azp_ibn_outcome_t_name',
					tc_azp_ibn_rank." . d_azp_ibn_rank_t_name . " AS 'lbl_azp_ibn_rank_t_name',
					tc_azp_ibn_regime." . d_azp_ibn_regime_t_name . " AS 'lbl_azp_ibn_regime_t_name',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_t_name . " AS 'lbl_azp_ibn_type_affiliate_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_t_name . " AS 'lbl_azp_ibn_type_contributor_t_name'
				FROM " . t_azp_ibn_furniture . " tc_azp_ibn_furniture
				
				INNER JOIN " . t_azp_ibn_outcome . " tc_azp_ibn_outcome
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_outcome . " =
						tc_azp_ibn_outcome." . d_azp_ibn_outcome_id_azp_ibn_outcome . "
				
				INNER JOIN " . t_azp_ibn_rank . " tc_azp_ibn_rank
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_rank . " =
						tc_azp_ibn_rank." . d_azp_ibn_rank_id_azp_ibn_rank . "
				
				INNER JOIN " . t_azp_ibn_regime . " tc_azp_ibn_regime
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_regime . " =
						tc_azp_ibn_regime." . d_azp_ibn_regime_id_azp_ibn_regime . "
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_state . " =
						tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_affiliate . " tc_azp_ibn_type_affiliate
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_affiliate . " =
						tc_azp_ibn_type_affiliate." . d_azp_ibn_type_affiliate_id_azp_ibn_type_affiliate . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_concept . " =
						tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_contributor . " tc_azp_ibn_type_contributor
					ON tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_type_contributor . " =
						tc_azp_ibn_type_contributor." . d_azp_ibn_type_contributor_id_azp_ibn_type_contributor . "
				
				WHERE tc_azp_ibn_furniture." . d_azp_ibn_furniture_m_deleted . " = '1'
					AND tc_azp_ibn_furniture." . d_azp_ibn_furniture_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_property = $this->db->query("
				SELECT
					tc_azp_ibn_property." . d_azp_ibn_property_id_azp_ibn_property . " AS 'lbl_azp_ibn_property_id_azp_ibn_property',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_created . " AS 'lbl_azp_ibn_property_m_by_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_by_modified . " AS 'lbl_azp_ibn_property_m_by_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_created . " AS 'lbl_azp_ibn_property_m_date_created',
					tc_azp_ibn_property." . d_azp_ibn_property_m_date_modified . " AS 'lbl_azp_ibn_property_m_date_modified',
					tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " AS 'lbl_azp_ibn_property_m_deleted',
					tc_azp_ibn_property." . d_azp_ibn_property_m_description . " AS 'lbl_azp_ibn_property_m_description',
					tc_azp_ibn_property." . d_azp_ibn_property_m_level . " AS 'lbl_azp_ibn_property_m_level',
					tc_azp_ibn_property." . d_azp_ibn_property_m_status . " AS 'lbl_azp_ibn_property_m_status',
					tc_azp_ibn_property." . d_azp_ibn_property_m_temp . " AS 'lbl_azp_ibn_property_m_temp',
					tc_azp_ibn_property." . d_azp_ibn_property_t_acount . " AS 'lbl_azp_ibn_property_t_acount',
					tc_azp_ibn_property." . d_azp_ibn_property_t_address . " AS 'lbl_azp_ibn_property_t_address',
					tc_azp_ibn_property." . d_azp_ibn_property_t_area . " AS 'lbl_azp_ibn_property_t_area',
					tc_azp_ibn_property." . d_azp_ibn_property_t_assessment . " AS 'lbl_azp_ibn_property_t_assessment',
					tc_azp_ibn_property." . d_azp_ibn_property_t_causal_feasibility . " AS 'lbl_azp_ibn_property_t_causal_feasibility',
					tc_azp_ibn_property." . d_azp_ibn_property_t_comment_legal . " AS 'lbl_azp_ibn_property_t_comment_legal',
					tc_azp_ibn_property." . d_azp_ibn_property_t_concept . " AS 'lbl_azp_ibn_property_t_concept',
					tc_azp_ibn_property." . d_azp_ibn_property_t_consecutive . " AS 'lbl_azp_ibn_property_t_consecutive',
					tc_azp_ibn_property." . d_azp_ibn_property_t_department . " AS 'lbl_azp_ibn_property_t_department',
					tc_azp_ibn_property." . d_azp_ibn_property_t_full_name . " AS 'lbl_azp_ibn_property_t_full_name',
					tc_azp_ibn_property." . d_azp_ibn_property_t_identification . " AS 'lbl_azp_ibn_property_t_identification',
					tc_azp_ibn_property." . d_azp_ibn_property_t_limitation . " AS 'lbl_azp_ibn_property_t_limitation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_market_value . " AS 'lbl_azp_ibn_property_t_market_value',
					tc_azp_ibn_property." . d_azp_ibn_property_t_municipality . " AS 'lbl_azp_ibn_property_t_municipality',
					tc_azp_ibn_property." . d_azp_ibn_property_t_nro_registration . " AS 'lbl_azp_ibn_property_t_nro_registration',
					tc_azp_ibn_property." . d_azp_ibn_property_t_observation . " AS 'lbl_azp_ibn_property_t_observation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_ownership . " AS 'lbl_azp_ibn_property_t_ownership',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_effective . " AS 'lbl_azp_ibn_property_t_policy_effective',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_final . " AS 'lbl_azp_ibn_property_t_policy_final',
					tc_azp_ibn_property." . d_azp_ibn_property_t_policy_viability . " AS 'lbl_azp_ibn_property_t_policy_viability',
					tc_azp_ibn_property." . d_azp_ibn_property_t_purchase_annotation . " AS 'lbl_azp_ibn_property_t_purchase_annotation',
					tc_azp_ibn_property." . d_azp_ibn_property_t_viable . " AS 'lbl_azp_ibn_property_t_viable',
					tc_azp_ibn_property." . d_azp_ibn_property_t_well_viable . " AS 'lbl_azp_ibn_property_t_well_viable',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_one . " AS 'lbl_azp_ibn_property_t_text_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_two . " AS 'lbl_azp_ibn_property_t_text_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_three . " AS 'lbl_azp_ibn_property_t_text_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_four . " AS 'lbl_azp_ibn_property_t_text_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_five . " AS 'lbl_azp_ibn_property_t_text_five',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_six . " AS 'lbl_azp_ibn_property_t_text_six',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_seven . " AS 'lbl_azp_ibn_property_t_text_seven',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_text_eight . " AS 'lbl_azp_ibn_property_t_text_eight',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_one . " AS 'lbl_azp_ibn_property_t_sel_one',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_two . " AS 'lbl_azp_ibn_property_t_sel_two',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_three . " AS 'lbl_azp_ibn_property_t_sel_three',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_four . " AS 'lbl_azp_ibn_property_t_sel_four',
                    tc_azp_ibn_property." . d_azp_ibn_property_t_sel_five . " AS 'lbl_azp_ibn_property_t_sel_five',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name',
					tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_t_name . " AS 'lbl_azp_ibn_type_concept_t_name',
					tc_azp_ibn_type_property." . d_azp_ibn_type_property_t_name . " AS 'lbl_azp_ibn_type_property_t_name'
				FROM " . t_azp_ibn_property . " tc_azp_ibn_property
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				INNER JOIN " . t_azp_ibn_type_property . " tc_azp_ibn_type_property
					ON tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_type_property . "
						= tc_azp_ibn_type_property." . d_azp_ibn_type_property_id_azp_ibn_type_property . "
				
				WHERE tc_azp_ibn_property." . d_azp_ibn_property_m_deleted . " = '1'
					AND tc_azp_ibn_property." . d_azp_ibn_property_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_vehicle = $this->db->query("
				SELECT
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_id_azp_ibn_vehicle . " AS 'lbl_azp_ibn_vehicle_id_azp_ibn_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_created . " AS 'lbl_azp_ibn_vehicle_m_by_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_by_modified . " AS 'lbl_azp_ibn_vehicle_m_by_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_created . " AS 'lbl_azp_ibn_vehicle_m_date_created',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_date_modified . " AS 'lbl_azp_ibn_vehicle_m_date_modified',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " AS 'lbl_azp_ibn_vehicle_m_deleted',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_description . " AS 'lbl_azp_ibn_vehicle_m_description',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_level . " AS 'lbl_azp_ibn_vehicle_m_level',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_status . " AS 'lbl_azp_ibn_vehicle_m_status',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_temp . " AS 'lbl_azp_ibn_vehicle_m_temp',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_acount . " AS 'lbl_azp_ibn_vehicle_t_acount',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_assessment . " AS 'lbl_azp_ibn_vehicle_t_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_causal_feasibility . " AS 'lbl_azp_ibn_vehicle_t_causal_feasibility',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_city . " AS 'lbl_azp_ibn_vehicle_t_city',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_class . " AS 'lbl_azp_ibn_vehicle_t_class',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_color . " AS 'lbl_azp_ibn_vehicle_t_color',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_comment_legal . " AS 'lbl_azp_ibn_vehicle_t_comment_legal',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_concept . " AS 'lbl_azp_ibn_vehicle_t_concept',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_consecutive . " AS 'lbl_azp_ibn_vehicle_t_consecutive',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_full_name . " AS 'lbl_azp_ibn_vehicle_t_full_name',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_identification . " AS 'lbl_azp_ibn_vehicle_t_identification',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_limitation . " AS 'lbl_azp_ibn_vehicle_t_limitation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_line . " AS 'lbl_azp_ibn_vehicle_t_line',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_make_camera . " AS 'lbl_azp_ibn_vehicle_t_make_camera',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_mark . " AS 'lbl_azp_ibn_vehicle_t_mark',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_model . " AS 'lbl_azp_ibn_vehicle_t_model',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_observation . " AS 'lbl_azp_ibn_vehicle_t_observation',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_plaque . " AS 'lbl_azp_ibn_vehicle_t_plaque',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_effective . " AS 'lbl_azp_ibn_vehicle_t_policy_effective',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_final . " AS 'lbl_azp_ibn_vehicle_t_policy_final',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_policy_viability . " AS 'lbl_azp_ibn_vehicle_t_policy_viability',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_service . " AS 'lbl_azp_ibn_vehicle_t_service',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_assessment . " AS 'lbl_azp_ibn_vehicle_t_value_assessment',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_value_vehicle . " AS 'lbl_azp_ibn_vehicle_t_value_vehicle',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_viable . " AS 'lbl_azp_ibn_vehicle_t_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_well_viable . " AS 'lbl_azp_ibn_vehicle_t_well_viable',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_one . " AS 'lbl_azp_ibn_vehicle_t_text_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_two . " AS 'lbl_azp_ibn_vehicle_t_text_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_three . " AS 'lbl_azp_ibn_vehicle_t_text_three',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_four . " AS 'lbl_azp_ibn_vehicle_t_text_four',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_text_five . " AS 'lbl_azp_ibn_vehicle_t_text_five',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_one . " AS 'lbl_azp_ibn_vehicle_t_sel_one',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_two . " AS 'lbl_azp_ibn_vehicle_t_sel_two',
					tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_t_sel_three . " AS 'lbl_azp_ibn_vehicle_t_sel_three',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_vehicle . " tc_azp_ibn_vehicle
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				INNER JOIN " . t_azp_ibn_type_concept . " tc_azp_ibn_type_concept
					ON tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_type_concept . "
						= tc_azp_ibn_type_concept." . d_azp_ibn_type_concept_id_azp_ibn_type_concept . "
				
				WHERE tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_m_deleted . " = '1'
					AND tc_azp_ibn_vehicle." . d_azp_ibn_vehicle_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			$var_sql_warranty = $this->db->query("
				SELECT
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_id_azp_ibn_warranty . " AS 'lbl_azp_ibn_warranty_id_azp_ibn_warranty',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_created . " AS 'lbl_azp_ibn_warranty_m_by_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_by_modified . " AS 'lbl_azp_ibn_warranty_m_by_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_created . " AS 'lbl_azp_ibn_warranty_m_date_created',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_date_modified . " AS 'lbl_azp_ibn_warranty_m_date_modified',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " AS 'lbl_azp_ibn_warranty_m_deleted',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_description . " AS 'lbl_azp_ibn_warranty_m_description',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_level . " AS 'lbl_azp_ibn_warranty_m_level',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_status . " AS 'lbl_azp_ibn_warranty_m_status',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_temp . " AS 'lbl_azp_ibn_warranty_m_temp',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_acount . " AS 'lbl_azp_ibn_warranty_t_acount',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_comment_legal . " AS 'lbl_azp_ibn_warranty_t_comment_legal',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_concept . " AS 'lbl_azp_ibn_warranty_t_concept',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_consecutive . " AS 'lbl_azp_ibn_warranty_t_consecutive',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_creditor . " AS 'lbl_azp_ibn_warranty_t_creditor',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_date . " AS 'lbl_azp_ibn_warranty_t_date',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_full_name . " AS 'lbl_azp_ibn_warranty_t_full_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_identification . " AS 'lbl_azp_ibn_warranty_t_identification',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_limitation . " AS 'lbl_azp_ibn_warranty_t_limitation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_observation . " AS 'lbl_azp_ibn_warranty_t_observation',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_effective . " AS 'lbl_azp_ibn_warranty_t_policy_effective',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_final . " AS 'lbl_azp_ibn_warranty_t_policy_final',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_policy_viability . " AS 'lbl_azp_ibn_warranty_t_policy_viability',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_detail . " AS 'lbl_azp_ibn_warranty_t_well_detail',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_well_name . " AS 'lbl_azp_ibn_warranty_t_well_name',
					tc_azp_ibn_warranty." . d_azp_ibn_warranty_t_value . " AS 'lbl_azp_ibn_warranty_t_value',
					tc_azp_ibn_state." . d_azp_ibn_state_t_name . " AS 'lbl_azp_ibn_state_t_name'
				FROM " . t_azp_ibn_warranty . " tc_azp_ibn_warranty
				
				INNER JOIN " . t_azp_ibn_state . " tc_azp_ibn_state
					ON tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_state . "
						= tc_azp_ibn_state." . d_azp_ibn_state_id_azp_ibn_state . "
				
				WHERE tc_azp_ibn_warranty." . d_azp_ibn_warranty_m_deleted . " = '1'
					AND tc_azp_ibn_warranty." . d_azp_ibn_warranty_v_id_azp_ibn_control_panel . " = '" . $this->id . "'
			");
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_data_main) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_data_main as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_ics_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_ics_bogota_m_description => '',
						d_azp_ibn_report_structure_ics_bogota_m_level => '2',
						d_azp_ibn_report_structure_ics_bogota_m_status => '1',
						d_azp_ibn_report_structure_ics_bogota_m_temp => '1',
						d_azp_ibn_report_structure_ics_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_data_main_t_acount']),
						d_azp_ibn_report_structure_ics_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_ics_bogota_t_identification => strtoupper($value['lbl_azp_ibn_data_main_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_ics_bogota_t_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_ics_bogota_t_id_ics => strtoupper($value['lbl_azp_ibn_data_main_t_code']),
						d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INVEST_ NEGATIVA'),
						d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_cam_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_fur_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_pro_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_veh_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_module => strtoupper('Principal'),
						d_azp_ibn_report_structure_ics_bogota_t_viable => strtoupper(''),
					);
					$this->db->insert(t_azp_ibn_report_structure_ics_bogota, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			/*if (true == $var_sql_camera) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_camera as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_ics_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_ics_bogota_m_description => '',
						d_azp_ibn_report_structure_ics_bogota_m_level => '2',
						d_azp_ibn_report_structure_ics_bogota_m_status => '1',
						d_azp_ibn_report_structure_ics_bogota_m_temp => '1',
						d_azp_ibn_report_structure_ics_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_camera_t_acount']),
						d_azp_ibn_report_structure_ics_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_ics_bogota_t_identification => strtoupper($value['lbl_azp_ibn_camera_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_ics_bogota_t_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_ics_bogota_t_id_ics => strtoupper($value['lbl_azp_ibn_camera_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INVEST_ NEGATIVA'),
						d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_cam_concept => strtoupper($value['lbl_azp_ibn_camera_t_concept']),
						d_azp_ibn_report_structure_ics_bogota_t_fur_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_pro_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_veh_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_module => strtoupper('Camaras'),
						d_azp_ibn_report_structure_ics_bogota_t_viable => strtoupper($value['lbl_azp_ibn_camera_t_viable']),
					);
					$this->db->insert(t_azp_ibn_report_structure_ics_bogota, $var_array);
				endforeach;
			}*/
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_furniture) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_furniture as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_ics_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_ics_bogota_m_description => '',
						d_azp_ibn_report_structure_ics_bogota_m_level => '2',
						d_azp_ibn_report_structure_ics_bogota_m_status => '1',
						d_azp_ibn_report_structure_ics_bogota_m_temp => '1',
						d_azp_ibn_report_structure_ics_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_furniture_t_acount']),
						d_azp_ibn_report_structure_ics_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_ics_bogota_t_identification => strtoupper($value['lbl_azp_ibn_furniture_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_ics_bogota_t_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_ics_bogota_t_id_ics => strtoupper($value['lbl_azp_ibn_furniture_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INVEST_ NEGATIVA'),
						d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_cam_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_fur_concept => strtoupper($value['lbl_azp_ibn_furniture_t_concept']),
						d_azp_ibn_report_structure_ics_bogota_t_pro_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_veh_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_module => strtoupper('Salarios'),
						d_azp_ibn_report_structure_ics_bogota_t_viable => strtoupper($value['lbl_azp_ibn_furniture_t_well_option']),
					);
					$this->db->insert(t_azp_ibn_report_structure_ics_bogota, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_property) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_property as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_ics_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_ics_bogota_m_description => '',
						d_azp_ibn_report_structure_ics_bogota_m_level => '2',
						d_azp_ibn_report_structure_ics_bogota_m_status => '1',
						d_azp_ibn_report_structure_ics_bogota_m_temp => '1',
						d_azp_ibn_report_structure_ics_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_property_t_acount']),
						d_azp_ibn_report_structure_ics_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_ics_bogota_t_identification => strtoupper($value['lbl_azp_ibn_property_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_ics_bogota_t_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_ics_bogota_t_id_ics => strtoupper($value['lbl_azp_ibn_property_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INVEST_ NEGATIVA'),
						d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_cam_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_fur_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_pro_concept => strtoupper($value['lbl_azp_ibn_property_t_concept']),
						d_azp_ibn_report_structure_ics_bogota_t_veh_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_module => strtoupper('Inmuebles'),
						d_azp_ibn_report_structure_ics_bogota_t_viable => strtoupper($value['lbl_azp_ibn_property_t_viable']),
					);
					$this->db->insert(t_azp_ibn_report_structure_ics_bogota, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql_vehicle) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql_vehicle as $key => $value):
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(
						d_azp_ibn_report_structure_ics_bogota_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_report_structure_ics_bogota_m_date_created => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_date_modified => DATE_HOUR,
						d_azp_ibn_report_structure_ics_bogota_m_deleted => '1',
						d_azp_ibn_report_structure_ics_bogota_m_description => '',
						d_azp_ibn_report_structure_ics_bogota_m_level => '2',
						d_azp_ibn_report_structure_ics_bogota_m_status => '1',
						d_azp_ibn_report_structure_ics_bogota_m_temp => '1',
						d_azp_ibn_report_structure_ics_bogota_t_bas_account => strtoupper($value['lbl_azp_ibn_vehicle_t_acount']),
						d_azp_ibn_report_structure_ics_bogota_t_bas_validate => strtoupper('1'),
						d_azp_ibn_report_structure_ics_bogota_t_identification => strtoupper($value['lbl_azp_ibn_vehicle_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_supplier => strtoupper('GSC'),
						d_azp_ibn_report_structure_ics_bogota_t_date_arrival => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_date_reply => strtoupper(DATE),
						d_azp_ibn_report_structure_ics_bogota_t_id_ics => strtoupper($value['lbl_azp_ibn_vehicle_t_identification']),
						d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INVEST_ NEGATIVA'),
						d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_cam_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_fur_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_pro_concept => strtoupper(''),
						d_azp_ibn_report_structure_ics_bogota_t_veh_concept => strtoupper($value['lbl_azp_ibn_vehicle_t_concept']),
						d_azp_ibn_report_structure_ics_bogota_t_module => strtoupper('Vehiculos'),
						d_azp_ibn_report_structure_ics_bogota_t_viable => strtoupper($value['lbl_azp_ibn_vehicle_t_viable']),
					);
					$this->db->insert(t_azp_ibn_report_structure_ics_bogota, $var_array);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			/*$var_sql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_module . " = 'Camaras'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INV CAMARA POSI'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array,
						d_azp_ibn_report_structure_ics_bogota_t_viable . " = 'SI' AND " .
						d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota . " = '" . $var_id . "'"
					);
				endforeach;
			}*/
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_module . " = 'Salarios'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INV SALARIO POSI'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array,
						d_azp_ibn_report_structure_ics_bogota_t_viable . " = 'SI' AND " .
						d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota . " = '" . $var_id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_module . " = 'Inmuebles'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INV INMUEBLE POSI'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array,
						d_azp_ibn_report_structure_ics_bogota_t_viable . " = 'SI' AND " .
						d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota . " = '" . $var_id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_module . " = 'Vehiculos'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_etapa => strtoupper('INV VEHICULO POSI'),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array,
						d_azp_ibn_report_structure_ics_bogota_t_viable . " = 'SI' AND " .
						d_azp_ibn_report_structure_ics_bogota_id_azp_ibn_report_structure_ics_bogota . " = '" . $var_id . "'"
					);
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_data_main, d_azp_ibn_data_main_v_id_azp_ibn_control_panel . " = '" . $this->id . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_iden = $value[d_azp_ibn_data_main_t_identification];
					$var_code = $value[d_azp_ibn_data_main_t_code];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_id_ics => $var_code,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array, d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $var_iden . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_m_deleted . " = '1' GROUP BY " . d_azp_ibn_report_structure_ics_bogota_t_identification);
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identification = $value[d_azp_ibn_report_structure_ics_bogota_t_identification];

					# Consulta para identificar los nuevos registros en la tabla
					$var_rql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $var_identification . "'");
					# Validar si la sentencia query ejecutada es correcta y no falsa
					if (true == $var_rql) {
						# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
						foreach ($var_rql as $keyq => $valueq):
							# Asignacion de valores a nuevas variables
							$varq_identification = $valueq[d_azp_ibn_report_structure_ics_bogota_t_identification];
							$varq_etapa = $valueq[d_azp_ibn_report_structure_ics_bogota_t_etapa];
							$varq_module = $valueq[d_azp_ibn_report_structure_ics_bogota_t_module];
							$varq_viable = $valueq[d_azp_ibn_report_structure_ics_bogota_t_viable];
							# Validar si la sentencia query ejecutada es correcta y no falsa
							//if ($varq_etapa == 'INV CAMARA POSI' || $varq_etapa == 'INV SALARIO POSI' || $varq_etapa == 'INV INMUEBLE POSI' || $varq_etapa == 'INV VEHICULO POSI') {
							if ($varq_etapa == 'INV SALARIO POSI' || $varq_etapa == 'INV INMUEBLE POSI' || $varq_etapa == 'INV VEHICULO POSI') {
								# Consulta para identificar los nuevos registros en la tabla
								$var_vql = $this->db->select("*", t_azp_ibn_report_structure_ics_bogota, d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $var_identification . "'");
								# Validar si la sentencia query ejecutada es correcta y no falsa
								if (true == $var_vql) {
									# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
									foreach ($var_vql as $keyq => $valuev):
										$varv_identification = $valuev[d_azp_ibn_report_structure_ics_bogota_t_identification];
										# Query Sql Update: Actualizar valores de la tabla segun sus campos
										$this->db->delete(t_azp_ibn_report_structure_ics_bogota,
											d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $varv_identification . "' AND " .
											d_azp_ibn_report_structure_ics_bogota_t_etapa . " = 'INVEST_ NEGATIVA'"
										);
									endforeach;
								}
							}
						endforeach;
					}
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->select("*", t_azp_ibn_report_structure_banco_bogota, d_azp_ibn_report_structure_banco_bogota_t_dat_concept . " != ''");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) {
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				foreach ($var_sql as $key => $value):
					# Asignacion de valores a nuevas variables
					$var_identif = $value[d_azp_ibn_report_structure_banco_bogota_t_dat_identification];
					$var_concept = $value[d_azp_ibn_report_structure_banco_bogota_t_dat_concept];
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_observation => $var_concept,);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array, d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $var_identif . "'");
				endforeach;
			}
			#-------------------------------------------------------------------------#
			# Seleccionar los registros de la tabla
			/*$var_sql_concept = $this->db->query("
				SELECT *,
					GROUP_CONCAT(" . d_azp_ibn_report_structure_ics_bogota_t_fur_concept . ") AS 'lbl_fur_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_structure_ics_bogota_t_pro_concept . ") AS 'lbl_pro_concept',
					GROUP_CONCAT(" . d_azp_ibn_report_structure_ics_bogota_t_veh_concept . ") AS 'lbl_veh_concept'
				FROM " . t_azp_ibn_report_structure_ics_bogota . "
				GROUP BY " . d_azp_ibn_report_structure_ics_bogota_t_identification
			);
			# Validar si la consulta es verdadera
			if (true == $var_sql_concept) {
				# Recorrer las filas de la consulta generada
				foreach ($var_sql_concept as $key => $value):
					# Asignar valores a nuevas variables
					$var_id = $value[d_azp_ibn_report_structure_ics_bogota_t_identification];
					//$var_cam_concept = $value['lbl_cam_concept'];
					$var_fur_concept = $value['lbl_fur_concept'];
					$var_pro_concept = $value['lbl_pro_concept'];
					$var_veh_concept = $value['lbl_veh_concept'];
					//$var_war_concept = $value[d_azp_ibn_report_structure_ics_bogota_t_war_concept];
					$var_dat_concept = $var_pro_concept . ' ' . $var_veh_concept . ' ' . $var_fur_concept;
					# Organizacion de los valores capturados y asignados a los campos a insertar
					$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_observation => strtoupper($var_dat_concept),);
					# Insertar valores en la tabla segun estructura de la tabla
					$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array, d_azp_ibn_report_structure_ics_bogota_t_identification . " = '" . $var_id . "'");
				endforeach;
			}*/
			#-------------------------------------------------------------------------#
			# Organizacion de los valores capturados y asignados a los campos a insertar
			$var_array = array(d_azp_ibn_report_structure_ics_bogota_t_observation => '',);
			# Insertar valores en la tabla segun estructura de la tabla
			$this->db->update(t_azp_ibn_report_structure_ics_bogota, $var_array, d_azp_ibn_report_structure_ics_bogota_t_etapa . " = 'INVEST_ NEGATIVA'");
			#-------------------------------------------------------------------------#
			# Consulta para identificar los nuevos registros en la tabla
			return $this->db->select("*", t_azp_ibn_report_structure_ics_bogota,
				d_azp_ibn_report_structure_ics_bogota_t_bas_validate . " = '1'" . " " .
				"GROUP BY " . d_azp_ibn_report_structure_ics_bogota_t_identification . " ASC, " .
					d_azp_ibn_report_structure_ics_bogota_t_etapa . " ASC"
			);
		}

		# Control Errores Update
		final private function error_sql_azp_ibn_information_ld_upload(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_ld_control'])) { throw new Exception('<b>Error:</b> El campo de control esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_control = $this->db->scape($data['field_ld_control']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_ld_file']['name'];
				$empty_type = $_FILES['field_ld_file']['type'];
				$empty_tmp_name = $_FILES['field_ld_file']['tmp_name'];
				$empty_error = $_FILES['field_ld_file']['error'];
				$empty_size = $_FILES['field_ld_file']['size'];
				#-------------------------------------------------------------------------#
				$empty_tamanio = 10000; $empty_bytes = 1024;
				$empty_extension = array('xls','xlsx','csv','pdf','zip',);
				$empty_path_info = strtolower(pathinfo($empty_name, PATHINFO_EXTENSION));
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_control) || $empty_control == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es obligatorio.');
				}
				#---------------------------------------------#
				if (!is_numeric($empty_control)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#---------------------------------------------#
				if (Func::emp($empty_name)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo es obligatorio.');
				}
				#---------------------------------------------#
				if (!in_array($empty_path_info, $empty_extension)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo solo acepta formatos ' . implode(',', $empty_extension) . '.');
				}
				#---------------------------------------------#
				if ($empty_size > ($empty_tamanio * $empty_bytes)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El archivo seleccionado excede el tamaño de 10 MB.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_azp_ibn_information_ld_upload(array $data) : array {
			$var_error = $this->error_sql_azp_ibn_information_ld_upload($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Consultar helper y sus opciones
				Helper::load('files');
				#-------------------------------------------------------------------------#
				$empty_control = $this->db->scape($data['field_ld_control']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_ld_file']['name'];
				$empty_error = $_FILES['field_ld_file']['error'];
				$empty_size = $_FILES['field_ld_file']['size'];
				$empty_tmp_name = $_FILES['field_ld_file']['tmp_name'];
				$empty_type = $_FILES['field_ld_file']['type'];
				#-------------------------------------------------------------------------#
				$empty_tamanio = 10000; $empty_bytes = 1024;
				$empty_extension = array('xls','xlsx','csv','pdf','zip',);
				$empty_path_info = strtolower(pathinfo($empty_name, PATHINFO_EXTENSION));
				#-------------------------------------------------------------------------#
				$empty_route = '../systemfiles/filesproject/';
				$empty_folder = 'azp_ibn_information/' . $empty_control . '/';
				$empty_document = DATE_NUMBER . '_' . HOUR_NUMBER . '.' . $empty_path_info;
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) { foreach ($var_sql as $key => $value) { $var_code_rq = $value[d_azp_ibn_control_panel_t_code_research]; } }
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select("*", t_azp_ibn_control_panel, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) { foreach ($var_sql as $key => $value) { $var_ibn_client = $value[d_azp_ibn_control_panel_v_id_azp_ibn_client]; } }
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select("*", t_azp_ibn_client, d_azp_ibn_client_id_azp_ibn_client . " = '" . $var_ibn_client . "'");
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) { foreach ($var_sql as $key => $value) { $var_fct_client = $value[d_azp_ibn_client_v_id_azp_fct_client]; } }
				#-------------------------------------------------------------------------#
				# Consultar helper y sus opciones
				Helper::load('emails');
				#-------------------------------------------------------------------------#
				# Asignacion de valores a variables
				$var_from_email = ''; $var_from_name = '';
				# Array para guardar valores
				$var_adds = array();
				# Array para guardar valores
				$var_copy = array();
				# Array para guardar valores
				$var_files = array();
				# Valores del array vacios
				$var_email_address = array();
				# Valores del array vacios
				$empty_idata = ''; $empty_ems = '0'; $var_incount = 0;
				#-------------------------------------------------------------------------#
				$var_sql = $this->db->query("
					SELECT
						tc_azp_configuration_email." . d_azp_configuration_email_id_azp_configuration_email . " AS 'lbl_azp_configuration_email_id_azp_configuration_email',
						tc_azp_configuration_email." . d_azp_configuration_email_t_connect ." AS 'lbl_azp_configuration_email_t_connect',
						tc_azp_configuration_email." . d_azp_configuration_email_t_email ." AS 'lbl_azp_configuration_email_t_email',
						tc_azp_configuration_email." . d_azp_configuration_email_t_host ." AS 'lbl_azp_configuration_email_t_host',
						tc_azp_configuration_email." . d_azp_configuration_email_t_pass ." AS 'lbl_azp_configuration_email_t_pass',
						tc_azp_configuration_email." . d_azp_configuration_email_t_port ." AS 'lbl_azp_configuration_email_t_port',
						tc_azp_configuration_email." . d_azp_configuration_email_t_secure ." AS 'lbl_azp_configuration_email_t_secure',

						tc_azp_data_personal." . d_azp_data_personal_t_address . " AS 'lbl_azp_data_personal_t_address',
						tc_azp_data_personal." . d_azp_data_personal_t_birth_date . " AS 'lbl_azp_data_personal_t_birth_date',
						tc_azp_data_personal." . d_azp_data_personal_t_identification . " AS 'lbl_azp_data_personal_t_identification',
						tc_azp_data_personal." . d_azp_data_personal_t_firm . " AS 'lbl_azp_data_personal_t_firm',
						tc_azp_data_personal." . d_azp_data_personal_t_names . " AS 'lbl_azp_data_personal_t_names',
						tc_azp_data_personal." . d_azp_data_personal_t_phone_fixed . " AS 'lbl_azp_data_personal_t_phone_fixed',
						tc_azp_data_personal." . d_azp_data_personal_t_phone_movil . " AS 'lbl_azp_data_personal_t_phone_movil',
						tc_azp_data_personal." . d_azp_data_personal_t_surnames . " AS 'lbl_azp_data_personal_t_surnames'
					FROM " . t_azp_user . " tc_azp_user
					
					INNER JOIN " . t_azp_role . " tc_azp_role
						ON tc_azp_user." . d_azp_user_v_id_azp_role . "
							= tc_azp_role." . d_azp_role_id_azp_role . "
					
					INNER JOIN " . t_azp_data_personal . " tc_azp_data_personal
						ON tc_azp_user." . d_azp_user_id_azp_user . "
							= tc_azp_data_personal." . d_azp_data_personal_v_id_azp_user . "
					
					INNER JOIN " . t_azp_configuration_email . " tc_azp_configuration_email
						ON tc_azp_user." . d_azp_user_id_azp_user . "
							= tc_azp_configuration_email." . d_azp_configuration_email_v_id_azp_user . "
					
					WHERE tc_azp_user." . d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'
						AND tc_azp_configuration_email." . d_azp_configuration_email_t_connect . " = 'Exitoso'
				");
				#-------------------------------------------------------------------------#
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key => $value):
						# Asignacion de valores a nuevas variables
						$empty_ihost = $value['lbl_azp_configuration_email_t_host'];
						$empty_iuser = $value['lbl_azp_configuration_email_t_email'];
						$empty_ipass = $value['lbl_azp_configuration_email_t_pass'];
						$empty_iport = $value['lbl_azp_configuration_email_t_port'];
						$empty_ismtp = $value['lbl_azp_configuration_email_t_secure'];
						$empty_iemail = $value['lbl_azp_configuration_email_t_email'];
						$empty_inames = $value['lbl_azp_data_personal_t_names'];
						$empty_isurns = $value['lbl_azp_data_personal_t_surnames'];
						$empty_idata = $empty_inames . ' ' . $empty_isurns;
						# Asignacion de valores a nuevas variables
						$var_user_firm = $value['lbl_azp_data_personal_t_firm'];
					endforeach;
				}
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select("*", t_azp_ibn_email_request,
					d_azp_ibn_email_request_m_deleted . " = '1' AND " .
					d_azp_ibn_email_request_m_status . " = '1' AND " .
					d_azp_ibn_email_request_v_id_azp_fct_client . " = '" . $var_fct_client . "'"
				);
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) {
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					foreach ($var_sql as $key => $value) {
						# Asignacion de valores a nuevas variables
						$empty_aemail = $value[d_azp_ibn_email_request_t_email];
						$empty_anames = $value[d_azp_ibn_email_request_t_names];
						$empty_asurns = $value[d_azp_ibn_email_request_t_names];
						$var_adds[$empty_aemail] = $empty_anames . ' ' . $empty_asurns;
						$empty_ems = 1;
					}
				}
				if ($empty_ems == '0') {
					$var_ms_success = '<b>Error:</b> No se encontraron emails a enviar, debe registrar al menos uno.';
					$var_return = 'error'; $var_ms_name = 'message'; $var_ms_text = $var_ms_success;
				} else {
					#-------------------------------------------------------------------------#
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(
						d_azp_ibn_information_m_by_created => $_SESSION[SESS_APP_ID],
						d_azp_ibn_information_m_by_modified => $_SESSION[SESS_APP_ID],
						d_azp_ibn_information_m_date_created => DATE_HOUR,
						d_azp_ibn_information_m_date_modified => DATE_HOUR,
						d_azp_ibn_information_m_deleted => '1',
						d_azp_ibn_information_m_description => '',
						d_azp_ibn_information_m_level => '2',
						d_azp_ibn_information_m_status => '1',
						d_azp_ibn_information_m_temp => '1',
						d_azp_ibn_information_w_document => $empty_document,
						d_azp_ibn_information_w_error => $empty_error,
						d_azp_ibn_information_w_folder => $empty_folder,
						d_azp_ibn_information_w_name => $empty_name,
						d_azp_ibn_information_w_route => $empty_route,
						d_azp_ibn_information_w_size => $empty_size,
						d_azp_ibn_information_w_tmp_name => $empty_tmp_name,
						d_azp_ibn_information_w_type => $empty_type,
						d_azp_ibn_information_v_id_azp_ibn_control_panel => $empty_control,
					);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->insert(t_azp_ibn_information, $var_array);
					#-------------------------------------------------------------------------#
					# Linea de codigo con una variable y array para seleccionar los datos de la tabla
					$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_information,
						d_azp_ibn_information_v_id_azp_ibn_control_panel . " = '" . $empty_control . "' AND " .
						d_azp_ibn_information_m_deleted . " = '1'"
					);
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					if (false != $var_sql) { foreach ($var_sql as $key => $value) { $var_incount = $value['lbl_count']; } }
					# Control de validacion de datos
					if ($var_incount > 0) {
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_ibn_control_panel_t_inform_client => 'Si',);
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
					} else {
						# Array para asignar argumentos o valores a los elementos
						$var_array = array(d_azp_ibn_control_panel_t_inform_client => 'No',);
						# Query Sql Update: Actualizar valores de la tabla segun sus campos
						$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
					}
					#-------------------------------------------------------------------------#
					# Contro de existencia de carpeta
					if (!is_dir($empty_route . $empty_folder)) { Files::create_dir($empty_route . $empty_folder, 0777); chmod($empty_route . $empty_folder, 0777); }
					#-------------------------------------------------------------------------#
					# Subida de archivos en el desarrollo
					Files::upload_file(trim(preg_replace('/\s+/',' ', $empty_document)), $empty_tmp_name, $empty_route . $empty_folder, true);
					#-------------------------------------------------------------------------#
					# Dar permisos a la ruta y archivo
					chmod($empty_route . $empty_folder . $empty_document, 0777);
					#-------------------------------------------------------------------------#
					$empty_affair = 'Gsc: Respuesta a su solicitud ' . $var_code_rq . ' de QUE+';
					$empty_summernote = 'Sr. (a) cliente le informamos que se ha cargado una respuesta de la solicitud ' . $var_code_rq . ' por parte del supervisor del modulo de investigacion';
					#-------------------------------------------------------------------------#
					$var_label_search = array(
						'<br>', '</br>', '<p>', '</p>', '<i>', '</i>', '<b>', '</b>',
						'<u>', '</u>', '<s>', '</s>', '<img ', '</img ', '<center>', '</center>',
						'<h1>', '</h1>', '<h2>', '</h2>', '<h3>', '</h3>',
						'<h4>', '</h4>', '<h5>', '</h5>', '<h6>', '</h6>',
						'<span style=\"letter-spacing: 0.1px;\">', '</span>', '<span>',
					);
					$var_label_replace = array(
						'', '', '', '', '', '', '', '', '', '',
						'', '', '', '', '', '', '', '', '', '',
						'', '', '', '', '', '', '', '', '', '',
						'', '', '',
					);
					$var_affair = str_replace($var_label_search, $var_label_replace, $empty_affair);
					#-------------------------------------------------------------------------#
					# Linea de codigo con una variable y array para seleccionar los datos de la tabla
					$var_sql = $this->db->select("*", t_azp_ibn_information, d_azp_ibn_information_m_deleted . " = '1' AND " .
						d_azp_ibn_information_v_id_azp_ibn_control_panel . " = '" . $empty_control .
						"' ORDER BY " . d_azp_ibn_information_id_azp_ibn_information . " DESC LIMIT 1"
					);
					# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
					if (false != $var_sql) {
						foreach ($var_sql as $key => $value) {
							$var_docum = $value[d_azp_ibn_information_w_document];
							$var_folder = $value[d_azp_ibn_information_w_folder];
							$var_route = $value[d_azp_ibn_information_w_route];
							$var_compl = $var_route . $var_folder . $var_docum;
							$var_files[$var_compl] = $var_docum;
						}
					}
					#-------------------------------------------------------------------------#
					# Codigo html para la estructura del correo electronico
					$var_html = '
						<div class="row">
							<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mb-3">
								<div class="row">
									<div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 mb-3">
										<img src="' . URL . 'views/backend/images/email.png">
									</div>
									<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mb-3">
										<p class="text-dark">
											<div class="m-0 d-flex">
												<div class="flex-1 text-contrast">
													' . html_entity_decode($empty_summernote) . '
												</div>
											</div>
										</p>
										<p class="text-dark">
											<div class="m-0 d-flex">
												<div class="flex-1 text-contrast">
													<img src="' . URL . $var_user_firm . '">
												</div>
											</div>
										</p>
									</div>
								</div>
							</div>
						</div>
					';
					#-------------------------------------------------------------------------#
					# Codigo de parametros de email
					$var_init = array($empty_ihost, $empty_iuser, $empty_ipass, $empty_iport, $empty_ismtp,);
					$var_html = Emails::main_template($var_html);
					$var_from = array($empty_iemail => $empty_idata,);
					//$var_adds = array($empty_aemail => $empty_adata,);
					//$var_copy = array($empty_email => $var_data,);
					$var_topic = html_entity_decode($var_affair);
					$var_email = Emails::main_send($var_init, $var_from, $var_adds, $var_copy, $var_html, $var_topic, $var_files,);
					#-------------------------------------------------------------------------#
					# Validacion del correo electronico a enviar
					$var_ms_success = '<b>Exito:</b> Archivo almacenado y correo electronico enviado.';
					$var_ms_error = '<b>Error:</b> Archivo almacenado pero correo electronico no enviado.';
					#-------------------------------------------------------------------------#
					# Validacion del correo electronico a enviar
					if (true === $var_email) { $var_return = 'success'; $var_ms_name = 'message'; $var_ms_text = $var_ms_success; } else { $var_return = 'error'; $var_ms_name = 'message'; $var_ms_text = $var_ms_error; }
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array($var_return => 1, $var_ms_name => $var_ms_text,);
			}
		}

		# Control Errores Update
		final private function error_sql_azp_ibn_information_lp_upload(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_lp_control'])) { throw new Exception('<b>Error:</b> El campo de control esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_control = $this->db->scape($data['field_lp_control']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_lp_file']['name'];
				$empty_type = $_FILES['field_lp_file']['type'];
				$empty_tmp_name = $_FILES['field_lp_file']['tmp_name'];
				$empty_error = $_FILES['field_lp_file']['error'];
				$empty_size = $_FILES['field_lp_file']['size'];
				#-------------------------------------------------------------------------#
				$empty_tamanio = 1000000; $empty_bytes = 1024;
				$empty_extension = array('zip', 'rar', '7z');
				$empty_path_info = strtolower(pathinfo($empty_name, PATHINFO_EXTENSION));
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_control) || $empty_control == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es obligatorio.');
				}
				#---------------------------------------------#
				if (!is_numeric($empty_control)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#---------------------------------------------#
				if (Func::emp($empty_name)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo es obligatorio.');
				}
				#---------------------------------------------#
				if (!in_array($empty_path_info, $empty_extension)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de archivo solo acepta formatos ' . implode(',', $empty_extension) . '.');
				}
				#---------------------------------------------#
				if ($empty_size > ($empty_tamanio * $empty_bytes)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El archivo seleccionado excede el tamaño de 1 GB.');
				}
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_azp_ibn_information_lp_upload(array $data) : array {
			$var_error = $this->error_sql_azp_ibn_information_lp_upload($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Consultar helper y sus opciones
				Helper::load('files');
				#-------------------------------------------------------------------------#
				$empty_control = $this->db->scape($data['field_lp_control']);
				#-------------------------------------------------------------------------#
				$empty_name = $_FILES['field_lp_file']['name'];
				$empty_error = $_FILES['field_lp_file']['error'];
				$empty_size = $_FILES['field_lp_file']['size'];
				$empty_tmp_name = $_FILES['field_lp_file']['tmp_name'];
				$empty_type = $_FILES['field_lp_file']['type'];
				#-------------------------------------------------------------------------#
				$empty_route = '../systemfiles/filesproject/';
				$empty_folder = 'azp_ibn_imagespress/' . $empty_control . '/';
				$empty_document = $empty_name;
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(
					d_azp_ibn_imagespress_m_by_created => $_SESSION[SESS_APP_ID],
					d_azp_ibn_imagespress_m_by_modified => $_SESSION[SESS_APP_ID],
					d_azp_ibn_imagespress_m_date_created => DATE_HOUR,
					d_azp_ibn_imagespress_m_date_modified => DATE_HOUR,
					d_azp_ibn_imagespress_m_deleted => '1',
					d_azp_ibn_imagespress_m_description => '',
					d_azp_ibn_imagespress_m_level => '2',
					d_azp_ibn_imagespress_m_status => '1',
					d_azp_ibn_imagespress_m_temp => '1',
					d_azp_ibn_imagespress_w_document => $empty_document,
					d_azp_ibn_imagespress_w_error => $empty_error,
					d_azp_ibn_imagespress_w_folder => $empty_folder,
					d_azp_ibn_imagespress_w_name => $empty_name,
					d_azp_ibn_imagespress_w_route => $empty_route,
					d_azp_ibn_imagespress_w_size => $empty_size,
					d_azp_ibn_imagespress_w_tmp_name => $empty_tmp_name,
					d_azp_ibn_imagespress_w_type => $empty_type,
					d_azp_ibn_imagespress_v_id_azp_ibn_control_panel => $empty_control,
				);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->insert(t_azp_ibn_imagespress, $var_array);
				#-------------------------------------------------------------------------#
				# Contro de existencia de carpeta
				if (!is_dir($empty_route . $empty_folder)) { Files::create_dir($empty_route . $empty_folder, 0777); }
				#-------------------------------------------------------------------------#
				# Subida de archivos en el desarrollo
				Files::upload_file(trim(preg_replace('/\s+/',' ', $empty_document)), $empty_tmp_name, $empty_route . $empty_folder, true);
				#-------------------------------------------------------------------------#
				# Dar permisos a la ruta y archivo
				chmod($empty_route . $empty_folder . $empty_document, 0777);
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Archivo almacenado correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_azp_ibn_information_ld_remove(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_ld_remove'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_ld_remove']); $var_incount = 0;
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es obligatorio.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_information, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (true != $sql_id) { throw new Exception('<b>Error:</b> El registro que está removiendo no se encuentra registrado.'); }
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_information, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "' AND " . d_azp_ibn_information_m_deleted . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (true == $sql_id) { foreach ($sql_id as $key => $value): throw new Exception('<b>Error:</b> El registro que está procesando ya se encuentra removido.'); endforeach; }
				#-------------------------------------------------------------------------#
				# Verificar si el registro fue creado por el usuario root
				$sql_session = $this->db->select('*', t_azp_ibn_information, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "' AND " .
					d_azp_ibn_information_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_ibn_information_m_level . " = '1'");
				# Verificar si el registro creado es igual el valor del campo nivel al valor dos
				$sql_level = $this->db->select('*', t_azp_ibn_information, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "' AND " . d_azp_ibn_information_m_level . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_session && false == $sql_level) { throw new Exception('<b>Error:</b> No tienes suficientes permisos superiores para actualizar el registro.'); }
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_azp_ibn_information_ld_remove(array $data) : array {
			$var_error = $this->error_sql_azp_ibn_information_ld_remove($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_ld_remove']);
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_information_m_deleted => '2',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_information, $var_array, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$var_sql = $this->db->select('*', t_azp_ibn_information, d_azp_ibn_information_id_azp_ibn_information . " = '" . $empty_id . "'");
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) { foreach ($var_sql as $key => $value) { $empty_control = $value[d_azp_ibn_information_v_id_azp_ibn_control_panel]; } }
				#-------------------------------------------------------------------------#
				# Linea de codigo con una variable y array para seleccionar los datos de la tabla
				$var_sql = $this->db->select("COUNT(*) AS 'lbl_count'", t_azp_ibn_information,
					d_azp_ibn_information_v_id_azp_ibn_control_panel . " = '" . $empty_control . "' AND " .
					d_azp_ibn_information_m_deleted . " = '1'"
				);
				# El constructor foreach proporciona un modo sencillo de iterar sobre arrays.
				if (false != $var_sql) { foreach ($var_sql as $key => $value) { $var_incount = $value['lbl_count']; } }
				# Control de validacion de datos
				if ($var_incount > 0) {
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_control_panel_t_inform_client => 'Si',);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
				} else {
					# Array para asignar argumentos o valores a los elementos
					$var_array = array(d_azp_ibn_control_panel_t_inform_client => 'No',);
					# Query Sql Update: Actualizar valores de la tabla segun sus campos
					$this->db->update(t_azp_ibn_control_panel, $var_array, d_azp_ibn_control_panel_id_azp_ibn_control_panel . " = '" . $empty_control . "'");
				}
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Registro removido correctamente.');
			}
		}

		# Control Errores Update
		final private function error_sql_azp_ibn_imagespress_lp_remove(array $data) {
			try {
				#-------------------------------------------------------------------------#
				if (!isset($data['field_id_lp_remove'])) { throw new Exception('<b>Error:</b> El campo de id esta prohibido modificar.'); }
				#-------------------------------------------------------------------------#
				$empty_id = $this->db->scape($data['field_id_lp_remove']);
				#-------------------------------------------------------------------------#
				if (isset($_SESSION['pe_time']) and end($_SESSION['pe_time']) >= time()) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('No puedes realizar tantas acciones seguidas.');
				}
				#-------------------------------------------------------------------------#
				if (Func::emp($empty_id) || $empty_id == 0) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id es obligatorio.');
				}
				#-------------------------------------------------------------------------#
				if (!is_numeric($empty_id)) {
					# Informar un mensaje al usuario por medio de una excepcion
					throw new Exception('<b>Error:</b> El campo de id solo permite numeros.');
				}
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_imagespress, d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $empty_id . "'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (true != $sql_id) { throw new Exception('<b>Error:</b> El registro que está removiendo no se encuentra registrado.'); }
				#-------------------------------------------------------------------------#
				# Verificar si el registro existe en la tabla
				$sql_id = $this->db->select('*', t_azp_ibn_imagespress, d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $empty_id . "' AND " . d_azp_ibn_imagespress_m_deleted . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (true == $sql_id) { foreach ($sql_id as $key => $value): throw new Exception('<b>Error:</b> El registro que está procesando ya se encuentra removido.'); endforeach; }
				#-------------------------------------------------------------------------#
				# Verificar si el registro fue creado por el usuario root
				$sql_session = $this->db->select('*', t_azp_ibn_imagespress, d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $empty_id . "' AND " .
					d_azp_ibn_imagespress_m_by_created . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_ibn_imagespress_m_level . " = '1'");
				# Verificar si el registro creado es igual el valor del campo nivel al valor dos
				$sql_level = $this->db->select('*', t_azp_ibn_imagespress, d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $empty_id . "' AND " . d_azp_ibn_imagespress_m_level . " = '2'");
				# Verificar si el resultado de la sql es verdadero o falso
				if (false == $sql_session && false == $sql_level) { throw new Exception('<b>Error:</b> No tienes suficientes permisos superiores para actualizar el registro.'); }
				#-------------------------------------------------------------------------#
				return false;
			} catch (Exception $e) {
				return array('success' => 0, 'message' => $e->getMessage());
			}
		}

		# Query Sql Update
		final public function sql_azp_ibn_imagespress_lp_remove(array $data) : array {
			$var_error = $this->error_sql_azp_ibn_imagespress_lp_remove($data);
			if (!is_bool($var_error)) { return $var_error; }
			if (!isset($_SESSION[SESS_APP_ID])) {
				# Redireccionar a una pagina segun el metodo cargado
				return array('error' => 1, 'message' => '<b>Error:</b> La sesión ha caducado, vuelve a iniciar sesión dando clic <a href="' . URL . 'login/?field_id=session">aqui</a>.');
			} else {
				#-------------------------------------------------------------------------#
				# Control para caracteres especiales recibidos
				$empty_id = $this->db->scape($data['field_id_lp_remove']);
				#-------------------------------------------------------------------------#
				# Array para asignar argumentos o valores a los elementos
				$var_array = array(d_azp_ibn_imagespress_m_deleted => '2',);
				# Query Sql Update: Actualizar valores de la tabla segun sus campos
				$this->db->update(t_azp_ibn_imagespress, $var_array, d_azp_ibn_imagespress_id_azp_ibn_imagespress . " = '" . $empty_id . "'");
				#-------------------------------------------------------------------------#
				# Retornar el mensaje una vez ejecutada la rutina del proceso
				return array('success' => 1, 'message' => '<b>Exito:</b> Registro removido correctamente.');
			}
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_ibn_image() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_id = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_id = ''; }
			# Seleccionar los registros de la tabla
			return $this->db->select('*', t_azp_fct_client,
				d_azp_fct_client_id_azp_fct_client . " = '" . $var_id . "' AND " .
				d_azp_fct_client_m_deleted . " = '1' AND " .
				d_azp_fct_client_m_status . " = '1'"
			);
		}
		
		# Query Sql Select
		final public function sql_select_tc_azp_client_image() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key_sql): $var_id = $key_sql[d_azp_user_v_id_azp_fct_client]; endforeach; } else { $var_id = ''; }
			# Seleccionar los registros de la tabla
			return $this->db->select('*', t_azp_fct_client,
				d_azp_fct_client_id_azp_fct_client . " = '" . $var_id . "' AND " .
				d_azp_fct_client_m_deleted . " = '1' AND " .
				d_azp_fct_client_m_status . " = '1'"
			);
		}

		# Query Sql Select
		final public function validate_date($date, $format = 'Y-m-d') {
			$d = DateTime::createFromFormat($format, $date);
			return $d && $d->format($format) == $date;
		}

		# Query Sql Select
		final public function sql_controller_crt_base() {
			$var_list = array(); $var_client = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '11'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " AS 'lbl_azp_crt_request_data_t_request_nro'
					
				FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data

				INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
					ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
						= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "

				INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
					ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
						= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . " >= '4'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_list[] = "'" . $value['lbl_azp_crt_request_data_t_request_nro'] . "'"; endforeach; }

			# Convertir elementos de un array en string
			$var_implode = implode(",", $var_list);
			if ($var_implode == '') { $var_validate = "''"; } else { $var_validate = $var_implode; }

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " AS 'lbl_azp_crt_request_data_t_request_nro',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " AS 'lbl_azp_crt_request_data_t_request_date',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_inform_client . " AS 'lbl_azp_crt_request_data_t_inform_client',
					COUNT(tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . ") AS 'lbl_azp_crt_request_data_t_count'
					
				FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data

				INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
					ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
						= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "

				INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
					ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
						= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " IN (" . $var_validate . ")

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_crt_idntf() {
			$var_list = array(); $var_client = '';
			if (isset($_GET['field_idntf'])) { $var_idntf =  $_GET['field_idntf']; } else { $var_idntf = ''; }
			if (isset($_GET['field_plaqe'])) { $var_plaqe =  $_GET['field_plaqe']; } else { $var_plaqe = ''; }
			if (isset($_GET['field_rtype'])) { $var_rtype =  $_GET['field_rtype']; } else { $var_rtype = ''; }


			if ($var_idntf != '' && $var_plaqe == '' && $var_rtype == '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = '';
				$var_request_type = '';
			} else if ($var_idntf == '' && $var_plaqe != '' && $var_rtype == '') {
				$var_identification = '';
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";
				$var_request_type = '';
			} else if ($var_idntf == '' && $var_plaqe == '' && $var_rtype != '') {
				$var_identification = '';
				$var_plaque_enrollm = '';
				$var_request_type = "AND tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . " = '" . $var_rtype . "'";
			} else if ($var_idntf != '' && $var_plaqe != '' && $var_rtype == '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";
				$var_request_type = '';
			} else if ($var_idntf == '' && $var_plaqe != '' && $var_rtype != '') {
				$var_identification = '';
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";
				$var_request_type = "AND tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . " = '" . $var_rtype . "'";
			} else if ($var_idntf != '' && $var_plaqe == '' && $var_rtype != '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = '';
				$var_request_type = "AND tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . " = '" . $var_rtype . "'";
			} else if ($var_idntf != '' && $var_plaqe != '' && $var_rtype != '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";
				$var_request_type = "AND tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . " = '" . $var_rtype . "'";
			} else { $var_identification = ''; $var_plaque_enrollm = ''; $var_request_type = ''; }

			
			

			/*if ($var_idntf != '' && $var_plaqe == '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = '';

			} else if ($var_idntf == '' && $var_plaqe != '') {
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";
				$var_identification = '';

			} else if ($var_idntf != '' && $var_plaqe != '') {
				$var_identification = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_identification . " = '" . $var_idntf . "'";
				$var_plaque_enrollm = "AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_plaque_enrollment . " = '" . $var_plaqe . "'";

			} else { $var_identification = ''; $var_plaque_enrollm = ''; }*/

			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '11'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " AS 'lbl_azp_crt_request_data_t_request_nro'
					
				FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data

				INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
					ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
						= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "

				INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
					ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
						= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_phase . " >= '4'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_list[] = "'" . $value['lbl_azp_crt_request_data_t_request_nro'] . "'"; endforeach; }

			# Convertir elementos de un array en string
			$var_implode = implode(",", $var_list);

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_crt_request_data." . d_azp_crt_request_data_id_azp_crt_request_data . " AS 'lbl_azp_crt_request_data_id_azp_crt_request_data',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " AS 'lbl_azp_crt_request_data_t_request_nro',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_date . " AS 'lbl_azp_crt_request_data_t_request_date',
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_inform_client . " AS 'lbl_azp_crt_request_data_t_inform_client',
					COUNT(tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . ") AS 'lbl_azp_crt_request_data_t_count',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name'
					
				FROM " . t_azp_crt_request_data . " tc_azp_crt_request_data

				INNER JOIN " . t_azp_crt_client . " tc_azp_crt_client
					ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_client . "
						= tc_azp_crt_client." . d_azp_crt_client_id_azp_crt_client . "

				INNER JOIN " . t_azp_crt_bank . " tc_azp_crt_bank
					ON tc_azp_crt_client." . d_azp_crt_client_v_id_azp_crt_bank . "
						= tc_azp_crt_bank." . d_azp_crt_bank_id_azp_crt_bank . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_crt_bank." . d_azp_crt_bank_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				INNER JOIN " . t_azp_crt_request_type . " tc_azp_crt_request_type
					ON tc_azp_crt_request_data." . d_azp_crt_request_data_v_id_azp_crt_request_type . "
						= tc_azp_crt_request_type." . d_azp_crt_request_type_id_azp_crt_request_type . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1' " . $var_identification . " " . $var_plaque_enrollm . " " . $var_request_type . "
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " IN (" . $var_implode . ")

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_crt_request_data." . d_azp_crt_request_data_t_request_nro . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_base() {
			$var_list = array(); $var_client = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '4'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_list[] = "'" . $value['lbl_azp_gsc_request_t_number_request'] . "'"; endforeach; }

			# Convertir elementos de un array en string
			$var_implode = implode(",", $var_list);
			if ($var_implode == '') { $var_validate = "''"; } else { $var_validate = $var_implode; }

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					tc_azp_gsc_request." . d_azp_gsc_request_t_inform_client . " AS 'lbl_azp_gsc_request_t_inform_client',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . ") AS 'lbl_azp_gsc_request_t_count'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " IN (" . $var_validate . ")

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_idntf() {
			$var_list = array(); $var_client = '';
			if (isset($_GET['field_idntf'])) { $var_identification = $_GET['field_idntf']; } else { $var_identification = ''; }
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . " = '4'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_list[] = "'" . $value['lbl_azp_gsc_request_t_number_request'] . "'"; endforeach; }

			# Convertir elementos de un array en string
			$var_implode = implode(",", $var_list);

			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . ") AS 'lbl_azp_gsc_request_t_count'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " IN (" . $var_implode . ")
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_identification . " = '" . $var_identification . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_ultime() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC

				ORDER BY tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " DESC
				LIMIT 1
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_base() {
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					tc_azp_gsc_request." . d_azp_gsc_request_t_request_date . " AS 'lbl_azp_gsc_request_t_request_date'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC

				ORDER BY tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " DESC
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_montlhy() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					ELT(MONTH(tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . "), 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
						'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre') AS 'lbl_azp_gsc_request_t_shipping_date',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . ") AS 'lbl_azp_gsc_request_t_number_count'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "
						
				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					AND (tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " != ''
						OR tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " IS NOT NULL)
				GROUP BY LEFT(tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . ", 7)
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_gestion() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . ") AS 'lbl_azp_gsc_request_count',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_state." . d_azp_gsc_state_t_name . " AS 'lbl_azp_gsc_state_t_name'
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				INNER JOIN " . t_azp_gsc_state . " tc_azp_gsc_state
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_state . "
						= tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
						
				WHERE tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'

				GROUP BY tc_azp_gsc_state." . d_azp_gsc_state_id_azp_gsc_state . "
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_total() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . ") AS 'lbl_azp_gsc_request_t_number_count'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "
						
				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
			");
		}

		# Query Sql Select
		final public function sql_controller_gsc_rp_effecty() {
			$var_request = '';
			# Linea de codigo con una variable y array para seleccionar los datos de la tabla segun el id
			$var_sql = $this->db->select('*', t_azp_user, d_azp_user_id_azp_user . " = '" . $_SESSION[SESS_APP_ID] . "' AND " . d_azp_user_v_id_azp_role . " = '9'");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (false != $var_sql) { foreach ($var_sql as $key => $value): $var_client = $value[d_azp_user_v_id_azp_fct_client]; endforeach; }
			# Consulta para identificar los nuevos registros en la tabla
			$var_sql = $this->db->query("
				SELECT
					tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " AS 'lbl_azp_gsc_request_id_azp_gsc_request',
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "

				WHERE tc_azp_fct_client." . d_azp_fct_client_m_deleted . " = '1'
					AND tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_id_azp_gsc_request . " = '" . $this->id . "'

				GROUP BY tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " ASC,
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " ASC
			");
			# Validar si la sentencia query ejecutada es correcta y no falsa
			if (true == $var_sql) { foreach ($var_sql as $key => $value) : $var_request = $value['lbl_azp_gsc_request_t_number_request']; endforeach; }
			# Seleccionar los registros de la tabla
			return $this->db->query("
				SELECT
					tc_azp_fct_client." . d_azp_fct_client_t_name . " AS 'lbl_azp_fct_client_t_name',
					tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " AS 'lbl_azp_gsc_request_t_number_request',
					COUNT(tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . ") AS 'lbl_azp_gsc_request_t_number_count'
					
				FROM " . t_azp_gsc_request . " tc_azp_gsc_request

				INNER JOIN " . t_azp_gsc_client . " tc_azp_gsc_client
					ON tc_azp_gsc_request." . d_azp_gsc_request_v_id_azp_gsc_client . "
						= tc_azp_gsc_client." . d_azp_gsc_client_id_azp_gsc_client . "

				INNER JOIN " . t_azp_fct_client . " tc_azp_fct_client
					ON tc_azp_gsc_client." . d_azp_gsc_client_v_id_azp_fct_client . "
						= tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . "
						
				WHERE tc_azp_fct_client." . d_azp_fct_client_id_azp_fct_client . " = '" . $var_client . "'
					AND tc_azp_gsc_request." . d_azp_gsc_request_t_number_request . " = '" . $var_request . "'
					AND (tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " != ''
						OR tc_azp_gsc_request." . d_azp_gsc_request_t_shipping_date . " IS NOT NULL)
			");
		}
		
		# Query Sql Select
		final public function sql_azp_crt_request_type() {
			# Seleccionar los registros de la tabla
			return $this->db->select('*', t_azp_crt_request_type, d_azp_crt_request_type_m_deleted . " = '1' AND " . d_azp_crt_request_type_m_status . " = '1'");
		}

		public function __destruct() {
			parent::__destruct();
		}
	}
?>